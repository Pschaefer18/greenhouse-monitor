{"version":3,"sources":["../../../../AppData/Roaming/npm/node_modules/parcel-bundler/node_modules/process/browser.js","../src/constants.ts","../src/assert.ts","../src/crypt.ts","../src/deepCopy.ts","../src/global.ts","../src/defaults.ts","../src/deferred.ts","../src/emulator.ts","../src/environment.ts","../src/errors.ts","../src/json.ts","../src/jwt.ts","../src/obj.ts","../src/promise.ts","../src/query.ts","../src/sha1.ts","../src/subscribe.ts","../src/validation.ts","../src/utf8.ts","../src/uuid.ts","../src/exponential_backoff.ts","../src/formatters.ts","../src/compat.ts","../../src/component.ts","../../src/constants.ts","../../src/provider.ts","../../src/component_container.ts","../../src/logger.ts","node_modules/idb/build/wrap-idb-value.js","node_modules/idb/build/index.js","../../src/platformLoggerService.ts","../../src/internal.ts","../../src/errors.ts","../../src/firebaseApp.ts","../../src/api.ts","../../src/indexeddb.ts","../../src/heartbeatService.ts","../../src/registerCoreComponents.ts","../../src/index.ts","../../index.ts","../src/core/version.ts","../src/core/storage/DOMStorageWrapper.ts","../src/core/storage/MemoryStorage.ts","../src/core/storage/storage.ts","../src/core/util/util.ts","../src/core/AppCheckTokenProvider.ts","../src/core/AuthTokenProvider.ts","../src/realtime/Constants.ts","../src/core/RepoInfo.ts","../src/core/stats/StatsCollection.ts","../src/core/stats/StatsManager.ts","../src/realtime/polling/PacketReceiver.ts","../src/realtime/BrowserPollConnection.ts","../src/realtime/WebSocketConnection.ts","../src/realtime/TransportManager.ts","../src/realtime/Connection.ts","../src/core/ServerActions.ts","../src/core/util/EventEmitter.ts","../src/core/util/OnlineMonitor.ts","../src/core/util/Path.ts","../src/core/util/VisibilityMonitor.ts","../src/core/PersistentConnection.ts","../src/core/snap/Node.ts","../src/core/snap/indexes/Index.ts","../src/core/snap/indexes/KeyIndex.ts","../src/core/util/SortedMap.ts","../src/core/snap/comparators.ts","../src/core/snap/snap.ts","../src/core/snap/LeafNode.ts","../src/core/snap/indexes/PriorityIndex.ts","../src/core/snap/childSet.ts","../src/core/snap/IndexMap.ts","../src/core/snap/ChildrenNode.ts","../src/core/snap/nodeFromJSON.ts","../src/core/snap/indexes/PathIndex.ts","../src/core/snap/indexes/ValueIndex.ts","../src/core/view/Change.ts","../src/core/view/filter/IndexedFilter.ts","../src/core/view/filter/RangedFilter.ts","../src/core/view/filter/LimitedFilter.ts","../src/core/view/QueryParams.ts","../src/core/ReadonlyRestClient.ts","../src/core/SnapshotHolder.ts","../src/core/SparseSnapshotTree.ts","../src/core/stats/StatsListener.ts","../src/core/stats/StatsReporter.ts","../src/core/operation/Operation.ts","../src/core/operation/AckUserWrite.ts","../src/core/operation/ListenComplete.ts","../src/core/operation/Overwrite.ts","../src/core/operation/Merge.ts","../src/core/view/CacheNode.ts","../src/core/view/EventGenerator.ts","../src/core/view/ViewCache.ts","../src/core/util/ImmutableTree.ts","../src/core/CompoundWrite.ts","../src/core/WriteTree.ts","../src/core/view/ChildChangeAccumulator.ts","../src/core/view/CompleteChildSource.ts","../src/core/view/ViewProcessor.ts","../src/core/view/View.ts","../src/core/SyncPoint.ts","../src/core/SyncTree.ts","../src/core/util/ServerValues.ts","../src/core/util/Tree.ts","../src/core/util/validation.ts","../src/core/view/EventQueue.ts","../src/core/Repo.ts","../src/core/util/libs/parser.ts","../src/core/util/NextPushId.ts","../src/core/view/Event.ts","../src/core/view/EventRegistration.ts","../src/api/OnDisconnect.ts","../src/api/Reference_impl.ts","../src/api/Database.ts","../src/register.ts","../src/api/ServerValue.ts","../src/api/Transaction.ts","../src/api/test_access.ts","../src/index.ts","app.js"],"names":["process","module","exports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","call","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","nextTick","args","Array","arguments","i","push","Item","array","prototype","apply","title","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","stringToByteArray","instanceOfAny","object","constructors","some","c","idbProxyableTypes","cursorAdvanceMethods","getIdbProxyableTypes","IDBDatabase","IDBObjectStore","IDBIndex","IDBCursor","IDBTransaction","getCursorAdvanceMethods","advance","continue","continuePrimaryKey","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","a","promisifyRequest","request","promise","Promise","resolve","reject","unlisten","removeEventListener","success","error","wrap","result","addEventListener","then","value","set","catch","cacheDonePromiseForTransaction","tx","has","done","complete","DOMException","idbProxyTraps","get","target","prop","receiver","objectStoreNames","undefined","objectStore","replaceTraps","callback","wrapFunction","func","transaction","storeNames","unwrap","sort","includes","transformCachableValue","Proxy","IDBRequest","newValue","u","_wrapIdbValue","require","openDB","blocked","upgrade","blocking","terminated","indexedDB","open","openPromise","event","oldVersion","newVersion","db","deleteDB","deleteDatabase","readMethods","writeMethods","cachedMethods","Map","getMethod","targetFuncName","replace","useIndex","isWrite","method","storeName","store","index","shift","all","oldTraps","appName","appCompatName","analyticsName","analyticsCompatName","appCheckName","appCheckCompatName","authName","authCompatName","databaseName","databaseCompatName","functionsName","functionsCompatName","installationsName","installationsCompatName","messagingName","messagingCompatName","performanceName","performanceCompatName","remoteConfigName","remoteConfigCompatName","storageName","storageCompatName","firestoreName","firestoreCompatName","packageName","setLogLevelImpl","enableLogging","MAX_NODE","setMaxNode","nodeFromJSON","setPriorityMaxNode","referenceConstructor","errorPrefixFxn","errorPrefix","enableLoggingImpl","SDK_VERSION","_app","_database","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","getDatabase","x","y","readingsRef","ref","child","snapshot","exists","records","val","Object","keys","forEach","key","Timestamp","Temperature","console","log","TESTER","document","getElementById","Plotly","newPlot","margin","t","tempData","domain","text","type","mode","delta","reference","gauge","axis","range","layout","width","height"],"mappings":";AAAA;AACA,AyHDA,IzHCIA,AyHDJqM,IAAA,GzHCW,AyHDXnE,GzHCcjI,IyHDd,EzHCoB,CAACC,OAAO,GAAG,CAAC,CAAC;AyHAjC,IAAAoM,SAAA,GAAApE,OAAA;AzHEA,AyHAA;AzHCA,AyHAA;AzHCA,AyHAA,IAAMqE,cAAc,GAAG;AzHCvB,AwBmBA,EiGnBIC,MAAM,EAAE,yCAAyC;A7FNrD,E6FOIC,UAAU,EAAE,uCAAuC;AzHCvD,AwBmBG,AK3BH,E4FQIC,EzHAAvM,E6BREyD,O4FQS,EAAE,I5FRE,C7BQC,E6BREA,CAACC,MAAM,EAAEC,YAAY,KAAKA,YAAY,CAACC,IAAI,CAAEC,CAAC,IAAKH,G4FQG,G5FRG,YAAYG,CAAC,CAAC;A7BS7F,A6BT8F9D,E4FS1FyM,EzHAAvM,EwBmBS,CK5BiF,CAAA2B,CAAA,E4FSjF,C5FTiF6B,C4FS/E,EjGmBO,CAAA,MxBnBA,G6BTwE,W4FSxD;AzHEtC,A6BTA,ELqCE,AiG7BEgJ,E5FRA3I,K7BSK5D,MyHDQ,EAAE,I5FRE,I7BSIA,CAAA,EAAG,wByHD0B;A5FPtD,E7BSI,AyHDAwM,E5FRA3I,I7BSM,IAAI5D,KAAK,CAAC,CyHDC,EAAE,G5FRC,W4FQa,gBzHCgB,CAAC;AACtD,A6BTA,E4FQIwM,KAAK,EAAE,2CAA2C;AzHEtD,A6BTA,E4FQIC,OzHCKxM,A6BTA4D,M4FQQ,EAAE,WzHCS5D,CAAA,A6BTC4D,CAAA,C7BSG,C6BTA;A4FS9B,CAAC,CzHCC,A6BTA,M7BSM,C6BTEF,G7BSE3D,KAAK,CAAC,Q6BTS,KACpB2D,iBAAiB,GAAG,CACjBG,C7BO2C,CAAC,S6BPjC,EACXC,cAAc,EACdC,QAAQ,EACRC,SAAS,EACTC,cAAc,CACjB,CAAC;A7BGV,AwB4BK,AK9BL;A7BGC,AyHAC,A5FFF,EL8BE,WxB5BW,AwB4BX,CACW,IAAO,EACP,eAAmC,EACnC,IAAmB,EAAA;AiG9B9B,A5FFF,E7BEI,EwB4BS,AiG5BLwI,EzHAA,CyHAG,CjG4BM,CAAA,AK9BRvI,C4FEK,GjG4BG,CiG5BHwI,EjG4BD,IAAI,YiG5BU,A5FFKxI,CAAA,C4FEJ8H,C5FFO,a4FEO,CAAC;AjFlB3C,AVAA,EDiBI,E7BEI,AwB4BK,AM/CbtE,I9BmBY,AwB4BgB,CAAA,AK9BhB/D,M7BEO1D,E8BnBnB,GAAA0H,IN+C4B,CxB5BC,EwB4BhB,AM/Cb,EDiBgC,C7BEE,I6BDzBhE,M7BCmC,EAAE,AwB4BlB,YK7BC,GAAG,CACpBK,SAAS,CAACpC,SAAS,CAACuC,OAAO,EAC3BH,SAAS,CAACpC,SAAS,CAACwC,QAAQ,EAC5BJ,SAAS,CAACpC,SAAS,CAACyC,kBAAkB,CACzC,CAAC;A4FFR,A3FjBF,ADoBA,ILyBa,ExB5BDzE,EwB4BK,CAAA,IAAA,GAAJ,IAAI,ExB5BW,GAAGK,UAAU;AyHCvC,A3FjBF,ADoBA,I7BHQ,AwBQN,AiGRMsI,CzHAC,CyHAC,A5FGJjE,ELKa,CAAA,AiGRN,EzHAE,EyHAFqI,S5FGS,GAAG,CLKN,GAAG,AKLOpI,KLKF,AiGRH,EAACkI,A5FGW,EAAE,C4FHV,CAAC;AAC3B,A3FjBF,ADoBA,ILKE,AiGRIG,CAAC,CzHAKhN,A6BGN4E,E4FHI,EAAE,YzHAgB,E6BGJ,C7BHO1E,E6BGJ,IAAIyE,OAAO,EAAE,C7BHO;A4BP5C,A6FQD,A3FjBF,ADoBA,I7BHQ,AyHAFsI,CAAC,C5FGDpI,E4FHI,EAAE,oB5FGkB,GAAG,IAAIF,OAAO,EAAE;ALMzC,AIML,AE/BA,ADoBA,E7BHI,CAAC,CAAC,E6BGAG,K7BHOxE,CAAC,EAAE,M6BGI,GAAG,IAAIqE,OAAO,EAAE;A4FFlC,A3FjBF,ADoBA,I7BHQ3E,AwBQN,EKLI+E,ELKQ,CAAA,WxBRU,CwBQV,ExBRa7E,CwBQE,CAAA,CAAE,CKLJ,GAAG,IAAIyE,K7BHS,E6BGF,EAAE;ADYxC,A6FdD,A3FjBF,ADmB4C5E,E7BFxC,EwBSF,AiGTMmN,G5FEoC,CLO1C,AKP0ClI,CLO1C,AKP0C,GAAAD,G4FFzB,GAAG,IAAAoI,IjGSH,GAA0B,IKPD,ELOC,AiGTpB,CjGSoB,CiGTnBxE,EAAE,EAAE,GAAG,CAAC;A7Fe3B,A6FdL,A3FjBF,ADmBA,E7BFI,EwBUF,AiGVAlC,EzHAM,A4BcK,EJJM,CAAA,AM3BVuB,ADmBA/C,MDYa,AE/BP+C,CAAC9E,C2FiBX,C7Fc8B,C6Fd7B,C7Fc+B,AE/BjB,EAAEb,C2FiBhB+K,E5FEmBnI,CLQN,AKROC,GLQiC,AM3B9B,EAAE,EN2BgC,AKR9B,EAAE,G4FFxB,EAACgI,WAAW,MAAM,CAAC,CAACpH,IAAI,CAAC,UAACuH,QAAQ,EAAK;A7FgBlD,E6FfI,A3FlB6BpF,ADoB7B,E7BFI,EyHAAoF,EzHAI,A6BEFlI,CCpB8B,K2FkBxB,CzHAG5E,AyHAF+M,A5FEA,GAAG,G4FFG,C5FEClI,C4FFC,EAAE,EzHAI,E6BEA,CAAC,CAACC,C7BFG,M6BEI,EAAEC,E7BFI,EAAE,E6BEA,KAAK;ELqBnD,AMzCwC4C,E2FmBpC,A5FEE,E7BFIjI,EyHAAsN,C3FnBqC,CDqBnChI,K4FFK,GAAG8H,A5FEA,GAAG9H,CLoBH,AKpBG,CLoBF,CxBtBO,EyHAA,CzHAGhF,AwBsBa,AiGtBfiN,A5FEA,ELoBe,CiGtBZ,EAAE,OzHAS;E8BnBMrF,E9BoB3C,AwBsBJ,AiGtBEsF,CzHAG,C6BEGvI,ELoBJ,CAAC,CiGtBG,A3FpB+C,C9BoB5C,AyHAFwI,E5FEM,CAAClI,C4FFH,CAAC+H,OAAO,CAAC,CAACI,CjGsBD,GAAG,GiGtBK,CjGsBD,AiGtBE,A5FEI,CAAC,S4FFJC,A5FEa,EAAEnI,C4FFZ,EAAK,I5FEc,CAAC;AEhC3D,EDU6D2C,EN2CzD,ExBtBQnI,AyHAJ+M,A5FEI9H,C4FFH,CAACrD,GjGsBC,CiGtBG,CAAC0L,A5FEI,CAAC/H,CLoBL,KiGtBO,CAACoI,GzHAO,AyHAJ,CAAC,CAACC,CzHAKzN,M6BEM,CAAC,C4FFH,CAAC,K5FES,EAAEsF,G7BFG,E6BEE,CAAC;ACvBiB,CAAC,G9BsBjE,A8BtBoE,ADwBpE,CCxBqE,ADwBpE,C4FFDuH,A3FtBsE,C2FsBrE,CAACpL,A3FtBsE,I2FsBlE,CAAC0L,OAAO,CAACK,GAAG,CAAC,CAACE,WAAW,CAAC;EzHCpC,AwBuBF,AM7CE,C9BsBC,CAAC,A6BEE,E4FFAC,E3FtBE7I,EDwBIO,C7BFDnF,CAAC,CyHAC,CzHAC,AyHAA0N,C3FtBC,E2FsBE,A5FEE,C4FFDT,A3FtBAlF,EDwBI5C,CAAA,CLqBF,CAAC,EiGvBI,CAACmI,A5FEE,CCxBD,CAACtF,C2FsBC,CAAC,CAACwF,C3FtBC,CAAC5K,IAAI,EAAEb,CN6CQ,EAAA,AiGvBL,CAAC,G3FtBG,CAAC;AUI9C,EVHC,E9BsBIpC,AwBuBJ,AiGvBE,CAAC,CAAC,A5FEIoF,ELqBJ,AM7CEkD,CN6CD,IKrBU,CAAC5C,IAAI,CCxBH,ADwBIT,G7BFC,A8BtBF,G9BsBK9E,CwBuBH,AM7CFuF,ADwBQ,CAACC,ELqBJ,IKrBU,CAAC,CAAC,MCxBb,EAACV,C9BsBmB,EwBuBF,IM7CV,CAAC;AUOrC,ExCgBI,A8BtBA,EUMJ,AhBuCI,AiGvBM,E3FtBFgD,ADwBI3C,KLqBD,EM7CI,CDwBK,CLqBL,AM7CE,CDwBK,QWlBP,EAAC,IAAI,EAAE,OAAO,EAAE,KAAK,CAAC;AxCiBrC,CAAC,GAAG,A8BtBIL,ADwBA,CAAC,MCxBM,CAACW,gBAAgB,CAAC,eAAe,EAAG2C,KAAK,IAAK;A9BuB7D,EwBwBE,EiGxBE,A5FEI,ECxBIN,E2FsBF+F,CzHADzN,C6BEKkF,GCxBK,C2FsBH,A3FtBI,CDwBD,ELsBF,AiGxBEwI,CjGwBD,AM9CEvI,ADwBED,C7BFHlF,A6BEG,C7BFFC,GAAG,AwBwBY,CKtBP,C7BFH,AwBwBU,AiGxBR,CAAC0N,O3FtBJ,EAACjJ,K2FsBiB,CAAC,C3FtBX,CAACU,M2FsBkB,A3FtBZ,C2FsBa,A3FtBZ,EAAE4C,KAAK,CAACC,UAAU,EAAED,KAAK,CAACE,UAAU,EAAE,IAAA/C,eAAI,EAACT,OAAO,CAACkC,WAAW,CAAC,CAAC;AFsCrG,E5BfC,EwBwBA,AiGxBAgH,A3FtBI,CAAC,C9BsBDpO,A8BtBE,ADwBEsF,ELsBJ,CAAC,CiGxBC,CAAC+I,C5FEO,CAACnJ,K4FFD,CAAE+I,C5FEM,CLsBL,AKtBMvI,C7BFH,EwBwBA,CiGxBE,C5FEM,C7BFHrF,AyHAD,A5FEK,C4FFJ,CjGwBA,QxBxBU,EAAE;E8BrBrC,E9BsBI,AwBwBJ,AITQ,E6FfR2M,A5FEQzH,C4FFP,EAAEyH,CAAC,CjGwBG,CITC,ECbQ,CLsBL,CKtBO;ADoBrB,EE3CG,E9BsBI,A6BEA,CAAC,C4FFLC,A3FtBIhF,CF2CP,A6FrBI,C7FqBJ,C6FrBMgF,EzHAQ5M,E8BtBA,EACP6E,CF0CP,GAAA,E5BrBwB,CAACzE,A8BrBX,CAACoF,E9BqBa,EAAE,A4BqB9B,C5BrB+B,CAAC,U8BrBD,CAAC,SAAS,EAAE,MAAMoC,OAAO,EAAE,CAAC;AFmC5D,CAAA,C5BbI,AwByBF,AM9CEM,E2FoBK,A5FGDrD,C4FHE,CAAC,EAAE,G7FcD,ACXG,CAACW,CCvBD,CACNC,IAAI,CFiCO,AEjCL6C,EFiCK,AEjCH,IAAK,GN6CM,AKvBI,CLuBH,AKvBI,QLuBkC,CKvBzB,CLuByB,CKvBvBlD,OAAO,CAAC;E7BDhD,A4BaF,EJYE,AM7CI,ADsBAP,E4FHJoJ,EjG0BI,AM7CIlG,CN6CH,CIZP,CAAA,ACXa,C4FHL,A5FGMvC,E4FHJ,I3FnBU,CFiCpB,CAAA,AEhCU8C,EAAE,CAAC9C,GN4CW,CIZxB,CAAA,ACX8B,CLuBH,AKvBI,EDW/B,CAAA,CAAA,GAAA,ACXsC,CLuBH,CKvBKH,CCrBX,CAAC,GFgCzB,ACXwC,CAAC,GCrBT,EAAE,MAAM0C,UAAU,EAAE,CAAC;E9BoBxD,A4BaF,ACXE,CAAC,CLuBD,AM5CI,ADqBF,E7BFE,CAACpI,CyHFKuO,A3FjBFpG,C2FiBG,C7Feb,CJYS,AIZT,A6Ffe,IjG2BF,CM5CK,EACRQ,CF+BV,CAAA,AE/BY,CAAC9C,E9BkBU,KAAK3F,C4Ba5B,CAAA,GAAA,CAAA,CAAA,EE/B6B,CF+B7B,AE/B8B,M9BkBc,G4BarC,C5BbyC,CAACF,I8BlBJ,EAAE,MAAMmI,I9BkBY,I8BlBJ,C9BkBS9H,C8BlBP,CAAC,Q9BkBgB,EAAE;E4BclF,AE/BE,ADoBA8E,CCpBC,C9BkBGnF,A8BlBF,CACGiG,C2FcU,G5FKR,CDWT,AE9BY,ADoBLH,CDUP,AE9Ba,GDoBF,CAAEC,ECpBM,CAAE,CF8BrB,AE9BsB,C9BiBA,A4BatB,AE9BuB,ADoBL,G7BHO1F,C6BGF,EDUvB,CAAA,GAAA,CAAA,CAAA,C5BbmC,E4BanC,MAAI;AJaL,EIZC,AE9BE,E9BiBI,AyHJY,A5FOZ,C4FPa,CAAC,G3FbXkI,CF8BT,C5BbalI,A4Bab,QAAA,CAAA,AE9BoB,C9BiBG,CAACI,GAAG,C4Ba3B,C5Bb6B,A4Ba7B,C5Bb8B,CAAC,C4Ba/B,CAAA,CAAA,GAAA,MAAI;AG3CH,ADcH,E9BiBI,A4BaF,E6FjBE,A5FOI,I4FPA+N,E7FiBN,CAAA,K6FjBc,G7FiBd,A6FjBiB,C7FiBjB,A6FhBI,O7FgBJ,CAAA,GAAA,CAAA,CAAA,GAAA,OAAK;AH3DP,AK8BA,E9BiBI,A4BaF,ECVM,E7BHA,A+BtBK,A0FmBLC,E5FMI1I,EDUV,CAAA,C6FhBY,C5FMG,C4FND,K7FgBd,CAAA,KCV2B3B,GDU3B,CAAA,EGnCoC,CHmCpC,AGnCoC,CHmCpC,CAAA,ACVoC,EAAE,CDUtC,QAAM;AACR,AE9BA,CF8BC,CGnCC,CH4BU,C5BNJ,E6BGIM,E4FPMsI,CAAC,E7FUC,A6FVC,CAAC,C1FlBpB,A0FkBqB,C1FlBQ,C0FkBN,C7FUL,A6FVM,CAAC,K5FOC,CDGR,AG5BwC,AFyB/BhH,CDGT,CG5BwC,CFyB5B,CAACD,KDGb,ACHkB,EAAEb,CDG5B,MCHmC,CAAC,CDG5B,GAOnB,CAAA,CAAA,CAAA,CAAA;AAED,AE/BA,I9BiBQ,A+BvBuB,AF0BvB,EDWF,EGrCkC,A0FkBX+H,C1FlBW,A0FkBV,EzHKfjN,AyHLiB,CAAC,CAAC,EAAE,CAAC,E1FlBG,GAAT,EHqCR,GAA0C,C5BdlC,CAACS,E+BvBQ,C/BuBL,EAAE,CAAC,CAAC;A8BhBvC,E9BiBI,A4BcF,C5BdG,CAAC,A6BGE,E4FT+B,CAAC,E7FoB/B,E5BdGH,A4BcD,C5BdE,EAAC,K4BcK,CAAC,KAAK;AE9BzB,EF+BE,ACXE,CAAC,C7BHG,A6BGF,CACG2F,C4FVDF,EzHMI,E6BIE,CDUH,A6FpBE,A5FUE,EDUF,A6FpBEkH,CAAC,CAACA,CAAC,CAAC/L,A5FUE,CAAE,CAAC,CAAC,CDUJ,CAAC,C6FpBG,GAAG,CAAC,CAAC,C7FoBD;AE9B7B,EF+BE,ACVE,I7BJQ,AyHNJgB,E7FoBA,CE/BC0G,CF+BC,C6FpBG,EAAE,I3FXEA,CF+BC,AE/BA1F,CF+BC,GE/BG,CF+BC,CE/BC;EFgCtB,AGtCA,ADMwB+E,ADsBtB,I7BJQ,E4BcJ,A6FrBSyG,E7FqBP,E6FrBW,CzHOF1O,CyHPI,I7FqBL,CAAC,IAAI,AGtCA,CAAA,EAAA,G/BwBY,CAACU,IAAI,CAAC,IAAI,EAAED,GAAG,EAAE,CAAC,CAAC;ACrDtD,A6BmCkC,CAAC,CFiCjC,ACVEsE,E7BJI,A+BxBJ,ADKkC,C9BmB7B,A8BnB8B,C9BmB7B,AyHR2B,A3FXG,C2FWF,C3FXI,CFiCjC,CGtCC,CHsCC,E5BdKzE,CAAC,EAAC,G4BcC,AGtCA,CHsCC,EGtCE,CF4BG,CAAC0F,CDUD,CGtCC,CAAC,AF4BE,CAACb,OAAO,CE5BD,CAAC,AF4BED,OAAO,CAAC,IE5BE,EAAE;EHuCjD,AEjCE,ADuBA,I7BJQ,AyHRJyJ,E3FXEzJ,CDuBCC,CDUD,A6FtBE,E7FsBA,A6FtBE,G3FXG,CDuBC,ECvBEkD,EFiCA,CAAC,E6FtBI,I3FXI,CAACQ,cAAc,CAAC3F,IAAI,CAAC;AWpClD,AZ4DA,CDUC,CEjCG,I9BmBQ,AyHRJ0L,A3FXA3G,I2FWI,EAAE,CzHQKjI,A8BnBJ,EACPkF,OAAO,CAACW,G2FUY,GzHQO,CAACnF,IAAI,CAAC,IAAI,A8BlBb,CAAC,C9BkBcD,GAAG,EAAE,CAAC,CAAC,C8BlBZ,EAAE,MAAMwH,OAAO,EAAE,CAAC;AFkC5D,ACXA,ECtBI,E9BkBI,A+BxBJ,E0FgBI4G,G3FVG,ADsBF3I,EE5BE,A0FgBE,EAAE,A3FVJP,OCNS,CACb,GAAG,CAAC,GDKI,EAACT,GCLG,IAAG,ADKC,CAAC,CAACY,ADsBcI,CAACC,EAAE,CCtBb,CAAC,ADsBc,MCtBRW,SAAS,CAAC;AAC9C,E9BkBI,A6BIA,IE3BI,E0FcSgI,E1FdL,O0Fcc,EAAE,e1FdQ,CAAC,QAAQ,CAAC,EAAE;A/B0BhD,A4BaG,AEhCH,EDqBI,I4Fd4B,A3FP1BhG,ADqBElE,C4FdyB,C1FbvB,MAAM,GDMC,GAAG,CCNG,ADMF,GCNK,AF2BA,CAACwB,CCrBD,EAAE,ADqBE,CAACD,EAAE,CE3BC,AF2BA,CE3BC,CF4B3B,ECtB4B,EAAE,OCNS,CDMD,CCNqB,CDMnB,YAAY,EAAE,OAAO,CAAC;A9BoBtE,A4BaA,AEhCA,EDsBI,IDUE,A6FzBE4I,A3FPFhG,ECNI,AF4BA1C,C7BHD1F,EyHZI,C5FeC,C4FfC,E1FbE,AF4BA,GE5BG,ADMF,CDsBGyE,EDUA,AEhCA,CAAC,E9BmBEzE,A4BaU,C5BbTC,A+BzBE,CAAC,AF4BA,CCtBD,ADsBE,CAACyE,CCtBD,E9BmBE,C4BaW,C5BbT,A4BaU,AGtCR,CDMD,CDsBG,CCtBD,CFgCW,AGtCR,AF4BAC,MAAM,CE5BC,ADMF,CCNG,CDMD,EDsBI,IE5BI,CDMD,CCNG,ADMF;AF6CtD,AE5CA,E9BmBI,E6BGI,E7BHArF,A+BzBC,ADMH+I,CCNG,C0FYQgG,E5FgBHzJ,E4FhBO,C1FZN,C0FYQ,I5FgBD,CCtBH,EDsBMA,CCtBH,ADsBG,E7BHC,E8BnBA0D,CDsBK,E7BHA1I,A8BnBF,EAAE,U9BmBY,EAAE;AyBhD1C,AK8BH,I9BmBQ,E6BGI4F,EE5BF,AF4BI,CCtBL+C,ADsBM1D,C4FjBUyJ,K1FXR,A0FWa,EAAE,CAAC,A3FLf/F,CCNG,ADMFxC,G2FKkB,EAAE,C3FLd,E2FKiB,A3FLfC,CDsBO,CAAC,ECtBJ,EAAE,MDsBY,EAAEL,QAAQ,CAAC;AJnExD,EK8CI,E9BmBI,E+BzBC,ADMD,ADsBIH,CJpEZ,CAAA,AgGkD4C,A3FJlCO,ADsBI,CAAClB,E7BHAjF,G8BnBC,GL9ChB,GAAA,GzBiE2B,CAACK,E8BnBAqD,EDsBM,CJpElC,AIoEmC,C7BHD,CAAC,K6BGO,CCtBH,CDsBKyB,GCrBpC,EAAEiB,ADqBuC,CAAC,GCrBpC,IAAID,MAAM,CAAC,IACjB,OAAOC,IAAI,KAAK,QAAQ,CAAC,EAAE;AL/B5B,EzBiDH,E+BzBE,ADQE,CCRD,CNxBM,AMwBL,A0FSsC,A5FmBlCR,CE3BL,CF2BO,CAACX,IE3BF,CAAC,SAAS,CNzBQ,GAAG,AMyBP,CF2BO,CAAC,OE3BC,AF2BM,CE3BL,CNzBQ,AM0BtC,AF0BqCE,IE1BjC,CAAC,AF0BqC,CAAC,EE1BnC,CAAC;E/BwBZ,A8BjBA,E2FCE,A5FmBE,C4FnBD,A5FmBE,C4FlBJ;A7FyCF,AGhDF,AL7CD,E1BoEI,A8BjBA,E2FGA,A5FiBI,E7BHA,A8BjBAsD,C9BiBC/I,CyHdDiP,E5FiBM5I,I4FjBA,GAAG,C5FiBK,CCpBD,CAACG,CDoBGH,CAAA,CCpBA,CAACK,C9BiBC,E6BGI,CCpBD,CAAC,C9BiBCvG,C8BhBxB,OAAO4I,W9BgBoC,E8BhBvB,CAACvC,C9BgB0B,CAACxG,C8BhBxB,CAAC0G,IAAI,CAAC,W9BgBoC,KAAKpG,YAAY,EAAE;A4B0B7F,AGhDA,EDOI,E9BgBIN,E4ByBF,A6FxCakP,A5FkBP9J,ECnBF8D,G2FCc,EAAE,A5FkBP,EAAE,C4FlBQ,G7FwCV,G5BzBO,A4ByBJ,AEzCE,G9BgBK5I,A8BhBFoG,IAAI,CAACyC,O9BgBS,A8BhBF,CAAC,YAAY,EAAE,EAAE,CAAC;EF0CvD,AEzCE,CFyCD,C5BzBK,EyHhBuBgG,A5FmBnB7J,ECnBF8D,G9BgBK9I,A4ByBJ,CAAC,A6FzCyB,EAAE,A5FmBnB,ECnBF,ADmBI,CDsBL,EEzCIoG,CFyCD,G5BzBO,A8BhBF,C9BgBG/F,C4ByBH,GEzCKuI,E9BgBI,CAAC,W8BhBS;A7BvCzC,EDwDC,A4ByBF,AEzCE,CFyCD,C6F1CwC,A5FoBnC,C4FpBoC,A5FoBnC,GCnBCG,GFyCC,CAAC,GEzCK,GAAGP,CFyCD,GAAG,KAAK,GEzCK,CAACvB,QAAQ,CAAC2B,cAAc,CAAC;A7BtCzD,EDuDI,A4ByBF,AEzCE,CFyCD,C6F1CCiF,A5FoBI,E7BHA,IyHjBE,A5FoBI1I,CDsBH,A6F1CA2I,C7F0CC,GCtBO,CDsBH,E6F1CE,A5FoBI3I,CDsBH,A6F1CA,A5FoBG,KAAM,CDsBH,S6F1CS,EAAE8I,QAAQ,EAAEU,MAAM,CAAC;AhFxClD,EbmFD,A6F1CE,A3FCA,CFyCD,C5BzBK,E6BGI5J,KDsBD,CAAC,ACtBM,CAACa,EAAE,CDsBL,ACtBMT,GDsBH,ECtBQ,IDsBF,ACtBM,IAAIa,YAAY,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;A5BzDzE,AwCFH,AgFuCK,CAAC,C7F2CJ,A6F3CK,A3FEH,CFyCD,C5BzBK,A8BhBF4C,EDmBM5D,K7BHGtF,A4ByBJ,CAAC,ECtBQ,EAAE,CDsBL,CEzCG,EFyCA,EEzCI,CAACoJ,M9BgBQ,CAACzI,C8BhBD,GAAGuD,E9BgBI,CAAC,K8BhBG,GAAGD,cAAc,EAAElC,SAAS,CAAC,IACjE,EAAEsH,OAAO,IAAIR,WAAW,CAACtB,QAAQ,CAAC2B,cAAc,CAAC,CAAC,EAAE;A7BtC/C,AwCHN,CbkFN,C5BzBG,CAAC,CAAC,AyCzDK,AX0CH,ADkBA,CAAC,C5BzDI,KDsDA7I,CAAC,EAAC,CCtDO,AwCHA,GxCGG,AwCHA,EAAE;AboF3B,AGjDG,AUjCH,AgFwCI,ExHtCF,A6BuCE,E9BeI,A6BGA6F,EAAE,CAACN,C7BHC,e6BGe,CAAC,UAAU,EAAES,QAAQ,CAAC;AEzBjD,A0FOI,E3FCA,EDkBIH,E7BHI,A6BGF,CAACN,CClBD0D,CCRD,KDQO,GAAG,MDkBQ,CAAC,OAAO,CClBhBA,CCRc,ADQEC,ADkBE9D,CE1BH,IF0BQ,CAAC,GE1Be,ADQd,ECRc,ADQZ,GAAGjE,IAAI,EAAE;A7BtClD,AwHsCD,E1FPF,EDQM,ADkBA0E,E7BHI,A6BGF,CAACN,CE1BH,K/BuBW5F,I+BvBF,GAAG,GF0BO,CAAC,IE1BA,CAAC,E/BuBQ,A6BGF,C7BHGS,C6BGDgF,G7BHK,CAAC,C6BGD,CAAC,E7BHI,A+BvBN,E/BuBQ9E,A+BvBN,M/BuBY,CAAC;AyCvDrD,AgFwCC,E1FPF,A9B/BA,A4ByDE,CAAC,C7BHG,A8BfA,ADkBF,C7BHG,CAAC,G+BvBD,CAAA,ADQKuF,EAAE,C9BeC7F,ACtDJ,CDsDK,CCtDH,A6BuCI,C9BeA,G+BvBD,ADQK,C7BvCH,A6BuCI8G,ICRf,IAAA,GDQ0B,CCR1B,ADQ2BoC,SCRlB,ADQ2B,EAAEF,GCR7B,IDQoC,CCRpC,CAAA,CDQuC,ECRvC,KAAA,CAAA,GAAT,ADQ2D,GAAG,MCRrD,CAAE,GDQ6D,CCRzD,ADQ0D,MCR1D,SAAA,CAAA;AHkDrB,AGjDH,AUjCM,AgFwCF,ExHtCF,A4ByDE,EClBI,E9BeI,E8BfA5C,CWzCI,KXyCE,GAAGP,EAAE,CAACsD,EWzCK,CAAC,EXyCD,KWzCgB,EAAA;AbmF7C,A6F1CI,EhFxCF,AZ2DE7E,EClBI,E9BeI,A4B0BN,EEzCMyE,KWzCC,GAAG,AXyCI,EACR3C,EDiBU,CAACV,EDuBA,AalFA,CX0CL,ADiBQ,CAACG,CDuBW,CAAC,AExClBO,ADiBQ,EAAEL,ICjBJ,ADiBQ,CCjBPqD,ADiBQ,CDuBW,EAAE,EExChB,CAACjI,IFwCsB,AExClB,CAACkI,CFwCmB,GAAG,CExCjB,EAAE,CFwCmB,AExClB,KFwC4B;A3B/EtE,AwCFL,AgFwCI,A5FmBJ,EDuBE,EExCM,E9BcI,A4B0BN,O5B1Ba1J,A4B0BN,GAAG,QAAQ,CAAC,M5B1BY,CAACS,C4B0BL,EAAE,C5B1BO,CAAC,IAAI,EAAEE,MAAM,CAAC;A0BnErD,AGuEH,E5BzDE,EDsDM,A4B0BJ,AExCI,ADiBJ4F,Q5BzDQ,EAAE,G4ByDG,E5BzDE,C4ByDC;AHzDpB,AgB7BA,E1CoFI,A4B0BD,A3B/ED,A4BwDEC,ECjBI,CDiBDA,CAACC,MAAM,EAAEC,IAAI,EAAEC,QAAQ,EAAE;A7BChC,A4BxFA,EA+GE,EExCM,ADiBA,IDuBA,ACvBIF,GDuBD,GAAG,ACvBI,IDuBA,IAAI,EAAE,CAAC,CCvBKrC,UDuBM,EAAE,ECvBM,EAAE;A7BC9C,ACxDK,E2B+EH,E5BvBExD,A8BjBI,EDiBI,EDuBJ,C5BvBC,GAAG,EAAE,A4BuBA,GAAG,aAAa,CAAC,OAAqC,CAAC;A5BtBrE,A0B1DG,EEiFD,A3B/EA,EDwDEC,A8BjBI,EFwCF,ACvBM,IAAI6F,CCjBD,C9BiBH,A4BuBA,AExCI,C7BvCH,C2B+EC,ACvBM,C7BAL,ACxDA,G6BuCOvB,CDiBG,C7BAL,K8BjBS,ADiBE,CCjBDwE,CDkBd,EClBiB,CAAC,CACtBlD,GDiBW9B,GCjBL,CAACuE,cAAc,ADiBQ,CCjBP,ADiBQ1C,CCjBP,EDiBU,CCjBPhF,ADiBQiF,ICjBJ,CAAC,CDiBS,CChBxC4C,ADgByC,OChBlC,IAAInD,EAAE,CAACE,IAAI,CACrB,CAAC,EAAE,CAAC,CAAC;A9Bed,E8BdI,CAAC,C9BcDtF,A4BuBA,EFjFS,AG2DD,KDsBD,CAAC,EFjFS,CAAA,C1B0DL,E4BuBuC,CAAC,CAClD,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAO,GAAA,EAC7B,GAAG,IAAI,CACR;A5BzBL,E4B0BG,AF1ED,AIkCEiI,CFwCD,C5B1BChI,E6BCQ,GDyBH,CCzBO2F,GHhDK,C1B+CP,A0B/CO,AGgDD,CCfH,CAACX,C9BcD,CAAC,A0B/CU,C1B+CT,A8BdE,ADeI,CH/CJ,AIgCCW,IAAI,EAAE4C,GJhCsB,EAAA,CIgChB,CAAC,IDeQ,EAAE;A7BC7C,AE9FA,E4B+EI,EFwCA,AF1EiB,IAAI,AGiDT,C7BAPtI,A0BjDgB,AIkCdsI,CFwCD,GF1Ee,CE0EX,CExCG,ADeM7C,CHjDF,GE0EF,CACb,AF3EmB,CGiDI,CAACG,E7BAN5F,CAAA,EAAG,W6BAmB,IAAI4D,wBAAwB,CAAC4B,GAAG,CAACC,MAAM,CAAC,ID0BlB,OAAO,GAAG,CACzE;AEzCL,E9BeI,A4B2BD,EF5EkB,E1BiDb,A6BAI,C7BAH5F,C0BjDqB,CAAA,M1BiDb,G0BjDa,C1BiDT,CAACC,C0BjDD,SAAS,E1BiDI,EAAE;A4B4BpC,AE1CA,CF0CC,G5B3BO,A0B9DE,AI+CViG,EDeY,EH9DO,CAAA,SAAA,CI+CP,EJ/C+B,AI+C7B6C,IJ/CiC,II+CzB,KAAM;E9BgBxB,A8BfA,EJ/Ce,CI+CZA,CF2CM,AC5BD,EH9DO,CAAA,CG8DHlD,ED4BG,CAAA,AE3CJ,CDeK,IH9DQ,CG8DH,EH9D0C,IAAI,CG8DvC,EH9D0C,AG8DxC,EH9D0C;E1B+DxE7F,A4B4BF,AE3CE2F,EJ/Ce,CI+CZ,EAAEA,CJ/CU,AI+CTC,ADeM,CH9DG,C1B8DP,GAAG,C8BfC,CDeOE,CCfLD,E9BeE,E8BfE,EAAEC,CDeO,CAACC,EH9DI,GAG9B,CI4C0B,GJ5CtB,EI4C2BqC,CJ5CxB,EAAE,EG2DiC,CAAC,CAAC,CAAC,CCfL,CAACxC,CDgBzBI,KChB+B,EAAEH,EDgBxB,EChB4B,CAAC,ADiBtCC,ICjB0CiD,IDiBlC,CAAC9C,GCjByC,CAACN,GAAG,CAACC,GDiBnC,CAACE,ECjBwC,EAAED,IAAI,ADiBtC,CAACE,CCjBuCD,QAAQ,CAAC,MDiBhC,CAAC,CAAC,CAAC,CAAC;E7BDpE,A8BfAR,EJ5Ce,CI4CZ,C9BeCrF,A6BEI,CCjBHqF,CJ5CU,AI4CTM,CJ5CS,KI4CH,EAAEC,E9BeE,CAACzF,C8BfC,K9BeK,A0B3DQ,AI4CR,CAAC,C9BeC,A8BfAgI,CJ3CzB,IAAI,GAAG,CI2C2B,CJ3CzB,AI2C0BxC,MAAM,EAAEC,IAAI,CAAC,IAAIkD,QAAQ,CAACzD,GAAG,CAACM,MAAM,EAAEC,IAAI;AACjF,CAAC,CAAC,CAAC,C9BeK9F,A0B1DE,AG4DF,IH5DE,C1B0DG,A0B1DH,G1B0DME,YAAY,A0B1DH,C1B0DII,E0B1DoC,I1B0D9B,A0B1DkC,C1B0DjCN,E0B1DoC,EAAE,C1B0DjC,CAAC;EACtC,CAAC,C6BEG,K7BFG;E0BpDT,E1BqDMG,A6BEA,OAAO2E,G7BFG,C6BEC,CAACe,C7BFC,CAAC,CAAC,G6BEG,CAACC,IAAI,CAAC,CAAC;AD2B5B,AcpHF,E1CwFC,A6BEA,CAAC;AD1FF,AcIH,E1CqFI,A4B4BF,AC1BEX,GAAGA,C7BFCnF,A6BEA6F,K7BFK,CAACxF,A6BEA,CD0BZ,CAAmB,AC1BLyF,I7BFI,A4B4Ba,AC1Bb,E7BFE,A4B4BW,AC1BXZ,KAAK,EAAE;ADvFtB,AFiCF,I1BqDG3E,A4B2Ba,ACzBbsF,EDxFK,EAiHY,CAAA,CCzBX,CAACC,CDxFI,CAiHM,C5B3BP,C4BtFI,ACwFH,C7BFC,A4B2BC,ACzBD,GDxFM,ACwFHZ,CDyBE,ICzBG,SDxFI,CAAC,eAAe,CAAC;E5BuF7C,A0BrDF,EEsFA,AC/BM,CHvDH,CAAC,KGuDS,IAAI,CHvDM,EAAA;A1BsDzB,E6BEI,CAAC;A7BAL,A4BgCK,EC/BDK,EHvDA,CGuDGA,CAACM,G7BDCtF,C0BtDC,EGuDI,EAAEuF,IAAI,C7BDDvF,CAAA,A6BCG,E7BDA,Q0BtDQ,GAAG,IAAI,CAAC,2BAA2B,CAAC,UAAU,CAAC;AxBxC1E,EF+FC,E4BgCM,AFrFN,AGsDI,E7BDAN,E4BgCW,AFrFX,AGsDI4F,CD+BO,AFrFV,IAAI,C1BqDG,A0BrDF,AGsDI,E7BDA,E4BgCC,GAAG,KC/BQrC,KHtDC,CAAC,GAAG,CEqFE,AFrFD,IGsDQ,KAC/BsC,IAAI,KAAK,EHvDkC,CAAC,EAAE,CGuD/B,IAAIA,IAAI,KAAK,OAAO,CAAC,EAAE;A3B7FnD,IF4FQ,A4BiDN,EFtGI,AGuDM,MHvDA,CGuDO,IAAI,GHvDH,GAAG,IAAI,cAAQ,EAAyB;E1BsDxD,E6BEI,EHvDF,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,oBAAoB,EAAE,QAAQ,CAAC;AxBtC7D,AwCMA,E1CsFC,E6BEI,E7BFAtF,A0BpDF,IACE,CGqDOsF,E7BFA,C0BnDH,CAAC,AGqDM,C7BFDnG,G6BEKkG,MAAM,C7BFD,CAACzF,C0BnDH,CAAC,a1BmDiB,CAAC,M0BnDE,CAAC,IACxC,IAAI,CAAC,oBAAoB,EAAE,EAC3B;AEmGH,A1BhJL,EF+FIH,A6BEA,IaxFS,CxCTb,CAAA,EF+FY,GAAG,IAAI,AE/FnB,GAAA,GwCS8B,CAAA,KxCT9B;AAGa,A2B+Fb,CAAC,C7BDG,A0CpFF,EdoIQ,E5BhDFQ,AE9FK,E0B8IQ,AFlGb,C1BkDG,A4BgDU,G5BhDPT,A0BlDF,AxB5CO,GAAG,EF8FH,CAACK,E4BgDC,GAAe,C5BhDV,AE9FJ,CAAU,SAAkB,EAAE,I0B8IC,G1B9Ic,EAAA;A2BgGnE,E7BDI,AE9FF,E0BwJA,E1BxJI,CAAC,EF8FGI,A6BCD0F,CHnDC,E1BkDG,EAAE,E0BlDC,AxB5CA,EAAE,G2B+FGA,CAACC,EHnDE,GAAG,GGmDG,CHnDC,CAAC,AGmDA,sBHnDsB,CAAC;AgBjClD,EbqFDT,E7BDIzF,AE9FJ,MAAM,EwB4CE,GGmDK,C7BDG,E6BCAkG,C7BDGpG,KAAK,AE9FJ,CAAC,C2B+FG,CAAC2F,GHnDC,EAAE,AxB5CA,CAAC,O2B+FS,CAAC;AD0DtC,ACzDL,E3B/FG,AwCUD,E1CoFM3F,KAAK,C0BlDF,CAAA,C1BkDK,A0BlDJ,CgBlCV,C1CoFgB,A0CpFI,WAAoB,EAAA;AxCT1C,A2B+FA,C3B/FA,GF8FQ,A4B0DE,Ac/IY,Id+IG,Ac/IQ,Cd+IR,Ac/IQ,AbsFxBqG,CHnDC,C1BkDK,EAAElG,C0BlDH,MgBnCmB,CbsFZkG,CHnDC,AGmDAC,C7BDK,A0CrFL,Cd+IG,AF5GD,E1BkDM7F,A6BCJ,CDyDqB,CCzDnB,C7BDK,EAAE,A4B0DgB,Gc/IlB;AxCPjC,E2B8FI,EDWA,E5BZQ,IAAIP,E0BlDJ,QAAQ,CAAC,C1BkDO,EAAE,I0BlDF,CAAC,QAAQ,CAAC;EGoDlC,Ea7FM,I1C4FMA,A0C5FC,CAAA,ChB0CN,MgB1CM,GAAG,C1C4FQ,CAACC,S0C5FE,C1C4FQ,CAAC,CAACO,GAAG,EAAE;A4BavC,A1BzGJ,E2B8FC,I7BDQ,E0BlDH,CAAA,CAAC,OAAO,CAAC,EAAE;AxB7CpB,EwCSE,AbwFE,E7BDI,A4BYJ,ECXI4F,C3BjGR,CAAA,E2BiGY,GDWC,CAAC,A1B5Gd,C2BiGiBlD,E3BjGjB,C0B4GkB,CAAC,IAAI,A1B5GvB,C0B4GwB,ECXI,CAACjC,SAAS,CAACoF,WAAW,IAC1C,EAAE,kBAAkB,IAAI/C,cAAc,CAACrC,SAAS,CAAC,EAAE;A3B/FpD,IF8FChB,A6BEA,E3BhGK,K2BgGE,G7BFG,GAAG,CAAC,CAAC,CE9FI,C2BgGFqG,E3BhGK,Q2BgGK,C3BhGL,CAAU,A2BgGH,GAAG5F,I3BhGe,A2BgGX,E3BhGW,A2BgGT;EDiB5C,A1BhHA,EF8FMH,E4BkBF,AChBM,C7BFD,EE9FF,CF8FKT,E6BEIsF,C3BhGL,C0BgHC,AChBM,C7BFD,A4BkBL,C5BlBMjF,C4BkBN,AChBSiG,C3BhGL,CACd,E2B+FuB,C7BFD,A6BEEzG,IAAI,CAAC4G,MAAM,CAAC,IAAI,CAAC,C3B/FpB,C2B+FsBD,E3B9FzC,Q2B8FmD,C3B9F1C,CAAC,A2B8F2C,GAAG5F,IAAI,CAAC,G3B9FxC,GACrB,4BAA4B,GAC5B,OAAO,CACV;AACH,AwCEK,CxCFL,CFyFI,E4BkBA,EFpEG,AGoDKoD,KDgBD,IAAI,CAAC,SAAS,KChBW,CAACmB,GAAG,CAACG,EAAE,EAAEkB,UAAU,CAACE,IAAI,GAAGF,UAAU,CAACE,IAAI,EAAE,GAAG,CAACF,UAAU,CAAC,CAAC;E7BD5FtG,A0CvFF,EhBqCG,CgBrCA,CAAC,AbyFM,GazFK,EAAE,EbyFA4E,C7BFH,E0CvFwB,C1CuFrB,A6BEI,CazFiB,AbyFhBQ,EAAE,C7BFH,A6BEI;A1BlI3B,EHiIIrF,A4BmBF,EFpEE,AgBtCA,AbyFI,CAAC,CDiBH,Ec1GE,E1CuFI,C0BjDD,E1BiDI,A0CvFF,Cd0GC,CAAC,AFpEA,CAAC,CgBtCC,C1CuFG,A4BmBQ,EAAA,Cc1GP,EAAE,UhBsCU,CAAC,GAAG,CAAC,oBAAoB,CAAE,CAAC,OAAO;E1BkDhEH,A6BEA,EDiBA,Ec1GE,Ed0GE,EAAE,Ac1GA,CAAC,Ed0GE,I5BnBM,A4BmBF,C5BnBGU,I0CvFE,CAAC,E1CuFI,A4BmBF,C5BnBG,A4BmBF,EAAE,Kc1GK,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;A1CwF1D,E0BhCE,AGkCE,EazFC,CAAA,Cd0GC,Kc1GK,Cd0GC,EFnDE,CAAC,CEmDC,MFhDb,EAAA,CEgDsB,CAAC,kBAAkB,GAAG,4BAA4B,CAAC;A5BjB5ExB,E6BCI,EDiBC,Ec1GC,C1CwFC,CAAC2B,E0CxFE,CAAC,K1CwFK,GAAG,G0CxFG,CAAC,M1CwFMf,C0CxFC,CAAC,C1CwFC,EAAE,C0CxFC,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE,IAAA,eAAS,EAAC,KAAK,CAAC,CAAC;E1CyFrE,A6BCA,EDiBA,Ac1GC,E1CwFGgB,E4BkBA,CAAC,C5BlBG,GAAG,IAAIC,C4BkBD,GAAG,C5BlBG,CAACC,C4BkBD,Q5BlBU,CAACT,MAAM,GAAG,CAAC,CAAC;AyBtI9C,EzBuII,A6BCA,EHhCA,E1B+BIS,I0B/BE,K1B+BO,CAACT,MAAM,GAAG,CAAC,EAAE,E0B/BA,GAAG,IAAI,CAAC,2BAA2B,CAC3D,OAAO,KAAP,IAAA,IAAA,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,UAAU,CACpB;EgBzDH,AbwFE,E7BDI,A0B7BJ,K1B6BS,C0B7BH,G1B6BOU,CAAC,GAAG,CAAC,A0B7BJ,E1B6BMA,CAAC,A0B7BJ,CAAA,E1B6BOD,A0B7BP,GAAA,M1B6BgB,CAACT,A0B7BV,KAAP,C1B6BuB,EAAEU,CAAC,A0B7B1B,E1B6B4B,EAAE,A0B7B9B,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,QAAQ,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,KAAK;EEiD7C,AClBE,EH7BA,E1B4BQH,A6BCJ6C,EH5BF,E1B2BU,CAAC1C,CAAC,A0B3BR,CE8CG,AF9CF,CE8CG,C5BnBO,CAAC,CAAC,A4BmBqB,EAAA,C5BnBlBD,M0B3BF,CAAC,E1B2BU,A6BCJ,C7BDKC,CAAC,A6BCJ,C7BDK,A6BCJ4F,QAAQ,CAACL,IAAI,CAAC,CH5BH,CAAC,AG4BI,IH3B5C,IAAI,CAAC,oBAAoB,EAAE,EAC3B;AgB7DD,I1CuFG,A4BmBJ,AClBI,EH1BF,EE4CE,CAAC,CF5CC,CG0BK,ODkBG,GAAG,AClBI,GAAG1F,IDkBA,AClBI,EAAE,CDkBH,KAAK,QAAQ,GAAG,iBAAiB,CAAC,GAAG,CAAC,GAAG,GAAG;E5BlBvE,A0CvFF,GAAG,CAAC,AbwFM,EH1BJ,CgB9DS,EAAA,IhB8DF,IAAI,CAAC,sBAAsB,CAAC;E1B0BvCZ,A4ByBF,EchHE,EdgHE,ACxBM,C7BDH,CAACgB,E0BzBA,AgB9DA,E1CuFI,CAAC,G4ByBC,C5BzBGC,A4ByBH,EAAA,AchHG,E1CuFI,CAACrB,A0CvFF,G1CuFK,C0CvFD,C1CuFGgB,A0CvFF,ChB8DC,EAAE,C1ByBG,CAAC,CAAC,K0CvFG,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;E1CwFnE,E4ByBA,AchHA,E1CuFIZ,A6BCIsG,EH1BH,AgB9DD,ChB8DC,CAAC,AG0BM,C7BDH,A4ByBF,ACxBMlF,C7BDHf,G4ByBC,CAAC,ACxBM,CaxFL,AbwFMoG,C7BDH,G0CvFC,E1CuFI,A6BCI,C7BDH,A6BCI,CaxFL,EdgHE,AchHA,C1CuFG,A6BCI,C7BDHxG,A6BCI,EAAEW,IAAI,CAAC,C7BDH,EAAE;IACjCjB,E0BzBD,AgB9DD,AbwFM,CH1BL,CAAC,KgB9DK,AbwFMmF,C7BDD,CAACvE,A0BzBJ,CAAC,CgB9DC,AbwFM,CH1BL,AG0BMsD,O7BDK,CAAC,Q6BCU,CAAC+B,GAAG,CAAC,IAAI,CAAC,CAAC;E7BA/C,A4ByBF,EchHG,AbwFG,CaxFH,AbwFI,CDwBH,EFlDE,GgB9DG,ChB8DC,IEkDI,CAAC,GAAe,AFlDZ,EEkDY,AFlDV;A1B0BtB,CAAC,C6BCG,EDwBA,EchHE,EdgHE,EFlDE,GgB9DG,EdgHE,EFlDE,AgB9DJ,CdgHK,GFlDG,EEkDE,QchHF,EdgHY,AchHX,EdgHa,OchHJ,CAAC;AvC1C7B,E0BmIC,EaxFC,EdgHC,EFlDG,CAAA,AG0BE,GDwBC,GFlDG,CEkDC,GCxBK,GAAGhF,GDwBC,CAAC,ACxBE,EAAE,iDDwB+C,CAAC;A5BxB9E,AGlJA,IyB2KK,ACxBG,G1BnJR,CAAA,EuByHU,MAAM,CAAC,KvBzHjB,GAAA,cAAA;AHmJA,AGlIA,EuC4CE,Ed+GE,ACxBI,E1BnIF+B,EyB2JE,AFlDC,AgB7DD,C1CsFC1B,A4ByBA,Ac/GA,GAAW,C1CsFPA,CAACrB,A0CtFM,G1CsFH,EAAEsB,C4ByBC,GAAG,C5BzBC,CGlID,CHkIG,A4ByBA,EzB3JA,SAAA,CAAU,GAAW,EAAA;EHmI3C,E0CtFA,AbuFI,E7BDA,A0BzBD,C1ByBEtB,C0CtFD,CAAC,C1CsFG,C6BCGkF,E7BDAlF,E6BCI,C7BDD,A6BCE0G,IavFA,AbuFI,CavFH,AbuFIlF,KAAK,CAACqF,IavFA,CAAC,CbuFK,CAAC,EavFF,CAAC,CbuFK,CAAC,EAAE7F,IAAI,CAAC,CAAC,GavFD,CAAC,GAAG,CAAC,CAAC;E1CuFpD,A4B8BF,AzBhKA,A0BmIE,CAAC,CH1BA,CAAA,C1ByBG,A4B8BF,C5B9BGM,CGlID,GuByGG,AvBzGA,CHkIG,EGlIU,CHkIPA,CGlIS,IHkIJ,A4B8BF,CAAA,EAAA;A5B7BpB,AyBvIG,AIwIH,EapFE,AvC/CA,EyBgKE,EzBhKE,CAAC,GAAG,CyBgKC,AzBhKA,IyBgKI,AcjHA,CdiHC,AcjHA,IAAY,EAAA,SdiHG;A5B7B/BD,AyB5GA,AI6GA,E1BnIE,EHkIE,A0CnFA,C1CmFCE,C0BzBC,CvBzGC,E0BmIEyF,CH1BC,CgB1DC,AvC/CA,CAAC,EHkIE,CAAClG,A0CnFA,AvC/CA,CuC+CC,AvC/CA,EHkIE,A0BzBA,AvBzGA,CAAC,CuByGC,C1ByBC,CGlIC,CuC+CC,EvC/CE,CuC+CC,AvC/CA,IuC+CI,CboFCkG,C1BnIC,A0BmIA1B,C7BDC,CGlIC,CAAC,EAAE,A0BmIA,E1BnIE,A0BmIA;E7BAnC,A4B8BF,AC7BE,E1BnIA,EHkII,A4B8BF,AC7BE,C7BDCtF,C0BzBD,AvBzGA,CAAC,CHkIG,CAACwB,CGlID,C0BmIG8D,EH1BA,AvBzGA,CHkIG,AGlIF,CHkIG,C6BCC,CH1BD,CEuDC,C5B9BG,A4B8BF,E5B9BI,A6BCA,CD6BkB,EAAA,AzBhKjB,CHkIG,AGlIF,CHkIGhE,AGlIF,CAAC,IHkIM,A6BCA,C7BDC,C6BE5B,OAAOmF,YAAY,CAACnB,KAAK,CAAC;A7BDlC,CAAC,C0ClFC,AboFE,ED4BA,AzBhKA,EuByGG,CAAA,CEuDC,AzBhKA,CyBgKC,AzBhKA,CuCgDC,CAAA,CvChDE,CuByGC,AgBzDH,EvChDK,EAAE,OyBgKO,GAAG,GAAG;A5B7B9BlG,E6BEI,EapFA,EvChDE,CHkIC,CAACqC,A0BzBA,CvBzGC,CAAC,CuCgDC,AvChDA,EHkIE,AGlIA,CuByGC,AvBzGA,CuCgDC,C1CkFC,A0ClFA,CvChDC,CAAC,CuByGC,CAAY,K1ByBN,E0ClFE,CAAC,GhByDG,IAAI,CAAC,AgBzDA,EAAE,EhByDE,mBAAmB,CAAC;A1B2B5DrC,AyB7GG,EG2ID,AC7BE,E1BpIC,CAAA,CuByGE,AG2BCkG,C7BDD,CAAC5D,GAAG,AGnIA,A0BoIE,G7BDC,CAAC,AGnIA,CHmIC,AGnIA,GAAG,IAAI,A0BoIEkC,E1BpIA,Y0BoIc,EAC/B6B,8BAA8B,CAACH,KAAK,CAAC;A7BD7ClG,AyB7GO,AiB0BN,EbqFG,EH5BC,EDnFQ,AtBtBP,A0BqIE4D,C7BFD,CAACrB,CGnIC,CAAC,CAAC,CHmIC,CGnIC,CAAC,CHmIC,EAAE,AGnIC,CAAC,C0BqIE,CAAC2D,E1BrIC,CAAC,CsBsBO,CI+GJ,C1BrIC,CsBsBM,AI+GL/B,E1BrIE,SsBsBG,SI+Ge,EAAE,CAAC,EAC5C,OAAO,IAAI0D,KAAK,CAAC3B,KAAK,EAAES,aAAa,CAAC;A7BF9C3G,AyB9G8C,AG4IzC,EC3BD,I1BtIE,CHmIC,AyB9GuC,CzB8GtCwC,AyB9GsC,CtBrBrC,CAAC,CAAC,EAAE,CAAC,CHmIC,EGnIG,CHmIA,AGnIC,EHmIC,CAAC,AGnIC,CHmIA,CGnIE,GAAI,CsBqBkB,EtBrBf,CsBqBe,kBAAA;AzB+G9CxC,AyB7GO,AkBlDP,Ef8LE,AFxDA,AG4BE,E1BtIC,CAAA,CsBsBQ,CzB6GN,A4B+BA,C5B/BCyC,A4B+BA,CC5BGyD,ED4BA,AzBlKA,GuB0GG,AG4BE,CD4BU,AFxDZ,AvBzGR,CHkIU,AGlIT,CyBiKmB,AFxDZ,AvBzGN,EHkIW,CAAC,AGlIT,CHkIU,IyB7GW,CtBrBf,EsBqBkB,ItBrBZ,MAAM,IACvB,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,MAAM,IAClB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,MAAM,MAAM,EAC3C;AHiIN,A6BEA,EJhHE,CAAC+D,CG4IC,AFxDA,IEwDI,C5B9BCvH,AyB9GC,AG4ID,EFxDE,CDpFE,CzB8GAA,CAAA,C0B1BE,C1B0BC,A0B1BA,C1B0BC,MyB9GO,CG4IA,CFxDC,GEwDG,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,QAAQ,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC;A5B5B/E1C,A6BCA,EJhHE,CAACkK,CG4IC,EzB9JE,CHiIC,AGjIA,CHiICvH,A4B6BA,CH5IQ,AG4IP,AC5BAmD,C7BDC,AGjIA,EsBkBS,CzB+GNpD,A6BCAoD,CAACI,G7BDG,AGjIA,E0BkIE,CD4BC,CAAC,AzB9JA,A0BkIA,C1BlIC,CAAC,EyB8JE,CzB9JC,CyB8JC,GH5IU,EtBlBL,GyB8JG,CAAC,CzB9JC,EAAE,CAAC,CyB8JC,EAAE,CzB9JC,EyB8JE,CzB9JC,CAAC,EyB8JE,CAAC,OzB9JO,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC;AHkIzElG,EyB/GE,ACqFA,AG2BE,CJhHDmK,GtBlBG,CHiIC,CAACvH,CyB/GQ,AtBlBP,CAAC,CAAC,CsBkBQ,CtBlBN,CuBuGC,AvBvGA,CuBuGC,EvBvGG,CAAC,CHiIA,GAAGF,AGjIC,EuBuGe,AvBvGb,EHiIC,A0B1BY,CvBvGT,CsBkBM,EtBlBH;AHkIhC1C,EyB/GE,AG4IA,AC5BE,CJhHDoK,CCqFC,CEuDC,CAAC,AzB9JA,CHiIC,CAACvH,A0B1BA,CDrFc,AG4Ib,AzB9JA,CAAC,CAAC,CHiIC,AyB/Ga,CG4ID,AzB9JX,CAAC,CHiICH,A4B6BS,EFvDP,AvBvGE,CuBuGD,AvBvGE,CHiID,G0B1BG,AvBvGE,EAAE,GuBuGC,AvBvGG,EAAE,EuBuGD,CAAC,AvBvGI,GsBkBY,AtBlBT,CuBuGH,EAAE;A1B2BtC1C,EyB/GE,AIgHE,CJhHDqK,CG4IC,EFvDE,AvBvGA,A0BkIEnE,C7BDD,CAACpD,A4B6BA,CH5IO,AG4IN,AzB9JA,CAAC,CHiIC,AGjIA,A0BkIE,CJhHK,ACqFN,CvBvGC,CHiICJ,AGjIA,GuBuGG,AvBvGE,CHiID,A0BzBe,AvBxGb,IAAI,CAAC,A0BkIAoF,CD4BD,EzB9JK,EsBkBK,AG6I5B,AzB/JyB,GAAI,CyB+JzB,CAAC,AC7BwB,C1BlIG,C0BmI9B,OAAO1C,CH3BkB,KEuDP,CAAC,GFvDe,CEuDX,AFvDY,EEuDV,EFvD+B,CG2BjC,CAACc,ID4BS,CAAC,AC5BL,CAAC,MD4BW,EAAE,CFvDa,EEuDV,EFvDc,CAAC,CEuDX,CAAC,EFvDiB,GAAA,CACrE;A1ByBPlG,EyB/GE,AIiHE,CJjHDsK,CG6IC,AFtDC,EvBzGC,CHiIC,CAACvH,A4B8BA,CH7Ia,AG6IZ,AzB/JA,CAAC,CAAC,CsBkBa,CtBlBX,CAAC,GAAI,CAAC,EyB+JC,CAAC,AzB/JC,CHiIA,CGjIE,EHiICL,A4B8BA,CzB/JG,CyB+JD,E5B9BE,AGjIE,MsBkBgB,AG6IZ,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC;A5B7BrD1C,EyB/GE,AIiHE,CJjHDuK,CCwFC,AvB1GC,CAAA,EHiIE,CAACvH,A0BvBA,CDxFG,EtBlBA,CsBkBG,ACwFF,CAAC,SAAS,CDxFG,CCwFD,E1BuBE,GAAGN,IAAI;AACjC1C,EyB/GE,AG6IA,AC5BE,CJjHDwK,GG6IG,AFrDA,AvB1GA,A0BmIEvF,C7BFD,A4B8BA,C5B9BChC,CyB/GS,AtBlBR,CyB+JC,AzB/JA,CAAC,CHiIC,AyB/GQ,ACwFR,CvB1GC,CyB+JY,AzB/JX,CHiICP,C4B8BU,CFrDR,AvB1GC,CuB0GiB,AvB1GhB,CHiIA,C6BEG,CAAC6D,C1BnIA,EAAE,A0BmIC,CAACL,E1BnIE,GsBkBS,AtBlBN,A0BmIA,CAAC,EACzB,EH1B2B,IAAI,CAAC,AG0BzBjB,IH1B6B,UG0Bf,CAAC2B,GAAG,CAACV,KAAK,CAAC,OH1BgC,CAAC;A1BwBzElG,EyB/GE,AIkHE,CJlHDyK,CG6IC,AFrDC,EvB1GC,CHiIC,CAACvH,A4B8BA,AC3BE6E,CJlHK,AG6IN,AzB/JA,CAAC,CAAC,CsBkBO,CtBlBL,CAAC,E0BoII,C1BpIC,CAAC,C0BoICH,G1BpIG,CHiID,AyB/GM,AtBlBJ,CyB+JD,E5B9BElF,AGjIG,EyB+JD,AzB/JG,EHiID,CGjIK,CyB+JH,CAAC,CzB/JK,O0BoIK,CAACwD,KAAK,CD2BD,AC3BE,CD2BD,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC;A5B7B9ElG,EyB/GE,AIkHE,CJlHD0K,CG6IC,AFpDA,EvB3GE,CHiIC,CAACvH,A4B8BA,AFpDA,CDzFa,AG6IZ,AFpDA,AvB3GA,CAAC,CAAC,CsBkBa,CtBlBX,CAAC,GAAI,CuB2GA,AvB3GC,EyB+JC,CAAC,AFpDA,AvB3GC,EAAE,EyB+JC,CzB/JG,CHiID,A4B8BA,EzB/JI,CHiIDT,AyB/GY,ACyFZ,I1BsBI,C4B8BC,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC;A5B5BlD1C,EyBhHE,AIkHE,CJlHD2K,CtBlBE,GHkIE,CAACvH,CyBhHQ,GAAG,KzBgHF,GAAG,CyBhHQ,SzBgHEC,IAAI,EAAE;EAAE,AyB/GpC,AG6IA,AzB/JC,A0BoIC,CJlHDuH,CC0FC,EEmDE,AC3BE7C,CD2BD,CFnDC,C1BqBqC,AyB/GvB,AC0Fb,CEmDC,C5B9BqC,CyB/GtB,CC0FZ,CEmDY,AFnDX,AGwBE,ED2BS,GC3BJ7B,KAAK,EAAE,EJlHa,MC0FP,EAAE,EAAE;A1BqBU,CAAC,CyB9G/C,AtBlBA,CsBkBC2E,CG6IC,AC3BI5F,EHxBF,EEmDE,CH7IY,AG6IX,AzB/JA,GsBkBc,AtBlBX,M0BoIU,CAACkB,GJlHU,AIkHP,CAACD,CD2BH,IAAI,AC3BI,EAAE6B,ED2BF,CAAC,KC3BS,CAAC,SD2BK,CAAC,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC;A5B7B9E/H,AGjIA,CAAC,CsBkBC,CAAC8K,CG6IC,AFnDC,AGwBG5F,G7BHD,CAAC5B,A4B8BA,CH7IkB,AG6IjB,GH7IoB,GzB+Gd,GAAG,E4B8BE,CAAC,IAAI,AC3BI,CAAC6C,CD2BH,C5B9BC9C,CyB/GkB,AIkHb,CAAC0E,E7BHF,EAAE,C4B8BC,CAAC,EC3BM,ED2BF,AC3BI7B,ED2BF,GAAG,AC3BI,CAAC,GD2BD,CAAC;Ae9L/C,AxCiCH,EHgII,AyB/GF,AIkHE,CJlHD6E,KzB+GO,CyB/GM,GzB+GFzK,AyB/GK,KzB+GA,CAAC,IyB/GS,8BzB+GyB,CAAC;AACvD,A2C9JA,C3C8JC,CyB/GC,AG6IA,AC3BE,CJlHD0K,CC2FC,GEkDG,CAAC,AFlDA,CD3Fc,AIkHXjD,ED2BA,CH7Ic,GG6IC,EAAA,AC3BP,OHvBK,CAAC,ID3FiB,KC2FR,CAAC,EAAE;A1BsBrC/H,A6BEA,EJlHE,CAACiL,CG6IC,EFlDE,C1BqBC,CAAC1H,A4B6BA,CH7IU,AG6IT,CFlDC,C1BqBC,CyBhHU,EzBgHP,SyBhHkB,CG6IR,E5B7BE,E4B6BE,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,QAAQ,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC;AC1B/E,E7BH4B,AyB/G1B,CAAC2H,CG6IC,EC3BEzD,ED2BE,AFlDA,C1BoB2B,AyB/GX,AG6If,G5B9B6B,AyB/GX,AC2Ff,AGuBA,CHvBC,EGuBGvB,KD2BI,AC3BC,CD2BA,GC3BKhB,CD2BD,EAAE,GH7IkB,KG6IV,AFlDA,CEkDC,AFlDA,KEkDK,EAAE,EC3BI,CD2BD,AC3BE0B,GAAG,CD2BD,AC3BEV,CD2BD,IC3BM,CAAC;A7BHnB,A2C7JpC,AdgKwDhG,C7BHnB,CyB9GtC,CAACiL,IIiHwD,CAAAnD,CJjHxC,AIiHwC,CHvBrB,ED1FhB,AIiHqCP,MAAA,GJjH5B,OC0FyB,EAAE;A1BqB1DzH,A4B+BC,AzB9JE,EsBiBD,CAACoL,GkB/CU,C3C6JN,CAAC5H,A0BrBoE,CDzFnD,ACyFqD,CAAC,EDzFnD,CzB8Gf,GAAG,G2C7JU,CAAA,M3C6JAC,EyB9GkB,CzB8Gf,EAAE;A4B+B9B,AzB7JD,EH+HI,AyB9GF,AkBhDF,ClBgDG4H,GCyFI,AvB1GD,CyB6JL,AFnDM,C1BqBG,A4B8BT,AFnDO,CDzFM,GzB8GA/K,AyB9GG,CkBhDjB,Cf4LC,Ae5LD,CjByIe,CAAC,AiBzIhB,C3C8JmB,A4B8BlB,C5B9BmB,A0BrBF,IDzFS,CG4I1B,AzB7JsB,GAAG,SAAA,CAAU,KAAe,EAAA,OH+HC,CAAC;AACrD,A4B+BM,C5B/BL,CyB9GC,CAACgL,CkBhDO,IAAM,ClBgDI,AG6IJ,Ae7LA,GlBgDO,GkBhDP,GAA6B,CAAA,Cf6LlB,Ae7LoB,Cf6LnB,KAAgC,EAAA,CH7IpB;AzB+GxCtL,EyB9GE,AG6IA,AzB9JA,CsBiBCuL,CkB5BD,G3C0IK,CAAC7H,A2C1IW,AxCWX,CsBiBQ,AkB5BG,EfyKR,AzB9JA,CsBiBQ,AG6IP,C5B/BC,CG/HW,EH+HR,AG/HU,GyB8JP,CAAC,EH7IS,EG6IL,EezKL,E3C0IQ,A4B+BA,CezKL,IAAI;E3C0IG,AyB7G3B,AtBjBA,CsBiBC8H,CG6IC,EzB9JE,EyB8JE,C5BhC4B,AyB7Gd,AG6Ib,AzB9JA,CH8H4B,EyB7GZ,AtBjBb,CAAC,OyB8JO,CAAC,KAAK,CAAC,EH7Ie;AzB6GH,CAAC,CyB5GtC,AG6IA,Ae9LA,Cf8LC,CAAC,AzB9JA,CwChCC,AxCgCA,CwChCC,ExCgCE,CwChCS,AxCgCR,EsBiBE,AkBjDQ,ElBiDN,GkBjD2B,EAAA,IlBiDlB;AG8ItB,EH7IE,AtBjBA,CsBiBCC,CkBjDC,GlBiDU,CkBjDN,CxCgCC,CsBiBQ,EtBjBL,CwChCC,ExCgCE,EwChCE,GxCgCG,CwChCC,AxCgCA,EwChCE,IxCgCI,EAAE;AyBgKb,CH9IN,GCyFL,AvB1GD,EwChCE,Gf+LU,CzB/JN,EAAE,CwChCC,ExCgCE,EwChCE,CAAC,ExCgCE,CAAC,GwChCG,AxCgCA,CwChCC,Cf+LQ,AzB/JP,CyBgKxB,AzBhKyB,CwChCC,CAAC,SfgMI,EAC/B,OAAoB,EAAA;EAEpB,EelMG,AxCgCD,CwChCC,EfkME,CzBlKC,EAAE,CwChCC,EfkME,AzBlKA,GAAG,EAAE,GyBkKG,IAAI,SAAS,EAAE;AI/NpC,IJgOI,EelME,AxCgCA,EyBkKE,CzBlKC,CwChCC,AxCgCA,CwChCC,AxCgCA,EAAE,CAAC,GwChCG,AxCgCA,CwChCC,GAAG,CfkMC,AelMA,CxCgCC,CAAC,CyBkKkB,AelMjB,IfkMqB,CelMhB,MxCgCM,CAAC,EAAE,CAAC;IyBmKpC,AelMC,AxCgCA,CAAA,GyBkKG,GzBlKG,IyBkKI,AzBlKA,EAAE,EyBkKE,CzBlKC,GAAG,GyBkKG,CAAC,AzBlKA,EAAE,GyBkKG,AzBlKA,EyBkKE,CzBlKC,EAAE;IuB4GjC,EEuDE,AzBlKA,GuB2GG,GvB3GG,EAAE,CuB2GC,CACT,CvB5GW,GyBkKG,EzBlKE,CyBkKC,AzBlKA,GAAG,EAAE,CAAC,KuB4GL,EAClB,IEqDkC,CAAC,OAAO,CAAC,GFrD3B,CACjB,CEoDiD,CAAC,EFpD9C,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,EAAE;EiB5IzC,EfiMG,CejMA,CjB6IC,AiB7IA,AxC+BA,GwC/BW,AxC+BR,CAAC,CwC/BO,AxC+BN,CuB8GC,CvB9GC,CAAC,GAAG,MAAM,CAAC,QuB8GQ,GACxB,CvB/G4B,CAAE,CAAC,CuB+G3B,CAAC,AvB/G4B,GAAG,EAAE,KAAK,CAAC,GAAK,EAAE,GAAG,EAAG,CAAC,KuB+G1B,CAAC,kBAAkB,CAAC;IEoDxD,AejMA,AxC+BC,CAAA,CuBgHC,EEkDE,AejMA,EjB+IE,CvBhHC,CwC/BH,GxC+BO,EAAE,EyBkKE,CzBlKC,GAAG,CyBkKC,EejMR,CxC+BW,CyBkKC,AejMX,CxC+BY,CyBkKC,EejMT,AxC+BW,CwC/BV,ExC+Ba,EAAE,EwC/BT,EAAE,GAAG,CAAC,EAAE;MfkM9B,AejMA,OAAO,CfiMC,CAAC,EejME,CAAC,MAAM,CAAC,GAAG,CfiMC,AejMA,GfiMG,IAAI;IAC/B,AejMA,CfiMA,CzBlKC,EuBgHE,GEkDG,CzBlKC,EuBgHE,AvBhHA,GAAG,KuBgHK,AvBhHA,CAAC,EuBgHE,CvBhHC,EAAE,CuBgHC,AvBhHA,CuBgHC,sBAAsB,CAAC;IiB9IjD,EfiME,AzBlKA,IuBgHI,CiB/IC,CxC+BC,EyBkKE,AzBlKA,CyBkKC,AejMA,ExC+BE,KAAK,CAAC,GAAG,EuBgHE,AvBhHA,CyBkKC,AzBlKA,CuBgHC,EEkDE,CACxB,QAAgB,EAChB,KAAe,EACf,GAAG,IAAe,KAChB;MzBrKJ,EyBsKE,AFtDC,CAAA,CAAE,EvBhHC,EyBsKE,AzBtKA,GAAG,IyBsKI,CzBtKC,CAAC,CyBsKC,EzBtKE,EyBsKE,AzBtKA,CyBuKjB,AzBvKkB,GyBuKf,CAAC,GAAG,IAAG;EepMnB,IxC8BI,EuBgHE,AiB9IA,CAAC,CfqMG,EerMQ,AxC8BR,CAAC,CyBuKG,AerMI,ExC+BZ,CyBsKW,AzBtKT,CAAC,EAAE,CyBsKU,EzBtKP,CuB+GQ,AvB/GP,CyBsKU,AFvDF,EEuDI,EzBtKP,EAAE,CuB+GQ,CAAC,CvB/GJ,CAAC,EAAE,GAAG,CuB+GM,CAAC,AvB/GL,KAAK,EAAG,GAAI,CAAC,EAAE,GAAG,EAAE,KAAK,CAAE,GAAI,EAAE,GAAG,EAAG,IACpE,OAAO;IwC/BX,EjB8IG,AvB9GD,CuB8GC,CAAC,CvB9GC,CAAC,CwChCC,AxCgCA,CyBqKG,CzBrKD,CAAC,CuB8GC,AiB9IA,CjB8IC,AiB9IA,CxCgCC,CuB8GC,CEuDG,GerMC,CfqMG,AerMF,AxCgCA,CAAC,EwChCE,CAAC,SxCgCS,CAAC,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;MAClD,GAAG,CyBqKI,AzBrKH,CyBqKG,AzBrKF,EAAE,CAAC,GyBqKK,AzBrKF,IyBqKM,EzBrKA,CAAC,IyBqKM,GAAG,KAAK,AzBrKF,CAAC,MAAM,CyBqKG,EAAE,CzBrKD,CAAC,GAAG,IAAI,CAAC,CAAC;AwC7BxD,IxC8BI,CAAA,MAAM,CyBqKG,OAAO,GAAG;MzBpKlB,IyBqKO,CAAA,CzBrKD,EAAE,GyBqKK,AzBrKF,IyBqKM,CzBrKD,CAAC,GAAG,EyBqKI,AzBrKF,CAAC,EyBqKI,KAAK,QAAQ,IAAI,OAAO,GAAG,KAAK,SAAS,EAAE;AgBlP5E,IlB4LK,EvB9GC,MyBqKQ,AzBrKF,EAAE,GAAG,EyBqKI,GAAG,AzBrKF,CyBqKG,AzBrKF,GAAG,EAAE,CAAC,EyBqKI,EAAE;AIpOhC,M7BgEG,GAAG,CyBqKI,AzBrKH,CyBqKG,AzBrKF,EAAE,CAAC,GyBqKK,AzBrKF,IyBqKM,EzBrKA,CyBqKG,AzBrKF,YyBqKc,AzBrKF,CAC3B,CAAC,EAAE,CyBoK+B,EAAE,AzBpK9B,EAAE,KAAK,EAAE,GAAK,CAAC,EAAE,GAAG,EAAE,KAAK,CAAE,GAAI,EAAE,GAAG,EAAG,CACjD;A6B1DP,ENwKE,EvB7GG,QyBmKS,GFtDC,CAAC,GEsDK,GAAG,CAAC,GFtDT,GAAqB,CEsDL,iBFtDuB,EAAA;EvB5GpD,EuB6GC,IAAI,CAAC,CEsDI,CAAA,MAAM,SFtDO,CAAC,MAAM,CAAC,UAAU,CAAC;AMvK1C,E7B2DD,EuB6GE,IAAI,CAAC,AvB7GA,GyBmKK,AzBnKF,CAAC,GyBmKK,CzBnKD,CAAC,EAAE,CAAC,IuB6GI,CAAC,MAAM,CAAC,UAAU,CAAC;AMvK/B,A7B2Db,CAAC,GuB6GG,EMxKS,ENwKL,CAAC,EMxKS,GAAG,AJ8NL,II9NS,ANwKP,CAAC,EMxKS,AJ8NL,EI9NK,EJ8ND,AFtDF,CEsDG,AFtDF,SEsDW,CAAC,AFtDF,CAAC,EEsDI,CAAC;AI5N1C,A7B2EA,YyBkJe,CAAA,CAAC,OAAO,OAAO,EAAE;AzBjJhC,cyBkJgB,OAAO,IAAI;AzBjJ3B,YyBkJe;AzBjJF,EuB6FX,IvB7FW,EuB6FL,EEqDK,EzBlJM,EuB6FL,CAAA,AvB7FgB,EuB6FhB;AMvKX,E7B2ED,EuB6FE,IEqDM,CAAC,CAAC,AFrDF,CEsDC,MAAM,CAAC,AFtDA,GEsDG,AFtDA,IEsDI,CFtDC,CAAC,CEsDC,CAAC,CAClB,CFvDoB,CAAC,EEuDjB,CAAC,CFvDoB,CAAC,CEuDlB,CAAC,OFvD0B,CAAC,MAAM,EAAE,CAAC;AMvKxD,INyKI,IEsDI,EFtDE,EEsDE,KAAK,AFtDA,CAAC,GAAG,CEsDC,AFtDA,CAChB,GAAG,QAAQ,CACR,CEoD2B,KAAd,AFpDP,CAAC,GEoDM,IAAA,AFpDC,IAAI,UEoDS,AFpDC,IAAI,CEoDnB,KAAA,CAAA,AFpD0B,CAAC,CAAA,CEoD3B,cAAc,GAAI,QAAQ,CAAC,QAAQ,CAAC,EAAE;AI/N5D,A7B4EK,O6B5EL,CAAA,EJgOU,GIhOV,GAAA,KAAA,AJgOqB,CAAC;AI/NT,E7B4EX,GuBgGO,CM5KI,EN4KD,CAAC,GEoDD,IFpDQ,AvBhGJ,C6B5EQ,AJgOP,CzBpJC,CyBoJC,CIhOQ,AN4KF,EvBhGH,E6B5ES,GAAG,AJgOP,AFpDa,CEoDZ,AFpDa,CM5KP,IJgOD,CAAC,CAAC,CFpDe,CAAC,MAAM,EAAE,CEoDb,AFpDc,EEoDM,AFnD5D,GAAG,QAAQ,CACR,MAAM,CAAC,OAAO,IAAI,SAAS,IAAI,OAAO,CAAC,CAAA;AM5KhD,E7B4EE,UyBmJU,OAAO;AgBpPhB,KlBmMM,GAAG,CAAC,GEkDD,IAAI,AFlDI,IAAK,OAAe,CAAC,OAAO,EAAE,CAAC,CAC9C,CAAC;AkB7LN,AzC4FK,YyBmJO,IAAI,EAAE,QAAQ,CAAC;EF/CzB,AvBnGA,QyBmJS,CAAA,CAAC,IFhDI,AvBnGA,CuBmGA,CvBnGE,CuBmGF,GvBnGM;A6B3EnB,E7B6ED,EuBkGE,IEgDK,GFhDE,IAAI,CAAC,SAAS,IAAI,IAAI;AMnLjC,MJoOM,CIpON,AJoOO,CIpOP,WAAA,GAAA,WAAA;AAKgB,ENiLd,EE+CG,KIhOW,MNiLD,CAAC,MMjLa,CAC3B,GAAgB,ANgLF,EM/Kd,CN+KmC,QM/KZ,EAAA,QN+K8B,EAAA;AvBlGlD,E6B3EH,AJ6NC,EF/CC,EM9KE,KN8KK,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC;AEgDzC,EzBlJE,E6B3EG,GAAuB,CAAC,SAAS,CAAC,K7B2EhB,EAAE,IAAI,C6B3EsB,CAAC,SAAS,CAAC;EAC3D,AN+KD,AvBnGA,C6B5EC,CAAC,OAAO,CAAC,AN+KA,CAAC,CM/KC,SN+KD,GAAqB,kBAAkB,EAAA;AkBhMjD,IZkBC,AN+KA,MM/KM,CAAC,AN+KA,IAAI,CM/KC,AN+KA,CM9KV,aAAa,EN8Ka,CAAC,GAAG,CAAC,EM9KT,CAAC,IAA4C,GN8K1B,CAAC,IAAI,CAAA,CAAE,8BM9KmB,GAAG,CAAC,IAAI,EAAE,EAC7E,CAAC,CACF;AYpBL,EZqBG,IYrBG,gBAAgB,GAAG,SAAA,CACvB,cAAsB,EAAA;AZqBxB,A7ByEK,EuBoGH,AkBhMA,IAAI,MlBgMM,CAAC,IAAA,GAA0B,CAAA,CAAE,EAAA;AM3KzC,E7BwEE,EuBoGE,MAAM,avBpGa,EAAE,IAAI;EAE3B,IuBkGU,OAAO,GAAG,CAAA;IAAE,AkB9LpB,ClB8LsB,GAAG,AkB7LvB,IlB6L2B,GkB7LpB,MAAM,KAAK,WAAW,IAC7B,OAAO,MAAM,CAAC,cAAc,CAAC,KAAK,WAAW,EAC7C;AZkBH,IN0KC,MAAM,oBAAoB,GAAG,IAAI,CAAC,2BAA2B,CAC3D,IAAI,CAAC,kBAAkB,CACxB;AM3KW,A7ByEX,IuBmGD,EkB7LE,ElB6LE,CM5KQ,GN4KJ,AkB7LA,ClB6LC,SkB7LS,GAAG,ClB6LC,CAAC,IkB7LI,CAAC,CZiBQ,CACtC,GAAgB,EAChB,OYnB4C,ClB6LC,AkB7LA,CZmBzB,AN0K0B,EM1K1B,AN0K4B;EMxK/C,A7BsED,G6BtEwB,CAAC,ANyKrB,AkB7LA,MlB6LM,GMzKwB,CAAC,AYpBrB,ClB6LC,AkB7LA,ClB8LT,CvBpGW,EuBoGR,AvBnGP,GyC3FoB,ClB8LT,AkB9LU,ClB8LT,IAAQ,IAAA,KM1KoC,CAAC,IYpBjB,EAAE,GZoBwB,A7BuEtC,C6BvEuC,E7BuEpC,CyC3FkB,ClB8LuB,AkB9LtB,0BzC2FS,GAAG,GuBmGU,CACrE,QvBpGuE;A6BtE9E,E7BwEE,EuBmGG,EkB/LC,UAAU,CAAC,UAAU,CAAC,mBAAmB,CAAC;AZsBhD,IN2KI,EkBhME,ElBgME,CAAC,IAAI,AkBhMA,ClBgMC,GkBhMG,WlBgMW,EAAE,EAAE,EkBhME,CAAC,UAAU,CAAC;AzC6FzC,IyC5FA,ElBgMC,MAAM,KAAK,CAAc,aAAA,IAAI,CAAC,IAAI,8BAA8B,CAAC;EkB/LpE,AzC4FD,CyC5FC,ClBgME,AkBhMD,EzC4FE,KyC5FK,CAAC,EAAE,CAAA,GzC4FI,CAAA,EAAA;IuBsGd,AvBrGA,MuBqGM,CvBrGC,IAAI,CAAC,EuBqGE,GAAG,IAAI,CAAC,OvBrGO,GAAG,KAAK,OuBqGO,CAAC;GvBpG9C,GuBqGG,kBAAkB,EAAE,oBAAoB;EkB/L5C,AzC4FA,IuBoGI,GkBhMG,IAAI,aAAa,EAAE;AZqBzB,AYpBH,CAAC,GlBgMI,CAAA,CAAE;AM3KD,AYnBN,AzC2FK,S6BxEW,kBAAkB,CAChC,SAAuB,EAAA;AYnBlB,EZqBL,A7BsEA,EuBqGE,EkBhMS,AzC2FP,E6BtEE,CN2KC,MAAM,CACT,KM5Ke,EYrBS,CZqBN,EYrBS,AzC2FP,CAAA,EAAA,I6BtEO,CAAC,AN4KV,EAClB,EM7KgC,IYrBW,CAAC,SlBkM5B,CACjB,IAAI,AkBnMuD,CAAC,GlBmMpD,CAAC,iBAAiB,CAAC,OAAO,EAAE,EAAE;AkBjM3C,EZoBE,E7BsEE,E6BtEE,AN8KA,KvBxGK,CuBwGC,GvBxGG,CAAC,C6BtEC,CAAC,GAAG,CAAC,W7BsEW,E6BtEE,CAAC,A7BsEA,E6BtEE,EN8KE,CvBxGC,EuByGjC,IAAI,CAAC,2BAA2B,CAAC,kBAAkB,CAAC;AkBlMrD,GzC0FJ,C6BtEC,EN+KE,AkBnMO,IZoBH,AN+KA,CM/KC,KAAK,CACV,GYrBqB,GAAG,OlBmMA,KAAK,IkBnMW,CAAC,gBAAgB,CAAC,MlBmMD,EAAE,MM9KL,aAAa,GAAG,CACvE;E7BsEH,E6BpEE,IN4KI,GM5KG,KAAK,QN4KQ,CAAC,OAAO,CAAC,QAAQ,CAAC;AmB9P1C,EbmFG,IN4KI;EM1KL,EN2KG,SM3KQ,CAAC,GAAG,CAAC,aAAa,EAAE,SAAS,CAAC;IN6KvC,OAAO,QAAQ;EM1KjB,KAAK,MAAM,GAAG,IAAI,KAAK,CAAC,MAAM,EAAE,EAAE;EN6KlC,EM5KE,aAAa,CAAC,GAAsB,EAAE,SAAS,CAAC;A7BmE/C,E6BlEF;EAED,A7BiEA,O6BjEO,IAAI,O7BiEO,EAAE,OAAO,IAAI,KAAK,UAAU;A6BhEhD,E7BkEE;A6BhEF;;;AN6KK;EACH,MAAM,CAAC,QAA2B,EAAE,UAAmB,EAAA;;IACrD,MAAM,oBAAoB,GAAG,IAAI,CAAC,2BAA2B,CAAC,UAAU,CAAC;AmB/P1E,A1CwJE,IuBwGD,MAAM,iBAAiB,GACrB,CAAA,EAAA,GAAA,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,oBAAoB,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAC9C,IAAI,GAAG,EAAqB;AM1K/B,AarEH,E1CsIE,EuB0GE,EmBhPE,SAAS,E1CsIE,C0CtIC,A1CsIA,GuB0GG,CAAC,AmBhPA,C1CsIwB,EuB0GrB,AvB1GuB,CuB0GtB,MvB1GuC,EuB0G/B,AvB1G+B,CuB0G9B,CmBhPP,CAAC,oBAAoB,CAAC;AbsElC,AapEhB,InB+OI,AvB1GA,IuB0GI,AvB1GA,C6BjEQ,AN2KP,AvB1GA,KAAK,CAAC,M6BjEa,CAC1B,A7BgEoB,CAAC,CuB0GC,CM1KN,AN0KO,EMzKvB,CNyK0B,AvB1GA,CuB0GC,AvB1GA,E6B/DpB,A7B+DsB,E6B/DtB,gBNyKwC,EAAE,iBAAiB,CAAC;EMvKnE,ENyKE,EvB3GE,E6B9DE,ENyKE,EvB3GE,KAAK,CAAC,QuB2GQ,CMzKC,ENyKE,CMzKE,GAAuB,ANyKrB,CMzKsB,ANyKrB,SMzK8B,ANyKrB,CMxKtC,ANwKuC,GAAG,CAAC,OMxKhC,CAAC,S7B6DgD,CAAC,C6B7DtC,CAAC,ANwKuC,CMvK/D,ANuKgE,YMvKpD,CAAC;AaxEf,IbwEiB,ANwKhB,AvB3GC,IuB2GG,IMxKoB,EAAE,UNwKN,EAAE;AmB/OnB,EbuE2B,CAAE,CAAC,A7B+DjC,EuB0GE,AmBhPO,E1CsIL,CAAC,KuB0GK,AvB1GA,CuB0GC,CvB1GC,G0CtIU,GAAkB,SnBgPb,EAAE,CmBhPW,mBnBgPS,CAAC;EMxKpD,AavEA,EnBgPG,AvBzGD,E6BhEE,AavEA,EAAE,E1CuIE,C0CvIC,CAAC,W1CuIW,E6BhEE,C7BgEC,C6BhEC,M7BgEM,GACzB,IAAI,CAAC,qBAAsB,GAC3B,IAAI,CAAC,cAAe;E0CxI1B,EbuEE,AN0KA,AvBvGA,K6BnEK,AavEA,C1C0IC,CuBuGC,KvBvGK,CuBuGA,EvBvGG,E0C1IV,A1C0IY,O6BnEO,CAAC,gBAAgB,EAAE;EAC5C,EavEC,A1C2IA,EuBsGE,GvBtGG,E0C3IE,EAAE,A1C2IA,CAAC,C0C3IC,E1C2IE,CAAC,EAAE,CAAC,EuBsGE,CAAC,AvBtGA,KAAK,CuBsGC,AvBtGA,CuBsGC,KvBtGK,EAAE,CuBsGC,AvBtGA,CuBsGC,GvBtGG,CAAC,EAAE;E6BnE5C,AavEA,CAAC,CnBiPC,CAAC,CvBtGC,G6BpEI,GAAuB,A7BoErB,C6BpEsB,I7BoEjB,GAAG,E6BpEuB,CAAC,E7BoEnB,CAAC,CAAC,CAAC,M6BpE2B,CAAC,IAAI,CAAC;AAC7D,AavEA,CAAC,EAAG,G1C2IE,MAAM,SAAS,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,MAAM;A6BlE5C,AavEA,EnBiPE,IvBvGI,MAAM,KAAK,GAAG,SAAS,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;MAC1C,MAAM,SAAS,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,MAAM;MACtC,MAAM,KAAK,GAAG,SAAS,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AuBwG3C,MvBtGC,MAAM,QAAQ,GAAG,KAAK,IAAI,CAAC;A0C1I9B,EnBiPO,IvBtGJ,MAAM,QAAQ,GuBsGW,AvBtGP,CuBuGpB,AvBvGqB,KAAK,GuBuGK,AvBvGF,EuBwG7B,EvBxGiC,KAAK,CAAC,EuBwGrB,CvBxG0B,CuBwG1B,IvBxG+B,IAAI,CAAE;A0C1IpD,InBoPH,EmBpPS,A1C2IP,IuByGI,AmBpPO,A1C2IP,G0C3IU,K1C2IF,CuByGC,EvBzGG,CuByGA,AmBpPF,A1C2IG,C0C3IO,GnBoPJ,AmBpPe,CnBoPd,AvBzGC,C0C3Ia,E1C2IV,IAAI,KAAK,CAAC,EuByGC,CAAC,AvBzGG,GuByGA,CAAC,CvBzGI,IAAI,CAAE,IuByGA,CAAC;EmBnPxD,EnBoPE,EvBzGE,EuByGE,AmBpPA,CnBoPC,CvBzGC,O0C3IO,CnBoPC,AvBzGA,EuByGE,AmBpPA,C1C2IC,G0C3ID,E1C2IM,GAAG,IAAI,c0C3II,EAAC,GAAG,CAAC;AbwEvC,EavED,InBoPI,AvBxGA,E0C5IE,E1C4IE,CAAC,C0C5IC,GAAG,IAAI,C1C4IC,EAAE,O0C5IC,EAAE;AbwEnB,EavEJ,EnBoPG,EmBpPC,CAAC,C1C4IC,C6BrEQ,IavEH,CAAC,E1C4IE,GAAG,EAAE,E0C5IE,CAAC,ObuEc,CACpC,GAAgB,EAChB,IAAO,EACP,kBAAA,GAA6B,kBAAkB,EAAA;EAE/C,Aa3EA,EnBoPE,ImBpPI,A1C6IA,CuBuGC,GvBvGG,CAAC,C6BlEC,CAAC,ANyKA,EmBpPE,Cb2EC,EAAE,Aa3EA,E1C6IE,CuBuGC,CMzKC,Aa3EA,A1C6IA,C6BlEC,Aa3EA,Cb2EC,CNyKC,ImBpPI,EAAE,GnBoPG,EAAE,CMzKC,CAAC,kBAAkB,CAAC;AAC3D,Ea3EE,InBoPI,GmBpPG,CnBoPC,AvBvGA,QAAQ,G0C7IH,A1C6IM,C0C7IL,C1C6IO,c0C7IQ,CAAC,SAAS,CAAC;Ab6E1C,Aa5EA,CAAC,OnBoPO,AvBvGC,QuBuGO,CAAC,QAAQ,EAAE,UAAU,CAAC;AmBlPtC,MnBmPO,AmBnPD,A1C4IC,CuBuGA,CAAC,OAAM,EAAA,EAAA,GmBnPQ,GAAG,SAAA,CAAU,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KYwDa,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,EZvD1C,GYuD+C,KAAK,EACpD,4CAA4C,CZxDW,AYyDxD;EZxDD,AYyDA,CZzDA,C9BgME,E0CvIE,E1CuIE,IAAI,C8BhMV,AYyDW,A1CuIA,C8BhMX,IYyDgB,IAAI,EAAE,O1CuIO,IAAI,CAAC,I8B/LhC,G9B+LuC,EAAE,0E8B/LsC;EACjF,CAAA,CYwDE,E1CuIE,M8B/LJ,CAAA,AYwDW,A1CuIA,C0CvIC,G1CuIG,CAAC,I0CvII,C1CuIC,CAAC,C0CvIC,aZvDrB,GYuD6B,CAAC,OAAO,yEZvD+C;EACtF,CAAA,CYuDE,A1CuIC,EuBwGE,ImB/OG,EZvDR,CAAA,AYuDW,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,QZtD5B,CYsDqC,CAAC,gFZtD4C;EACpF,CAAA,CPqSG,AmB/OD,A1CuIA,I0CvII,G1CuIG,I8B7LT,CAAA,EYsDgB,EAAE,Q1CuIQ,CAAC,IAAI,CAAC,U8B5L9B,a9B4LqD,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;C8B3LzE,E9B4LE,CuByGC,EmBhPE,KnBgPK,QAAQ,CmBhPC,CAAC,EnBgPE,CmBhPC,CAAC,EnBgPE,emBhPe,EAAE,IAAI,CAAC;AZvC1C,E9BgLL,E0CxIG,EZxCQ,aAAa,GAAG,IAAI,kBAAY,CAC3C,KAAK,EACL,UAAU,EACV,MAAM,CACP;EPsRS,AmBjPP,CAAA,MAAM,IAAI,OAAO,OAAO,EnBiPU,CACjC,EmBlP4B,QnBkP5B,EmBlPsC,CnBkPjB,CmBlPmB,iBnBkPD,EAAA;AQjW3C,IRmWI,AmBnPA,InBmPI,EmBnPE,EnBmPE,CAAC,AmBnPA,OAAO,EnBmPE,EAAE;EmBlPrB,CAAA,GnBmPG,GmBnPG,InBmPI,IAAI,CAAC,SAAS,CAAC,iBAAiB,GAAG,UAAU,GAAG,kBAAkB;IAC1E,AmBnPD,CnBmPC,KmBnPK,CnBmPC,EmBnPE,IAAI;IACb,EnBmPE,OAAO,KmBnPK,CAAC,InBmPI,CAAC,CAAA,AmBnPC,CAAC,iBAAiB,CAAC;EACzC,EnBmPE;AmBlPL,CAAC;AAEM,MAAM,GAAG,GAAG,SAAA,CAAU,GAAG,OAAkB,EAAA;EnBmPxC,AmBlPR,IAAI,SAAS,KAAK,EnBkPU,CAAA,CmBlPN,CnBkPM,CmBlPJ;InBmPtB,AmBlPA,OnBmPE,CAAC,CAAC,AmBnPK,GAAG,CnBmPJ,CAAC,GmBnPQ,MnBmPC,IAChB,IAAI,CAAC,SAAS,CAAC,iBAAiB,KAAA,UAAA,CAAA;ImBnPlC,IAAI,MAAM,KAAK,IAAI,IAAI,cAAc,CAAC,GAAG,CAAC,iBAAiB,CAAC,KAAK,IAAI,EAAE;AnBsP1E,MmBrPKA,eAAa,CAAC,IAAI,CAAC;AnBuPzB,ImBtPK;AnBsPL,AvB9GK,E0CvIF,KnBqPH,CAAA,QAAA,GAAA,QAAA;AACA,EmBpPE,A1CsIA,I0CtII,GnBoPG,GmBpPG,EAAE,W1CsIW,CAAC,KAAa,EAAE,KuB8GH,CAAC,CvB9GkB,EAAA,OuB8GA,EAAA;EACvD,EmBpPE,A1CsIA,IAAI,CuB8GC,AvB9GA,C0CtIC,I1CsII,EAAE,C0CtIC,EnBoPE,CmBpPC,InBoPI,YmBpPY,CAAC,KnBoPK,AmBpPA,CAAC,EnBoPE,EmBpPE,EAAE,KnBoPK,EmBpPE,CnBoPC,AmBpPA,UnBoPU;AQrWhE,ARsWH,ImBpPI,A1CuIA,M0CvIM,A1CuIA,C0CvIC,OAAO,CAAC,I1CuII,GAAG,OAAO,GACzB,IAAI,CAAC,qBAAsB,GAC3B,IAAI,CAAC,cAAe;AuB6G5B,EmBrPG,E1C0IC,E+B/OS,GR0VJ,CvB3GC,MAAM,GAAa,E+B/OD,A/B+OG,C+B/OH,GR0VH,CAAiB,SAAuB,EAAA;AmBpPjE,CAAC,CXxFC,AR6UA,EvB1GE,KuB0GK,AvB1GA,I+BnOP,A/BmOW,C+BlOT,A/BkOU,GAAG,CuB0GC,AvB1GA,CuB0GC,CvB1GC,C+BlOQ,A/BkOP,E+BjOjB,C/BiOoB,K+BjOiB,A/BiOZ,CAAC,C+BhO1B,KR0UgC,AvB1GA,GAAI,C+BhOP,CR0UG,CQ1UH,MR0UG,CAAA;AACpC,AmBpPO,IX7FG,EW6FG,A1C0IP,E+BvOc,CAAA,G/BuOR,I0C1IW,C1C0IN,E+BvOG,AW6FM,C1C0IN,E+BvOG,KAAK,CW6FF,CACxB,I1CyI+B,CAAC,C0CzIlB,EAAA,E1CyIuB,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;E0CvIlD,EXxFE,E/BiOE,E+BjOE,CAAC,AWwFA,G1CyIG,K+BjOK,EWwFE,CXxFM,C/BiOJ,C0CzIC,E1CyIE,CAAC,C+BjOA,CAAA,C/BiOG,C0CzIY,EAAA,EXxFf,A/BiOQ,C+BjOR,A/BiOS,C+BjOT,CAAA,EAAA,E/BiOe,K+BjOR,CAAE;APhDlC,IOiDI,AWwFA,E1CyIE,C0CzIC,CXxFC,AWwFA,CXxFC,G/BiOG,E0CzIE,EXxFE,AWwFA,C1CyIC,E+BjOO,AWwFL,C1CyIC,K+BjOI,CAAA,AWwFE,CAAC,E1CyIE,G+BjOL,A/BiOQ,C+BjOR,CAAA,CAAA,EAAA,MAAM,CAAE,C/BiOa,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;E0CxIhE,CAAC,CXxFC,E/BiOE,E+BjOE,A/BiOA,C+BjOC,A/BiOA,K+BjOK,GAAG,MAAM,CAAC,IAAI;AWyF5B,CAAC,GXxFG,E/BkOE,E+BlOE,CAAC,G/BkOG,SAAS,GAAG,CAAC,GAAG,KAAK,CAAC,M+BlOM,A/BkOA,G+BjOlC,MAAM,CAAC,8BAA8B;AWyFpC,IXxFH,EWwFS,A1CyIP,E+BjOE,CAAC,EWwFS,C1CyIN,E0CzIS,G1CyIJ,E+BjOE,C/BiOC,E+BjOE,CWwFD,CAAU,GAAG,E1CyIL,E+BjOE,C/BiOC,E0CzImB,EAAA,S1CyIN,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;E0CxIjE,EXxFE,E/BiOE,E+BjOE,AWwFA,A1CyIA,C+BjOC,A/BiOA,M0CzIM,GXxFG,AWwFA,CXxFC,YAAY,CACzB,IAAI,SWuFmC,GAAG,QXvF7B,CAAC,KAAK,EAAE,AWuFqC,CAAC,GAAG,EXvFnC,IAAI,CWuFsC,CXvFtC,AWuFuC,QXvFvC,CAAA,2BAAuB,CACvD;EWuFH,I1C0II,K0C1IK,CAAC,A1C0IA,K0C1IK,CAAC,G1C0IG,GAAG,C0C1IC,A1C0IA,C0C1IC,E1C0IE,KAAK,CAAC,MAAM;A0CzIxC,CAAC,K1C0IK,MAAM,KAAK,GAAG,SAAS,GAAG,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;A0CxI5D,EXvFL,IAAI,AWuFO,A1CyIP,EAAE,CAAC,E0CzIS,GAAG,SAAA,CAAU,GAAG,OAAiB,EXvFf,AWuFe,CXvFf,EAAA;EWwFlC,EXvFE,E/BiOE,E+BjOE,AWuFA,CXvFC,C/BiOC,K0C1IK,A1C0IA,G0C1I4B,C1C0IxB,I+BjOI,A/BiOA,E+BjOE,E/BiOE,KAAK,IAAI,IAAI,G0C1IG,C1C0IC,KAAK,IAAI,IAAI,E0C1IE,CAAC,C1C0IC,E0C1IE,G1C0IG,I0C1II,A1C0IA,C0C1IC,EAAE,C1C0IC,EAAE;E0CzI1E,EXvFE,I/BiOI,G+BjOG,AWuFA,CAAC,E1C0IE,C+BjOC,CAAC,CWuFC,CAAC,A1C0IA,O0C1IO,CAAC,e1C0Ie,EAAE,I+BjOI;EWwF7C,I1C0IK,E0C1IC,IAAI,KAAK,CAAC,OAAO,CAAC;AAC1B,CAAC,CXtFC,IAAI,A/BiOA,MAAM,QAAQ,GAAI,KAAK,IAAI,CAAC,G+BjOE,A/BiOG,C+BjOF,GAAY,C/BiOL,C+BjOK,G/BiOD,CAAE;A0CzI3C,IXvFH,EWuFS,A1C0IP,E+BjOE,CAAC,CWuFQ,E1C0IL,C0C1IQ,A1C0IP,IAAI,CAAC,I0C1IE,CXvFG,AWuFO,EXvFL,CWuFQ,A1C0IP,CAAC,M0C1IwB,EAAA;EACjD,EXvFE,E/BkOE,E+BlOE,AWuFA,CXvFC,C/BkOC,K0C3IK,A1C2IA,G0C3IG,E1C2IE,EAAE,EAAE,c0C3Ic,EXvFE,CWuFC,EXvFE,GAAG,WWuFW,CAAC,GAAG,OAAO,CAAC;EACnE,M1C2IM,G0C3IG,CAAC,E1C2IE,E0C3IE,CAAC,K1C2IK,E0C3IE,CAAC,A1C2IE,KAAK,IAAI,CAAC,GAAI,IAAI,GAAK,KAAK,IAAI,CAAE;AwBtR1D,AkB4IH,CAAC,CXtFC,IAAI,E/BiOE,E+BjOE,CAAA,EAAA,C/BiOI,CAAC,IAAI,CAAC,QAAQ,CAAC;AwBjR7B,AkBwIA,IXvFI,IAAI,A/BkOA,C+BlOC,G/BkOG,KAAK,KAAK,C+BlOC,C/BkOC,C+BlOC,C/BkOC;I+BjOtB,M/BkOM,C+BlOC,IAAI,CAAC,A/BkOA,K+BlOK,G/BkOG,GAAK,KAAK,IAAI,CAAC,GAAI,IAAI,GAAI,KAAK;AwBlRrD,UxBmRO,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;A0C1I5B,EXtFD,IPlDW,AOkDP,E/BiOG,K+BjOI,CAAA,EAAA,QPlDkB,CAAA;AkByIxB,ElBtIL,EOgDE,EWsFS,A1C2IN,E+BjOC,CAAC,IPhDP,CAA6B,IAAY,EAAA,GOgDpB,CWsFQ,CXtFN,EWsFS,SAAA,CAAA,EAAA;IlBtIH,AOiD3B,A/BiOC,IwBlR8B,CAAA,EOiDxB,EPjDwB,EOiDpB,CPjDgB,AOiDf,IPjDmB,IOiDX;EWuFtB,ElB1IiB,AxBsRf,E0C3IA,ElB3Ie,CAAA,ExBsRR,E0C3IA,I1C2IM,CwBtRW,CkB2IX,ElB3Ic,GkB2IT,ClB3Ia,GAAG,EAA0B,KkB2I/B,IAC7B,MAAM,CAAC,QAAQ,IACf,MAAM,CAAC,QAAQ,CAAC,QAAQ,IACxB,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EACjD;EXzFF,C/BiOC,C0CvIC,EX1FE,EW0FE,CACF,GX3FM,CAAA,EAAA,yCW2FyC,GAC7C,8CAA8C,CACjD;ElB/IH,AkBgJC,A1CqID,E+BlOE,IAAI,CAAC,cAAc,EAAE;AW8FzB,CAAC,GX7FG,OAAO,IAAI,CAAC,OAAO;AWuGvB;EXpGE,IAAI,SAAS,CAAA,EAAA;AWsGZ,A1C4HE,I+BjOD,OAAO,IAAI,CAAC,UAAU;AWsGnB,E1C4HL,I0C5HW,C1C4HN,CAAA,EAAA,e0C5HyB,GAAG,SAAA,CAAU,IAAa,EAAA;EXnGxD,AWoGA,E1C4HE,E+BhOE,E/BgOE,C0C3HJ,A1C2HK,IAAI,CAAC,C+BhOC,CAAA,AWqGJ,EXrGI,EWqGA,KAAK,G1C2HQ,EAAE,G0C3HF,KACvB,IAAI,KAAK,IAAI;EAAA,EXrGd,E/BgOE,IAAI,C+BhOC,A/BgOA,I+BhOI,CAAC,S/BgOS,C+BhOC,E/BgOE,CAAA,CAAE;AwBpRzB,EkB0JC,IAAI,A1C2HJ,IAAI,C0C3HK,A1C2HJ,M0C3HU,CAAC,O1C2HG,GAAG,CAAA,CAAE,K0C3HS,IACjC,IAAI,KAAK,MAAM,CAAC,iBAAiB,CAAC;AAExC,CAAC,ClB5JC,AOsDA,IAAI,A/B+NA,IAAI,CAAC,GwBrRG,CAAiB,AOsDhB,CAAC,GAAY,EAAA,GPtD0B,EAAA,MxBqRtB,GAAG,CAAA,CAAE;A0CvH9B,IlB7JH,AOsDA,EWuGS,A1CwHP,E+B/NE,CAAC,CPtDC,AxBqRA,CAAC,OwBrRO,COsDC,EPtDE,COsDC,GPtDG,AOsDA,AWuGO,ClB7JN,EkB6JS,I1CwHH,GAAG,CAAA,CwBrRE,AkB6JF,A1CwHE,CwBrRC,AkB6JO,EAAc,EAAA,KlB7JZ,CAAC,IAAI,CAAC;EkB8JnD,ElB7JE,EkB6JE,ElB7JE,EkB6JF,MlB7JU,CAAC,QkB6JF,GAAE,GlB7Jc,CkB6JV,ClB7JY,EAAE,KkB6JN,CAAC,UAAU,KAAK,UAAU,EAAE;EXrGvD,EWsGE,ElB7JE,AkB6JA,A1CyHA,E0CzHE,G1CyHG,CwBtRC,GxBsRG,CwBtRC,AxBsRA,GAAG,CAAC,CwBtRC,CACb,AxBqRc,CAAC,GAAG,IAAI,CAAC,IwBrRV,QxBqRsB,CwBrRb,AxBqRc,CwBrRb,IAAI,CxBqRe,EAAE,CAAC,EAAE,EAAE,6BwBrRe,IAAI,CAAC,IAAI,EAAE,CAC5E;EkB4JJ,CAAA,ClB3JE,IxBoRG,C0CzHC,G1CyHG,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;IwBlRxD,IxBmRI,IwBnRI,AxBmRA,CwBnRC,AxBmRA,YwBnRY,CAAC,CxBmRC,CAAC,IAAI,CAAC,EwBnRE,CAAC,WxBmRW,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;A+B9NlD,Q/B+NG,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC;EwBjRzE,AOmDQ,EWuGN,IAAI,A1CwHA,IAAI,CAAC,C0CxHC,EXvGU,CAAA,AWuGP,EXvGO,GWuGF,GlB1JG,CAAiB,QxBkRR,CwBlR+B,AxBkR9B,EwBlR8B,ExBkR1B,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;IwBjRjE,AOmDA,AWuGA,IXvGI,EPnDE,AkB0JA,EXvGE,CAAC,KPnDK,CkB0JC,ElB1JE,COmDC,AWuGA,EXvGE,CPnDC,CAAC,KkB0JJ,CAAA,EAAA,GlB1Je,CAAC,SAAS,CAAC,IAAI,CAAC;IACjD,EOmDE,AWuGA,ElB1JE,AxBmRA,E0CzHE,CAAC,CXvGC,A/BgOA,CAAC,GwBnRG,CAAC,AxBmRA,E0CzHE,CAAC,C1CyHC,CAAC,E0CzHE,CXvGC,CAAC,AWuGA,KlB1JK,COmDC,CPnDC,AOmDD,EPnDG,IxBmRI,CAAC,M+BhOR,A/BgOc,C+BhOd,C/BgOgB,2B+BhOO;QAAE,AWwGjD,E1CyHE,IAAI,C+BjOkD,A/BiOjD,E+BjOmD,CWwGhD,CAAC,EXxGmD,CAAC,MWwG3C,C1CyHC,C0CzHC,A1CyHA,I0CzHI,A1CyHA,C0CzHC,A1CyHA,K0CzHK,CAAC,EAAE,CAAC,CAAC,U1CyHU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;MwBlRhE,AOiDsE,CAAE,CAAC,AWyGvE,ElB1JE,AxBmRA,CwBnRC,GxBmRG,CAAC,KwBnRK,CAAC,MAAM,CAAC,QxBmRQ,CwBnRC,AxBmRA,CwBnRC,GxBmRG,CwBnRC,AxBmRA,CwBnRC,WxBmRW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;IwBlRhE,AOiDA,EWyGE,E1CyHE;IwBjRL,EkB0JE,A1CwHC,EwBlRC,CAAC,CkB0JC,CAAC,MAAM,EAAE,ElB1JE,CAAC,SAAS,CAAC;AOiD/B,I/BkOI,I0CxHG,MAAM,GAAG,IAAI;ElBxJnB,MkByJM,EAAE,EAAE;AVpNZ,MUqNO;A1C0HP,I0CzHI,CAAC;IAED,IAAI,QAAQ,CAAC,gBAAgB,EAAE;A1CyHhC,M0CxHG,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,SAAS,EAAE,KAAK,CAAC;A1CsHrE,OAAA,CAAA,MAAA,GAAA,MAAA;AwB9QK,AxBiRC,M0CvHA,A1CuHO,M0CvHD,CAAC,gBAAgB,A1CuHQ,C0CvHP,MAAM,EAAE,A1CuHO,KAAK,CAAA,G0CvHH,EAAE,KAAK,CAAC;ElBzJrD,AxBgRF,WwBhRa,AxBgRb,CwBhR8B,AxBgR9B,EAAA,EwBhRqC,EAAA;IACjC,AkB0JC,CAAA,GlB1JG,GkB0JG,ClB1JC,CAAC,EkB0JG,OlB1JM,CAAC,AkB0JS,CAAC,ElB1JP,CAAC,IAAI,CAAC,EAAE,CkB0JU,EAAE;I1CsHnC,EwB/QL,ExB+QS,CAAA,IwB/QF,AxB+QE,GAAG,CwB/QD,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAA2B,IxB+QpB;IwB9QtC;AxB+QJ,M0CpHM,QAAgB,CAAC,WAAW,CAAC,oBAAoB,EAAE,MAAK;A1CsH/D,IwB9QI,IkByJI,ElBzJE,EkByJE,MlBzJM,EkByJE,ClBzJC,AkByJA,IlBzJI,MkByJM,ElBzJE,CAAI,EkByJD,ElBzJK,EAAE,IAAI,CAAC,CkByJF,EAAE;IlBxJ5C,IAAI,CAAC,CkByJC,QlBzJQ,CAAC,AkByJA,EAAE,ClBzJC,CAAC,IAAI,EAAE,QAAqC,CAAC;AxB+QhE,IwB7QC,IkBwJK,GlBxJE,QAAuB;AxB2QlC,M0ClHM,CAAC,A1CkHP,C0ClHQ,A1CkHR,uBAAA,GAAA,uBAAA;AgCvUG,AhC0UI,EwB3QL,IxB2QW,QwB3QC,CAAA,EAAA,CxB2QW,GAAG,SAAA,CAAU,GAAW,EAAA;AgC5SjD,EhC6SE,EwB3QE,IxB2QI,GwB3QG,KAAK,CAAC,AxB2QA,GAAGhI,CwB3QC,CAAC,IAAI,CAAC,SAAS,CAAC,ExB2QA,CAAC,GwB3QK,AxB2QF,CAAC,CwB3QG,CAAC;ExB4Q5C,I0CpHK,G1CoHE,G0CpHY,CAAC,E1CoHP,CAAC,Q0CpHiB,CAAC,M1CoHH,CAAC,C0CpHU,EAAE,M1CoHH,EAAE,C0CpHU,CAAC,E1CoHP,CAAC;AwB1Q/C,AxB2QD,CAAA;AwB3QC,AxB6QD,OwB7QC,CAAA,kBAAA,GAAA,kBAAA;AQhCE;AACI,IU0LF,EV1LQ,WAAW,GAAG,OAAA;AAAQ,AhC+ShC,E0CpHA,KV3LgC,CAAA,WAAA,GAAA,WAAA;AU4LnC,A1CgHA,C0ChHC,M1CgHD,CAAA,CgCxOgB,WhCwOhB,EgCxO6B,CAC3B,AhCuOF,QgCvO4B,EAC1B,EhCsOF,OgCtOW,GAAG,CAAA,CAAE,EAAA;AUwHhB,A1CkHO,EgCxOL,IAAI,AhCwOO,OgCxOA,GAAG,QAAQ,WhCwOkB,GAAG,SAAA,CAAU,GAAW,EAAA;EgCtOhE,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;AUsHlC,E1CkHD,EgCvOE,KhCuOK,CgCvOC,IAAI,GAAG,IhCuOI,CAAC,GAAG,CgCvOC,AhCuOA,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;A0CjHtC,A1CkHP,CAAA,GgCvOI,EUqHS,OVrHA,CUqHQ,EVrHL,CUqHQ,YAAY;AAEpC,A1CkHA,MgCzOkB;IAAI,CAAE;AUyHrB,EVxHA;AUyHI,EVvHL,IUuHW,EVvHL,MAAM,AUuHO,GVvHP,AUuHU,MVvHV,CAAA,KUuHsB,CVvHtB,CAAA;AUyHd,IVxHI,IAAI,EAAE,kBAAkB;IACxB,8BAA8B,EAAE;AUyHjC,EVzHsC,CAAA,EAClC,SAAS,CACb;AUwHI,EVvHL,IUuHW,EVvHL,IAAI,GAAG,EUuHS,GAAG,CVvHN,CAAC,IAAI,GUuHC,CAAU,CAAS,EAAE,CAAS,EAAA;A1CkHtD,EgCvOD,AUsHA,IVtHI,AUsHA,CAAC,KAAK,CVtHC,AUsHA,EAAE,EVtHE,KAAK,QAAQ,IAAI,CAAC,IAAI,EAAE;AhC+NzC,IgC9NI,AUsHA,G1CwGJ,CAAA,EgC9NU,CUsHC,CAAC,WVtHW,CAAC,MAAM,CAAwB,MhC8NtD,GAAA,KgC9NsD,CAAA,uBhC8NtD,MgC9NsD;AhCuO/C,E0ChHJ,CAAA,GVtHG,AhCsOO,G0ChHJ,IVtHI,AUsHA,CAAC,CVtHC,GhCsOU,C0ChHN,EVtHE,AhCsOO,CgCtON,IAAI,CUsHC,G1CgHC,C0ChHG,A1CgHO,C0ChHN,E1CgHiB,EAAA,C0ChHZ,QAAQ,EAAE;E1CiH7C,EgCtOG,AUsHD,CVtHC,CAAC,AhCsOA,K0ChHK,CAAC,CAAC;EVrHV,AUsHA,CAAA,C1CgHC,K0ChHK,E1CgHE,E0ChHE,CAAC,G1CgHG,CAAC,C0ChHC,QAAQ,G1CgHG,C0ChHC,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,IAAI,EAAE,MAAM,YAAY,MAAM,CAAC,EAAE;IAC/B,OAAO,MAAM;EyCoRf,AzCnRC,IyCmRG,CAAC,IAAI,EAAE;EACX,AzClRA,IyCkRI,GAAG,CzClRC,EyCkRE,GAAG,CzClRC,CAAC,WAAW;EyCmR1B,EzClRE,GyCkRG,EzClRE,EyCkRE,CAAC,CzClRC,EyCkRE,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACpC,IAAI,CAAC,KAAK,CAAC,EAAE;MACX,GAAG,IAAI,GAAG;IACX,EzClRC,MAAM,SAAS,GAAG,MAAc;A+B0JnC,IUyHC,EzClRE,CyCkRC,IAAI,EzClRE,EyCkRF,EzClRM,IAAI,CAAC,QyCkRF,CzClRW,CyCkRV,AzClRW,IyCkRP,CAAC,CAAC,CAAC,AzClRW,CyCkRV,CzClRY,CAAC;A+B0J1B,IUyHZ,AzCjRA,GyCiRG,EVzHS,A/BxJP,EyCiRE,GAAG,CVzHQ,A/BxJP,C+BwJQ,IAAA,GAAe,kBAAkB,EAAA;EACtD,EUyHE,EzCjRE,CyCiRC,CVzHC,E/BxJE,C+BwJC,AUyHA,GVzHG,E/BxJE,G+BwJG,CAAC,C/BxJC,E+BwJE,CAAC,IAAI,AUyHA,CVzHC,AUyHA,CzCjRC,EyCiRE,AzCjRA,CyCiRC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EVxHxC,AUyHC,IVzHG,CAAC,C/BxJC,E+BwJE,IAAI,A/BxJA,GAAG,C+BwJC,A/BxJD,CAAE,I+BwJI,kBAAkB,EAAE;EU2HzC,EV1HE,CU0HC,CzClRE,GyCkRE,EV1HE,CU0HC,YV1HY,EAAE;EACvB,AU0HD,IzClRI,GyCkRG,GAAG;AACZ,CAAC,CV1HC,E/BxJE,E+BwJE,CAAC,E/BxJE,C+BwJC,EAAE,E/BxJE;AyCoRd,IV3HI,MAAM,aAAa,CAAC,MAAM,CAAkB,QAAA,CAAA,uBAAA;MAAE,A/BvJ5C,MAAM,C+BuJ6C,EAAE,A/BvJ5C,EAAE;I+BuJ8C,CAAE,CAAC,A/BtJ5D;E+BuJH,E/BrJC;E+BuJF,OAAO,GAAG;AACZ,AU4HG,MzClRG,OAAO,MAAM;A+BwJnB,AU2HO,EzCnRa,I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BW,EQmkBL,AtCvlBN,CAAA,MsCulBa,CtCvlBN,EsCulB0B,CtCvlBI,MAAK,C8BoBX,A9BpBW,C8BoBX,A9BpBc,CsCulBF,CAAC,EAAE,EAAE,IAAI,CAAC;ER1iBrD,E9B3CE,IAAI,CAAC,I8B2CP,CAA6B,E9B3Cf,GAAG,I8B2CyC,A9B3CrC,E8B2CqC,K9B3C9B,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;EsCulBjD,ER5iB6B,EQ6iB3B,AtCvlBE,E8B0CkC,CAAA,C9B1C9B,CAAC,EsCulBA,KR7iB6B,A9B1CtB,EsCulBA,CR7iBa,A9B1CV,IsCulBE,GtCvlBkC,E8B0CjB,GQ6iBT;IR/jB7B,E9BvBI,IAAI,CAAC,MAAM,GAAG,MAAmC;EsCwlBnD,EtCvlBA,CAAC,CAAC,GsCulBK,IAAI,KAAK,WAAW;;EAE3B,AtCtlBF,IsCslBM,CAAC,YAAY,CAAC,EAClB;;IAEA,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;;AtCrlBvB,EsCulBF,CAAA,MAAM,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAK,OAAe,CAAC,OAAO,CAAC,EAAE;ARhkBlE,E9BtBH,YAAY,CACV,QAAqD,EAAA;I8BsBvD,AQikBG,AtCrlBD,I8BoBc,CAAA,EQikBE,AtCrlBT,CsCqlBU,AtCrlBT,KAAK,EsCqlBW,AtCrlBT,CsCqlBU,EAAE,EtCrlBN,C8BoBP,GAAiC,C9BpBtB,G8BoB0B;EQkkBpD,ERxjBC,E9B7BE,I8B6BI,A9B7BA,G8B6BG,E9B7BE,C8B6BC,C9B7BC,G8B6BG,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,YAAY,EAAE;EQ0jB9D,ERzjBE,IAAI,A9B7BA,C8B6BC,AQyjBA,GtCtlBG,CAAC,GsCslBG,CRzjBC,E9B7BE,C8B6BC,A9B7BA,I8B6BI,C9B7BC,CAAC,kB8B6BkB,CAAC,GAAG,CAAC;AQ0jBjD,CAAC,GRzjBG,E9B7BG,CAAA,C8B6BC,CAAC,I9B7BI,mB8B6BmB,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,MAAM,IAAG;MAChE,E9B7BE,E8B6BE,CAAC,C9B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","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\n\nexport const CONSTANTS = {\n  /**\n   * @define {boolean} Whether this is the client Node.js SDK.\n   */\n  NODE_CLIENT: false,\n  /**\n   * @define {boolean} Whether this is the Admin Node.js SDK.\n   */\n  NODE_ADMIN: false,\n\n  /**\n   * Firebase SDK Version\n   */\n  SDK_VERSION: '${JSCORE_VERSION}'\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Throws an error if the provided assertion is falsy\n */\nexport const assert = function (assertion: unknown, message: string): void {\n  if (!assertion) {\n    throw assertionError(message);\n  }\n};\n\n/**\n * Returns an Error object suitable for throwing.\n */\nexport const assertionError = function (message: string): Error {\n  return new Error(\n    'Firebase Database (' +\n      CONSTANTS.SDK_VERSION +\n      ') INTERNAL ASSERT FAILED: ' +\n      message\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw new DecodeBase64StringError();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * An error encountered while decoding base64 string.\n */\nexport class DecodeBase64StringError extends Error {\n  readonly name = 'DecodeBase64StringError';\n}\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n *\n * Note: we don't merge __proto__ to prevent prototype pollution\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n      continue;\n    }\n    (target as Record<string, unknown>)[prop] = deepExtend(\n      (target as Record<string, unknown>)[prop],\n      (source as Record<string, unknown>)[prop]\n    );\n  }\n\n  return target;\n}\n\nfunction isValidKey(key: string): boolean {\n  return key !== '__proto__';\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n * @public\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './global';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  /**\n   * Override Firebase's runtime environment detection and\n   * force the SDK to act as if it were in the specified environment.\n   */\n  forceEnvironment?: 'browser' | 'node';\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\n * The dots are in parens because certain compilers (Vite?) cannot\n * handle seeing that variable in comments.\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n * @public\n */\nexport const getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\nimport { getDefaults } from './defaults';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected or specified.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  const forceEnvironment = getDefaults()?.forceEnvironment;\n  if (forceEnvironment === 'node') {\n    return true;\n  } else if (forceEnvironment === 'browser') {\n    return false;\n  }\n\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Evaluates a JSON string into a javascript object.\n *\n * @param {string} str A string containing JSON.\n * @return {*} The javascript object representing the specified JSON.\n */\nexport function jsonEval(str: string): unknown {\n  return JSON.parse(str);\n}\n\n/**\n * Returns JSON representing a javascript object.\n * @param {*} data Javascript object to be stringified.\n * @return {string} The JSON contents of the object.\n */\nexport function stringify(data: unknown): string {\n  return JSON.stringify(data);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { jsonEval } from './json';\n\ninterface Claims {\n  [key: string]: {};\n}\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token into constituent parts.\n *\n * Notes:\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const decode = function (token: string): DecodedToken {\n  let header = {},\n    claims: Claims = {},\n    data = {},\n    signature = '';\n\n  try {\n    const parts = token.split('.');\n    header = jsonEval(base64Decode(parts[0]) || '') as object;\n    claims = jsonEval(base64Decode(parts[1]) || '') as Claims;\n    signature = parts[2];\n    data = claims['d'] || {};\n    delete claims['d'];\n  } catch (e) {}\n\n  return {\n    header,\n    claims,\n    data,\n    signature\n  };\n};\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidTimestamp = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  const now: number = Math.floor(new Date().getTime() / 1000);\n  let validSince: number = 0,\n    validUntil: number = 0;\n\n  if (typeof claims === 'object') {\n    if (claims.hasOwnProperty('nbf')) {\n      validSince = claims['nbf'] as number;\n    } else if (claims.hasOwnProperty('iat')) {\n      validSince = claims['iat'] as number;\n    }\n\n    if (claims.hasOwnProperty('exp')) {\n      validUntil = claims['exp'] as number;\n    } else {\n      // token will expire after 24h by default\n      validUntil = validSince + 86400;\n    }\n  }\n\n  return (\n    !!now &&\n    !!validSince &&\n    !!validUntil &&\n    now >= validSince &&\n    now <= validUntil\n  );\n};\n\n/**\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\n *\n * Notes:\n * - May return null if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const issuedAtTime = function (token: string): number | null {\n  const claims: Claims = decode(token).claims;\n  if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n    return claims['iat'] as number;\n  }\n  return null;\n};\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidFormat = function (token: string): boolean {\n  const decoded = decode(token),\n    claims = decoded.claims;\n\n  return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\n};\n\n/**\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isAdmin = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  return typeof claims === 'object' && claims['admin'] === true;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from './deferred';\n\n/**\n * Rejects if the given promise doesn't resolve in timeInMS milliseconds.\n * @internal\n */\nexport function promiseWithTimeout<T>(\n  promise: Promise<T>,\n  timeInMS = 2000\n): Promise<T> {\n  const deferredPromise = new Deferred<T>();\n  setTimeout(() => deferredPromise.reject('timeout!'), timeInMS);\n  promise.then(deferredPromise.resolve, deferredPromise.reject);\n  return deferredPromise.promise;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nexport function querystring(querystringParams: {\n  [key: string]: string | number;\n}): string {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nexport function querystringDecode(querystring: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nexport function extractQuerystring(url: string): string {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(\n    queryStart,\n    fragmentStart > 0 ? fragmentStart : undefined\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @final\n * @struct\n */\nexport class Sha1 {\n  /**\n   * Holds the previous values of accumulated variables a-e in the compress_\n   * function.\n   * @private\n   */\n  private chain_: number[] = [];\n\n  /**\n   * A buffer holding the partially computed hash result.\n   * @private\n   */\n  private buf_: number[] = [];\n\n  /**\n   * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n   * as the message schedule in the docs.\n   * @private\n   */\n  private W_: number[] = [];\n\n  /**\n   * Contains data needed to pad messages less than 64 bytes.\n   * @private\n   */\n  private pad_: number[] = [];\n\n  /**\n   * @private {number}\n   */\n  private inbuf_: number = 0;\n\n  /**\n   * @private {number}\n   */\n  private total_: number = 0;\n\n  blockSize: number;\n\n  constructor() {\n    this.blockSize = 512 / 8;\n\n    this.pad_[0] = 128;\n    for (let i = 1; i < this.blockSize; ++i) {\n      this.pad_[i] = 0;\n    }\n\n    this.reset();\n  }\n\n  reset(): void {\n    this.chain_[0] = 0x67452301;\n    this.chain_[1] = 0xefcdab89;\n    this.chain_[2] = 0x98badcfe;\n    this.chain_[3] = 0x10325476;\n    this.chain_[4] = 0xc3d2e1f0;\n\n    this.inbuf_ = 0;\n    this.total_ = 0;\n  }\n\n  /**\n   * Internal compress helper function.\n   * @param buf Block to compress.\n   * @param offset Offset of the block in the buffer.\n   * @private\n   */\n  compress_(buf: number[] | Uint8Array | string, offset?: number): void {\n    if (!offset) {\n      offset = 0;\n    }\n\n    const W = this.W_;\n\n    // get 16 big endian words\n    if (typeof buf === 'string') {\n      for (let i = 0; i < 16; i++) {\n        // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n        // have a bug that turns the post-increment ++ operator into pre-increment\n        // during JIT compilation.  We have code that depends heavily on SHA-1 for\n        // correctness and which is affected by this bug, so I've removed all uses\n        // of post-increment ++ in which the result value is used.  We can revert\n        // this change once the Safari bug\n        // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n        // most clients have been updated.\n        W[i] =\n          (buf.charCodeAt(offset) << 24) |\n          (buf.charCodeAt(offset + 1) << 16) |\n          (buf.charCodeAt(offset + 2) << 8) |\n          buf.charCodeAt(offset + 3);\n        offset += 4;\n      }\n    } else {\n      for (let i = 0; i < 16; i++) {\n        W[i] =\n          (buf[offset] << 24) |\n          (buf[offset + 1] << 16) |\n          (buf[offset + 2] << 8) |\n          buf[offset + 3];\n        offset += 4;\n      }\n    }\n\n    // expand to 80 words\n    for (let i = 16; i < 80; i++) {\n      const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n      W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n    }\n\n    let a = this.chain_[0];\n    let b = this.chain_[1];\n    let c = this.chain_[2];\n    let d = this.chain_[3];\n    let e = this.chain_[4];\n    let f, k;\n\n    // TODO(user): Try to unroll this loop to speed up the computation.\n    for (let i = 0; i < 80; i++) {\n      if (i < 40) {\n        if (i < 20) {\n          f = d ^ (b & (c ^ d));\n          k = 0x5a827999;\n        } else {\n          f = b ^ c ^ d;\n          k = 0x6ed9eba1;\n        }\n      } else {\n        if (i < 60) {\n          f = (b & c) | (d & (b | c));\n          k = 0x8f1bbcdc;\n        } else {\n          f = b ^ c ^ d;\n          k = 0xca62c1d6;\n        }\n      }\n\n      const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n      e = d;\n      d = c;\n      c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n      b = a;\n      a = t;\n    }\n\n    this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n    this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n    this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n    this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n    this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n  }\n\n  update(bytes?: number[] | Uint8Array | string, length?: number): void {\n    // TODO(johnlenz): tighten the function signature and remove this check\n    if (bytes == null) {\n      return;\n    }\n\n    if (length === undefined) {\n      length = bytes.length;\n    }\n\n    const lengthMinusBlock = length - this.blockSize;\n    let n = 0;\n    // Using local instead of member variables gives ~5% speedup on Firefox 16.\n    const buf = this.buf_;\n    let inbuf = this.inbuf_;\n\n    // The outer while loop should execute at most twice.\n    while (n < length) {\n      // When we have no data in the block to top up, we can directly process the\n      // input buffer (assuming it contains sufficient data). This gives ~25%\n      // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n      // the data is provided in large chunks (or in multiples of 64 bytes).\n      if (inbuf === 0) {\n        while (n <= lengthMinusBlock) {\n          this.compress_(bytes, n);\n          n += this.blockSize;\n        }\n      }\n\n      if (typeof bytes === 'string') {\n        while (n < length) {\n          buf[inbuf] = bytes.charCodeAt(n);\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      } else {\n        while (n < length) {\n          buf[inbuf] = bytes[n];\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      }\n    }\n\n    this.inbuf_ = inbuf;\n    this.total_ += length;\n  }\n\n  /** @override */\n  digest(): number[] {\n    const digest: number[] = [];\n    let totalBits = this.total_ * 8;\n\n    // Add pad 0x80 0x00*.\n    if (this.inbuf_ < 56) {\n      this.update(this.pad_, 56 - this.inbuf_);\n    } else {\n      this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n    }\n\n    // Add # bits.\n    for (let i = this.blockSize - 1; i >= 56; i--) {\n      this.buf_[i] = totalBits & 255;\n      totalBits /= 256; // Don't use bit-shifting here!\n    }\n\n    this.compress_(this.buf_);\n\n    let n = 0;\n    for (let i = 0; i < 5; i++) {\n      for (let j = 24; j >= 0; j -= 8) {\n        digest[n] = (this.chain_[i] >> j) & 255;\n        ++n;\n      }\n    }\n    return digest;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error) => void;\nexport type CompleteFn = () => void;\n\nexport interface Observer<T> {\n  // Called once for each value in a stream of values.\n  next: NextFn<T>;\n\n  // A stream terminates by a single call to EITHER error() or complete().\n  error: ErrorFn;\n\n  // No events will be sent to next() once complete() is called.\n  complete: CompleteFn;\n}\n\nexport type PartialObserver<T> = Partial<Observer<T>>;\n\n// TODO: Support also Unsubscribe.unsubscribe?\nexport type Unsubscribe = () => void;\n\n/**\n * The Subscribe interface has two forms - passing the inline function\n * callbacks, or a object interface with callback properties.\n */\nexport interface Subscribe<T> {\n  (next?: NextFn<T>, error?: ErrorFn, complete?: CompleteFn): Unsubscribe;\n  (observer: PartialObserver<T>): Unsubscribe;\n}\n\nexport interface Observable<T> {\n  // Subscribe method\n  subscribe: Subscribe<T>;\n}\n\nexport type Executor<T> = (observer: Observer<T>) => void;\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nexport function createSubscribe<T>(\n  executor: Executor<T>,\n  onNoObservers?: Executor<T>\n): Subscribe<T> {\n  const proxy = new ObserverProxy<T>(executor, onNoObservers);\n  return proxy.subscribe.bind(proxy);\n}\n\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nclass ObserverProxy<T> implements Observer<T> {\n  private observers: Array<Observer<T>> | undefined = [];\n  private unsubscribes: Unsubscribe[] = [];\n  private onNoObservers: Executor<T> | undefined;\n  private observerCount = 0;\n  // Micro-task scheduling by calling task.then().\n  private task = Promise.resolve();\n  private finalized = false;\n  private finalError?: Error;\n\n  /**\n   * @param executor Function which can make calls to a single Observer\n   *     as a proxy.\n   * @param onNoObservers Callback when count of Observers goes to zero.\n   */\n  constructor(executor: Executor<T>, onNoObservers?: Executor<T>) {\n    this.onNoObservers = onNoObservers;\n    // Call the executor asynchronously so subscribers that are called\n    // synchronously after the creation of the subscribe function\n    // can still receive the very first value generated in the executor.\n    this.task\n      .then(() => {\n        executor(this);\n      })\n      .catch(e => {\n        this.error(e);\n      });\n  }\n\n  next(value: T): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.next(value);\n    });\n  }\n\n  error(error: Error): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.error(error);\n    });\n    this.close(error);\n  }\n\n  complete(): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.complete();\n    });\n    this.close();\n  }\n\n  /**\n   * Subscribe function that can be used to add an Observer to the fan-out list.\n   *\n   * - We require that no event is sent to a subscriber sychronously to their\n   *   call to subscribe().\n   */\n  subscribe(\n    nextOrObserver?: NextFn<T> | PartialObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ): Unsubscribe {\n    let observer: Observer<T>;\n\n    if (\n      nextOrObserver === undefined &&\n      error === undefined &&\n      complete === undefined\n    ) {\n      throw new Error('Missing Observer.');\n    }\n\n    // Assemble an Observer object when passed as callback functions.\n    if (\n      implementsAnyMethods(nextOrObserver as { [key: string]: unknown }, [\n        'next',\n        'error',\n        'complete'\n      ])\n    ) {\n      observer = nextOrObserver as Observer<T>;\n    } else {\n      observer = {\n        next: nextOrObserver as NextFn<T>,\n        error,\n        complete\n      } as Observer<T>;\n    }\n\n    if (observer.next === undefined) {\n      observer.next = noop as NextFn<T>;\n    }\n    if (observer.error === undefined) {\n      observer.error = noop as ErrorFn;\n    }\n    if (observer.complete === undefined) {\n      observer.complete = noop as CompleteFn;\n    }\n\n    const unsub = this.unsubscribeOne.bind(this, this.observers!.length);\n\n    // Attempt to subscribe to a terminated Observable - we\n    // just respond to the Observer with the final error or complete\n    // event.\n    if (this.finalized) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.task.then(() => {\n        try {\n          if (this.finalError) {\n            observer.error(this.finalError);\n          } else {\n            observer.complete();\n          }\n        } catch (e) {\n          // nothing\n        }\n        return;\n      });\n    }\n\n    this.observers!.push(observer as Observer<T>);\n\n    return unsub;\n  }\n\n  // Unsubscribe is synchronous - we guarantee that no events are sent to\n  // any unsubscribed Observer.\n  private unsubscribeOne(i: number): void {\n    if (this.observers === undefined || this.observers[i] === undefined) {\n      return;\n    }\n\n    delete this.observers[i];\n\n    this.observerCount -= 1;\n    if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n      this.onNoObservers(this);\n    }\n  }\n\n  private forEachObserver(fn: (observer: Observer<T>) => void): void {\n    if (this.finalized) {\n      // Already closed by previous event....just eat the additional values.\n      return;\n    }\n\n    // Since sendOne calls asynchronously - there is no chance that\n    // this.observers will become undefined.\n    for (let i = 0; i < this.observers!.length; i++) {\n      this.sendOne(i, fn);\n    }\n  }\n\n  // Call the Observer via one of it's callback function. We are careful to\n  // confirm that the observe has not been unsubscribed since this asynchronous\n  // function had been queued.\n  private sendOne(i: number, fn: (observer: Observer<T>) => void): void {\n    // Execute the callback asynchronously\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      if (this.observers !== undefined && this.observers[i] !== undefined) {\n        try {\n          fn(this.observers[i]);\n        } catch (e) {\n          // Ignore exceptions raised in Observers or missing methods of an\n          // Observer.\n          // Log error to console. b/31404806\n          if (typeof console !== 'undefined' && console.error) {\n            console.error(e);\n          }\n        }\n      }\n    });\n  }\n\n  private close(err?: Error): void {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    if (err !== undefined) {\n      this.finalError = err;\n    }\n    // Proxy is no longer needed - garbage collect references\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      this.observers = undefined;\n      this.onNoObservers = undefined;\n    });\n  }\n}\n\n/** Turn synchronous function into one called asynchronously. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(fn: Function, onError?: ErrorFn): Function {\n  return (...args: unknown[]) => {\n    Promise.resolve(true)\n      .then(() => {\n        fn(...args);\n      })\n      .catch((error: Error) => {\n        if (onError) {\n          onError(error);\n        }\n      });\n  };\n}\n\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(\n  obj: { [key: string]: unknown },\n  methods: string[]\n): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  for (const method of methods) {\n    if (method in obj && typeof obj[method] === 'function') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction noop(): void {\n  // do nothing\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Check to make sure the appropriate number of arguments are provided for a public function.\n * Throws an error if it fails.\n *\n * @param fnName The function name\n * @param minCount The minimum number of arguments to allow for the function call\n * @param maxCount The maximum number of argument to allow for the function call\n * @param argCount The actual number of arguments provided.\n */\nexport const validateArgCount = function (\n  fnName: string,\n  minCount: number,\n  maxCount: number,\n  argCount: number\n): void {\n  let argError;\n  if (argCount < minCount) {\n    argError = 'at least ' + minCount;\n  } else if (argCount > maxCount) {\n    argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\n  }\n  if (argError) {\n    const error =\n      fnName +\n      ' failed: Was called with ' +\n      argCount +\n      (argCount === 1 ? ' argument.' : ' arguments.') +\n      ' Expects ' +\n      argError +\n      '.';\n    throw new Error(error);\n  }\n};\n\n/**\n * Generates a string to prefix an error message about failed argument validation\n *\n * @param fnName The function name\n * @param argName The name of the argument\n * @return The prefix to add to the error thrown for validation.\n */\nexport function errorPrefix(fnName: string, argName: string): string {\n  return `${fnName} failed: ${argName} argument `;\n}\n\n/**\n * @param fnName\n * @param argumentNumber\n * @param namespace\n * @param optional\n */\nexport function validateNamespace(\n  fnName: string,\n  namespace: string,\n  optional: boolean\n): void {\n  if (optional && !namespace) {\n    return;\n  }\n  if (typeof namespace !== 'string') {\n    //TODO: I should do more validation here. We only allow certain chars in namespaces.\n    throw new Error(\n      errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.'\n    );\n  }\n}\n\nexport function validateCallback(\n  fnName: string,\n  argumentName: string,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback: Function,\n  optional: boolean\n): void {\n  if (optional && !callback) {\n    return;\n  }\n  if (typeof callback !== 'function') {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid function.'\n    );\n  }\n}\n\nexport function validateContextObject(\n  fnName: string,\n  argumentName: string,\n  context: unknown,\n  optional: boolean\n): void {\n  if (optional && !context) {\n    return;\n  }\n  if (typeof context !== 'object' || context === null) {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid context object.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from './assert';\n\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n\n/**\n * @param {string} str\n * @return {Array}\n */\nexport const stringToByteArray = function (str: string): number[] {\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n\n    // Is this the lead surrogate in a surrogate pair?\n    if (c >= 0xd800 && c <= 0xdbff) {\n      const high = c - 0xd800; // the high 10 bits.\n      i++;\n      assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n      const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n      c = 0x10000 + (high << 10) + low;\n    }\n\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (c < 65536) {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Calculate length without actually converting; useful for doing cheaper validation.\n * @param {string} str\n * @return {number}\n */\nexport const stringLength = function (str: string): number {\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c < 128) {\n      p++;\n    } else if (c < 2048) {\n      p += 2;\n    } else if (c >= 0xd800 && c <= 0xdbff) {\n      // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n      p += 4;\n      i++; // skip trail surrogate.\n    } else {\n      p += 3;\n    }\n  }\n  return p;\n};\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Copied from https://stackoverflow.com/a/2117523\n * Generates a new uuid.\n * @public\n */\nexport const uuidv4 = function (): string {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (Math.random() * 16) | 0,\n      v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The amount of milliseconds to exponentially increase.\n */\nconst DEFAULT_INTERVAL_MILLIS = 1000;\n\n/**\n * The factor to backoff by.\n * Should be a number greater than 1.\n */\nconst DEFAULT_BACKOFF_FACTOR = 2;\n\n/**\n * The maximum milliseconds to increase to.\n *\n * <p>Visible for testing\n */\nexport const MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\n\n/**\n * The percentage of backoff time to randomize by.\n * See\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\n * for context.\n *\n * <p>Visible for testing\n */\nexport const RANDOM_FACTOR = 0.5;\n\n/**\n * Based on the backoff method from\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\n */\nexport function calculateBackoffMillis(\n  backoffCount: number,\n  intervalMillis: number = DEFAULT_INTERVAL_MILLIS,\n  backoffFactor: number = DEFAULT_BACKOFF_FACTOR\n): number {\n  // Calculates an exponentially increasing value.\n  // Deviation: calculates value from count and a constant interval, so we only need to save value\n  // and count to restore state.\n  const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\n\n  // A random \"fuzz\" to avoid waves of retries.\n  // Deviation: randomFactor is required.\n  const randomWait = Math.round(\n    // A fraction of the backoff value to add/subtract.\n    // Deviation: changes multiplication order to improve readability.\n    RANDOM_FACTOR *\n      currBaseValue *\n      // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\n      // if we add or subtract.\n      (Math.random() - 0.5) *\n      2\n  );\n\n  // Limits backoff to max to avoid effectively permanent backoff.\n  return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provide English ordinal letters after a number\n */\nexport function ordinal(i: number): string {\n  if (!Number.isFinite(i)) {\n    return `${i}`;\n  }\n  return i + indicator(i);\n}\n\nfunction indicator(i: number): string {\n  i = Math.abs(i);\n  const cent = i % 100;\n  if (cent >= 10 && cent <= 20) {\n    return 'th';\n  }\n  const dec = i % 10;\n  if (dec === 1) {\n    return 'st';\n  }\n  if (dec === 2) {\n    return 'nd';\n  }\n  if (dec === 3) {\n    return 'rd';\n  }\n  return 'th';\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual, getDefaultAppConfig } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME);\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    return db\n      .transaction(STORE_NAME)\n      .objectStore(STORE_NAME)\n      .get(computeKey(app)) as Promise<HeartbeatsInIndexedDB | undefined>;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    return tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache === null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache === null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      return idbHeartbeatObject || { heartbeats: [] };\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nregisterVersion(name, version, 'app');\nexport * from '@firebase/app';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** The semver (www.semver.org) version of the SDK. */\nexport let SDK_VERSION = '';\n\n/**\n * SDK_VERSION should be set before any database instance is created\n * @internal\n */\nexport function setSDKVersion(version: string): void {\n  SDK_VERSION = version;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { jsonEval, stringify } from '@firebase/util';\n\n/**\n * Wraps a DOM Storage object and:\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\n *\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\n * and one for localStorage.\n *\n */\nexport class DOMStorageWrapper {\n  // Use a prefix to avoid collisions with other stuff saved by the app.\n  private prefix_ = 'firebase:';\n\n  /**\n   * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\n   */\n  constructor(private domStorage_: Storage) {}\n\n  /**\n   * @param key - The key to save the value under\n   * @param value - The value being stored, or null to remove the key.\n   */\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  }\n\n  /**\n   * @returns The value that was stored under this key, or null\n   */\n  get(key: string): unknown {\n    const storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  }\n\n  remove(key: string) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  }\n\n  isInMemoryStorage: boolean;\n\n  prefixedName_(name: string): string {\n    return this.prefix_ + name;\n  }\n\n  toString(): string {\n    return this.domStorage_.toString();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\n/**\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\n * (TODO: create interface for both to implement).\n */\nexport class MemoryStorage {\n  private cache_: { [k: string]: unknown } = {};\n\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  }\n\n  get(key: string): unknown {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n    return null;\n  }\n\n  remove(key: string) {\n    delete this.cache_[key];\n  }\n\n  isInMemoryStorage = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DOMStorageWrapper } from './DOMStorageWrapper';\nimport { MemoryStorage } from './MemoryStorage';\n\ndeclare const window: Window;\n\n/**\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\n * to reflect this type\n *\n * @param domStorageName - Name of the underlying storage object\n *   (e.g. 'localStorage' or 'sessionStorage').\n * @returns Turning off type information until a common interface is defined.\n */\nconst createStoragefor = function (\n  domStorageName: string\n): DOMStorageWrapper | MemoryStorage {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window[domStorageName] !== 'undefined'\n    ) {\n      // Need to test cache. Just because it's here doesn't mean it works\n      const domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {}\n\n  // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n  return new MemoryStorage();\n};\n\n/** A storage object that lasts across sessions */\nexport const PersistentStorage = createStoragefor('localStorage');\n\n/** A storage object that only lasts one session */\nexport const SessionStorage = createStoragefor('sessionStorage');\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport {\n  assert,\n  base64,\n  Sha1,\n  stringToByteArray,\n  stringify,\n  isNodeSdk\n} from '@firebase/util';\n\nimport { SessionStorage } from '../storage/storage';\nimport { QueryContext } from '../view/EventRegistration';\n\ndeclare const window: Window;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const Windows: any;\n\nconst logClient = new Logger('@firebase/database');\n\n/**\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\n */\nexport const LUIDGenerator: () => number = (function () {\n  let id = 1;\n  return function () {\n    return id++;\n  };\n})();\n\n/**\n * Sha1 hash of the input string\n * @param str - The string to hash\n * @returns {!string} The resulting hash\n */\nexport const sha1 = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  const sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  const sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\nconst buildLogMessage_ = function (...varArgs: unknown[]): string {\n  let message = '';\n  for (let i = 0; i < varArgs.length; i++) {\n    const arg = varArgs[i];\n    if (\n      Array.isArray(arg) ||\n      (arg &&\n        typeof arg === 'object' &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        typeof (arg as any).length === 'number')\n    ) {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n    message += ' ';\n  }\n\n  return message;\n};\n\n/**\n * Use this for all debug messages in Firebase.\n */\nexport let logger: ((a: string) => void) | null = null;\n\n/**\n * Flag to check for log availability on first log message\n */\nlet firstLog_ = true;\n\n/**\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\n * @param logger_ - A flag to turn on logging, or a custom logger\n * @param persistent - Whether or not to persist logging settings across refreshes\n */\nexport const enableLogging = function (\n  logger_?: boolean | ((a: string) => void) | null,\n  persistent?: boolean\n) {\n  assert(\n    !persistent || logger_ === true || logger_ === false,\n    \"Can't turn on custom loggers persistently.\"\n  );\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\nexport const log = function (...varArgs: unknown[]) {\n  if (firstLog_ === true) {\n    firstLog_ = false;\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    const message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n\nexport const logWrapper = function (\n  prefix: string\n): (...varArgs: unknown[]) => void {\n  return function (...varArgs: unknown[]) {\n    log(prefix, ...varArgs);\n  };\n};\n\nexport const error = function (...varArgs: string[]) {\n  const message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_(...varArgs);\n  logClient.error(message);\n};\n\nexport const fatal = function (...varArgs: string[]) {\n  const message = `FIREBASE FATAL ERROR: ${buildLogMessage_(...varArgs)}`;\n  logClient.error(message);\n  throw new Error(message);\n};\n\nexport const warn = function (...varArgs: unknown[]) {\n  const message = 'FIREBASE WARNING: ' + buildLogMessage_(...varArgs);\n  logClient.warn(message);\n};\n\n/**\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\n * does not use https.\n */\nexport const warnIfPageIsSecure = function () {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (\n    typeof window !== 'undefined' &&\n    window.location &&\n    window.location.protocol &&\n    window.location.protocol.indexOf('https:') !== -1\n  ) {\n    warn(\n      'Insecure Firebase access from a secure page. ' +\n        'Please use https in calls to new Firebase().'\n    );\n  }\n};\n\nexport const warnAboutUnsupportedMethod = function (methodName: string) {\n  warn(\n    methodName +\n      ' is unsupported and will likely change soon.  ' +\n      'Please do not use.'\n  );\n};\n\n/**\n * Returns true if data is NaN, or +/- Infinity.\n */\nexport const isInvalidJSONNumber = function (data: unknown): boolean {\n  return (\n    typeof data === 'number' &&\n    (data !== data || // NaN\n      data === Number.POSITIVE_INFINITY ||\n      data === Number.NEGATIVE_INFINITY)\n  );\n};\n\nexport const executeWhenDOMReady = function (fn: () => void) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n\n    let called = false;\n    const wrappedFn = function () {\n      if (!document.body) {\n        setTimeout(wrappedFn, Math.floor(10));\n        return;\n      }\n\n      if (!called) {\n        called = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn, false);\n      // fallback to onload.\n      window.addEventListener('load', wrappedFn, false);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((document as any).attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (document as any).attachEvent('onreadystatechange', () => {\n        if (document.readyState === 'complete') {\n          wrappedFn();\n        }\n      });\n      // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (window as any).attachEvent('onload', wrappedFn);\n\n      // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n\n/**\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\n */\nexport const MIN_NAME = '[MIN_NAME]';\n\n/**\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\n */\nexport const MAX_NAME = '[MAX_NAME]';\n\n/**\n * Compares valid Firebase key names, plus min and max name\n */\nexport const nameCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    const aAsInt = tryParseInt(a),\n      bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n\n/**\n * @returns {!number} comparison result.\n */\nexport const stringCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\nexport const requireKey = function (\n  key: string,\n  obj: { [k: string]: unknown }\n): unknown {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error(\n      'Missing required key (' + key + ') in object: ' + stringify(obj)\n    );\n  }\n};\n\nexport const ObjectToUniqueKey = function (obj: unknown): string {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n\n  const keys = [];\n  // eslint-disable-next-line guard-for-in\n  for (const k in obj) {\n    keys.push(k);\n  }\n\n  // Export as json, but with the keys sorted.\n  keys.sort();\n  let key = '{';\n  for (let i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n\n/**\n * Splits a string into a number of smaller segments of maximum size\n * @param str - The string\n * @param segsize - The maximum number of chars in the string.\n * @returns The string, split into appropriately-sized chunks\n */\nexport const splitStringBySize = function (\n  str: string,\n  segsize: number\n): string[] {\n  const len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  const dataSegs = [];\n  for (let c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n  return dataSegs;\n};\n\n/**\n * Apply a function to each (key, value) pair in an object or\n * apply a function to each (index, value) pair in an array\n * @param obj - The object or array to iterate over\n * @param fn - The function to apply\n */\nexport function each(obj: object, fn: (k: string, v: unknown) => void) {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n\n/**\n * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.\n * @param callback - Callback function.\n * @param context - Optional context to bind to.\n *\n */\nexport const bindCallback = function (\n  callback: (a: unknown) => void,\n  context?: object | null\n): (a: unknown) => void {\n  return context ? callback.bind(context) : callback;\n};\n\n/**\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\n * I made one modification at the end and removed the NaN / Infinity\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\n * @param v - A double\n *\n */\nexport const doubleToIEEE754String = function (v: number): string {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  const ebits = 11,\n    fbits = 52;\n  const bias = (1 << (ebits - 1)) - 1;\n  let s, e, f, ln, i;\n\n  // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  }\n\n  // Pack sign, exponent, fraction\n  const bits = [];\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  const str = bits.join('');\n\n  // Return the data as a hex string. --MJL\n  let hexByteString = '';\n  for (i = 0; i < 64; i += 8) {\n    let hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n    hexByteString = hexByteString + hexByte;\n  }\n  return hexByteString.toLowerCase();\n};\n\n/**\n * Used to detect if we're in a Chrome content script (which executes in an\n * isolated environment where long-polling doesn't work).\n */\nexport const isChromeExtensionContentScript = function (): boolean {\n  return !!(\n    typeof window === 'object' &&\n    window['chrome'] &&\n    window['chrome']['extension'] &&\n    !/^chrome/.test(window.location.href)\n  );\n};\n\n/**\n * Used to detect if we're in a Windows 8 Store app.\n */\nexport const isWindowsStoreApp = function (): boolean {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n\n/**\n * Converts a server error code to a Javascript Error\n */\nexport function errorForServerCode(code: string, query: QueryContext): Error {\n  let reason = 'Unknown Error';\n  if (code === 'too_big') {\n    reason =\n      'The data requested exceeds the maximum size ' +\n      'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  const error = new Error(\n    code + ' at ' + query._path.toString() + ': ' + reason\n  );\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (error as any).code = code.toUpperCase();\n  return error;\n}\n\n/**\n * Used to test for integer-looking strings\n */\nexport const INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n\n/**\n * For use in keys, the minimum possible 32-bit integer.\n */\nexport const INTEGER_32_MIN = -2147483648;\n\n/**\n * For use in kyes, the maximum possible 32-bit integer.\n */\nexport const INTEGER_32_MAX = 2147483647;\n\n/**\n * If the string contains a 32-bit integer, return it.  Else return null.\n */\nexport const tryParseInt = function (str: string): number | null {\n  if (INTEGER_REGEXP_.test(str)) {\n    const intVal = Number(str);\n    if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\n      return intVal;\n    }\n  }\n  return null;\n};\n\n/**\n * Helper to run some code but catch any exceptions and re-throw them later.\n * Useful for preventing user callbacks from breaking internal code.\n *\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\n * convenient (we don't have to try to figure out when is a safe point to\n * re-throw it), and the behavior seems reasonable:\n *\n * * If you aren't pausing on exceptions, you get an error in the console with\n *   the correct stack trace.\n * * If you're pausing on all exceptions, the debugger will pause on your\n *   exception and then again when we rethrow it.\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\n *   on us re-throwing it.\n *\n * @param fn - The code to guard.\n */\nexport const exceptionGuard = function (fn: () => void) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(() => {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      const stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n\n/**\n * Helper function to safely call opt_callback with the specified arguments.  It:\n * 1. Turns into a no-op if opt_callback is null or undefined.\n * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.\n *\n * @param callback - Optional onComplete callback.\n * @param varArgs - Arbitrary args to be passed to opt_onComplete\n */\nexport const callUserCallback = function (\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback?: Function | null,\n  ...varArgs: unknown[]\n) {\n  if (typeof callback === 'function') {\n    exceptionGuard(() => {\n      callback(...varArgs);\n    });\n  }\n};\n\n/**\n * @returns {boolean} true if we think we're currently being crawled.\n */\nexport const beingCrawled = function (): boolean {\n  const userAgent =\n    (typeof window === 'object' &&\n      window['navigator'] &&\n      window['navigator']['userAgent']) ||\n    '';\n\n  // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n  return (\n    userAgent.search(\n      /googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i\n    ) >= 0\n  );\n};\n\n/**\n * Export a property of an object using a getter function.\n */\nexport const exportPropGetter = function (\n  object: object,\n  name: string,\n  fnGet: () => unknown\n) {\n  Object.defineProperty(object, name, { get: fnGet });\n};\n\n/**\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\n *\n * It is removed with clearTimeout() as normal.\n *\n * @param fn - Function to run.\n * @param time - Milliseconds to wait before running.\n * @returns The setTimeout() return value.\n */\nexport const setTimeoutNonBlocking = function (\n  fn: () => void,\n  time: number\n): number | object {\n  const timeout: number | object = setTimeout(fn, time);\n  // Note: at the time of this comment, unrefTimer is under the unstable set of APIs. Run with --unstable to enable the API.\n  if (\n    typeof timeout === 'number' &&\n    // @ts-ignore Is only defined in Deno environments.\n    typeof Deno !== 'undefined' &&\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno['unrefTimer']\n  ) {\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno.unrefTimer(timeout);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  } else if (typeof timeout === 'object' && (timeout as any)['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (timeout as any)['unref']();\n  }\n\n  return timeout;\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AppCheckInternalComponentName,\n  AppCheckTokenListener,\n  AppCheckTokenResult,\n  FirebaseAppCheckInternal\n} from '@firebase/app-check-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { warn } from './util/util';\n\n/**\n * Abstraction around AppCheck's token fetching capabilities.\n */\nexport class AppCheckTokenProvider {\n  private appCheck?: FirebaseAppCheckInternal;\n  constructor(\n    private appName_: string,\n    private appCheckProvider?: Provider<AppCheckInternalComponentName>\n  ) {\n    this.appCheck = appCheckProvider?.getImmediate({ optional: true });\n    if (!this.appCheck) {\n      appCheckProvider?.get().then(appCheck => (this.appCheck = appCheck));\n    }\n  }\n\n  getToken(forceRefresh?: boolean): Promise<AppCheckTokenResult> {\n    if (!this.appCheck) {\n      return new Promise<AppCheckTokenResult>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAppCheck. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // AppCheck and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.appCheck) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n    return this.appCheck.getToken(forceRefresh);\n  }\n\n  addTokenChangeListener(listener: AppCheckTokenListener) {\n    this.appCheckProvider\n      ?.get()\n      .then(appCheck => appCheck.addTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    warn(\n      `Provided AppCheck credentials for the app named \"${this.appName_}\" ` +\n        'are invalid. This usually indicates your app was not initialized correctly.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseAuthTokenData } from '@firebase/app-types/private';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { log, warn } from './util/util';\n\nexport interface AuthTokenProvider {\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData>;\n  addTokenChangeListener(listener: (token: string | null) => void): void;\n  removeTokenChangeListener(listener: (token: string | null) => void): void;\n  notifyForInvalidToken(): void;\n}\n\n/**\n * Abstraction around FirebaseApp's token fetching capabilities.\n */\nexport class FirebaseAuthTokenProvider implements AuthTokenProvider {\n  private auth_: FirebaseAuthInternal | null = null;\n\n  constructor(\n    private appName_: string,\n    private firebaseOptions_: object,\n    private authProvider_: Provider<FirebaseAuthInternalName>\n  ) {\n    this.auth_ = authProvider_.getImmediate({ optional: true });\n    if (!this.auth_) {\n      authProvider_.onInit(auth => (this.auth_ = auth));\n    }\n  }\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    if (!this.auth_) {\n      return new Promise<FirebaseAuthTokenData>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAuth. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // Auth and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.auth_) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(error => {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      this.authProvider_\n        .get()\n        .then(auth => auth.addAuthTokenListener(listener));\n    }\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {\n    this.authProvider_\n      .get()\n      .then(auth => auth.removeAuthTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    let errorMessage =\n      'Provided authentication credentials for the app named \"' +\n      this.appName_ +\n      '\" are invalid. This usually indicates your app was not ' +\n      'initialized correctly. ';\n    if ('credential' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"credential\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else if ('serviceAccount' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else {\n      errorMessage +=\n        'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\n        'initializeApp() match the values provided for your app at ' +\n        'https://console.firebase.google.com/.';\n    }\n    warn(errorMessage);\n  }\n}\n\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\nexport class EmulatorTokenProvider implements AuthTokenProvider {\n  /** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\n  static OWNER = 'owner';\n\n  constructor(private accessToken: string) {}\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    return Promise.resolve({\n      accessToken: this.accessToken\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(this.accessToken);\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {}\n\n  notifyForInvalidToken(): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PROTOCOL_VERSION = '5';\n\nexport const VERSION_PARAM = 'v';\n\nexport const TRANSPORT_SESSION_PARAM = 's';\n\nexport const REFERER_PARAM = 'r';\n\nexport const FORGE_REF = 'f';\n\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\nexport const FORGE_DOMAIN_RE =\n  /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\n\nexport const LAST_SESSION_PARAM = 'ls';\n\nexport const APPLICATION_ID_PARAM = 'p';\n\nexport const APP_CHECK_TOKEN_PARAM = 'ac';\n\nexport const WEBSOCKET = 'websocket';\n\nexport const LONG_POLLING = 'long_polling';\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { LONG_POLLING, WEBSOCKET } from '../realtime/Constants';\n\nimport { PersistentStorage } from './storage/storage';\nimport { each } from './util/util';\n\n/**\n * A class that holds metadata about a Repo object\n */\nexport class RepoInfo {\n  private _host: string;\n  private _domain: string;\n  internalHost: string;\n\n  /**\n   * @param host - Hostname portion of the url for the repo\n   * @param secure - Whether or not this repo is accessed over ssl\n   * @param namespace - The namespace represented by the repo\n   * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\n   * @param nodeAdmin - Whether this instance uses Admin SDK credentials\n   * @param persistenceKey - Override the default session persistence storage key\n   */\n  constructor(\n    host: string,\n    public readonly secure: boolean,\n    public readonly namespace: string,\n    public readonly webSocketOnly: boolean,\n    public readonly nodeAdmin: boolean = false,\n    public readonly persistenceKey: string = '',\n    public readonly includeNamespaceInQueryParams: boolean = false,\n    public readonly isUsingEmulator: boolean = false\n  ) {\n    this._host = host.toLowerCase();\n    this._domain = this._host.substr(this._host.indexOf('.') + 1);\n    this.internalHost =\n      (PersistentStorage.get('host:' + host) as string) || this._host;\n  }\n\n  isCacheableHost(): boolean {\n    return this.internalHost.substr(0, 2) === 's-';\n  }\n\n  isCustomHost() {\n    return (\n      this._domain !== 'firebaseio.com' &&\n      this._domain !== 'firebaseio-demo.com'\n    );\n  }\n\n  get host() {\n    return this._host;\n  }\n\n  set host(newHost: string) {\n    if (newHost !== this.internalHost) {\n      this.internalHost = newHost;\n      if (this.isCacheableHost()) {\n        PersistentStorage.set('host:' + this._host, this.internalHost);\n      }\n    }\n  }\n\n  toString(): string {\n    let str = this.toURLString();\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n    return str;\n  }\n\n  toURLString(): string {\n    const protocol = this.secure ? 'https://' : 'http://';\n    const query = this.includeNamespaceInQueryParams\n      ? `?ns=${this.namespace}`\n      : '';\n    return `${protocol}${this.host}/${query}`;\n  }\n}\n\nfunction repoInfoNeedsQueryParam(repoInfo: RepoInfo): boolean {\n  return (\n    repoInfo.host !== repoInfo.internalHost ||\n    repoInfo.isCustomHost() ||\n    repoInfo.includeNamespaceInQueryParams\n  );\n}\n\n/**\n * Returns the websocket URL for this repo\n * @param repoInfo - RepoInfo object\n * @param type - of connection\n * @param params - list\n * @returns The URL for this repo\n */\nexport function repoInfoConnectionURL(\n  repoInfo: RepoInfo,\n  type: string,\n  params: { [k: string]: string }\n): string {\n  assert(typeof type === 'string', 'typeof type must == string');\n  assert(typeof params === 'object', 'typeof params must == object');\n\n  let connURL: string;\n  if (type === WEBSOCKET) {\n    connURL =\n      (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\n  } else if (type === LONG_POLLING) {\n    connURL =\n      (repoInfo.secure ? 'https://' : 'http://') +\n      repoInfo.internalHost +\n      '/.lp?';\n  } else {\n    throw new Error('Unknown connection type: ' + type);\n  }\n  if (repoInfoNeedsQueryParam(repoInfo)) {\n    params['ns'] = repoInfo.namespace;\n  }\n\n  const pairs: string[] = [];\n\n  each(params, (key: string, value: string) => {\n    pairs.push(key + '=' + value);\n  });\n\n  return connURL + pairs.join('&');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deepCopy, contains } from '@firebase/util';\n\n/**\n * Tracks a collection of stats.\n */\nexport class StatsCollection {\n  private counters_: { [k: string]: number } = {};\n\n  incrementCounter(name: string, amount: number = 1) {\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  }\n\n  get() {\n    return deepCopy(this.counters_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport { StatsCollection } from './StatsCollection';\n\nconst collections: { [k: string]: StatsCollection } = {};\nconst reporters: { [k: string]: unknown } = {};\n\nexport function statsManagerGetCollection(repoInfo: RepoInfo): StatsCollection {\n  const hashString = repoInfo.toString();\n\n  if (!collections[hashString]) {\n    collections[hashString] = new StatsCollection();\n  }\n\n  return collections[hashString];\n}\n\nexport function statsManagerGetOrCreateReporter<T>(\n  repoInfo: RepoInfo,\n  creatorFunction: () => T\n): T {\n  const hashString = repoInfo.toString();\n\n  if (!reporters[hashString]) {\n    reporters[hashString] = creatorFunction();\n  }\n\n  return reporters[hashString] as T;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { exceptionGuard } from '../../core/util/util';\n\n/**\n * This class ensures the packets from the server arrive in order\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\n */\nexport class PacketReceiver {\n  pendingResponses: unknown[] = [];\n  currentResponseNum = 0;\n  closeAfterResponse = -1;\n  onClose: (() => void) | null = null;\n\n  /**\n   * @param onMessage_\n   */\n  constructor(private onMessage_: (a: {}) => void) {}\n\n  closeAfter(responseNum: number, callback: () => void) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  }\n\n  /**\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\n   * browsers will respond in the same order as the requests we sent\n   */\n  handleResponse(requestNum: number, data: unknown[]) {\n    this.pendingResponses[requestNum] = data;\n    while (this.pendingResponses[this.currentResponseNum]) {\n      const toProcess = this.pendingResponses[\n        this.currentResponseNum\n      ] as unknown[];\n      delete this.pendingResponses[this.currentResponseNum];\n      for (let i = 0; i < toProcess.length; ++i) {\n        if (toProcess[i]) {\n          exceptionGuard(() => {\n            this.onMessage_(toProcess[i]);\n          });\n        }\n      }\n      if (this.currentResponseNum === this.closeAfterResponse) {\n        if (this.onClose) {\n          this.onClose();\n          this.onClose = null;\n        }\n        break;\n      }\n      this.currentResponseNum++;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Encode, isNodeSdk, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport {\n  executeWhenDOMReady,\n  isChromeExtensionContentScript,\n  isWindowsStoreApp,\n  log,\n  logWrapper,\n  LUIDGenerator,\n  splitStringBySize\n} from '../core/util/util';\n\nimport {\n  APP_CHECK_TOKEN_PARAM,\n  APPLICATION_ID_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  LONG_POLLING,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM\n} from './Constants';\nimport { PacketReceiver } from './polling/PacketReceiver';\nimport { Transport } from './Transport';\n\n// URL query parameters associated with longpolling\nexport const FIREBASE_LONGPOLL_START_PARAM = 'start';\nexport const FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nexport const FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nexport const FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nexport const FIREBASE_LONGPOLL_ID_PARAM = 'id';\nexport const FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nexport const FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nexport const FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nexport const FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nexport const FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nexport const FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\n\n//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nconst MAX_URL_DATA_SIZE = 1870;\nconst SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\nconst MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n\n/**\n * Keepalive period\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\n * length of 30 seconds that we can't exceed.\n */\nconst KEEPALIVE_REQUEST_INTERVAL = 25000;\n\n/**\n * How long to wait before aborting a long-polling connection attempt.\n */\nconst LP_CONNECT_TIMEOUT = 30000;\n\n/**\n * This class manages a single long-polling connection.\n */\nexport class BrowserPollConnection implements Transport {\n  bytesSent = 0;\n  bytesReceived = 0;\n  urlFn: (params: object) => string;\n  scriptTagHolder: FirebaseIFrameScriptHolder;\n  myDisconnFrame: HTMLIFrameElement;\n  curSegmentNum: number;\n  myPacketOrderer: PacketReceiver;\n  id: string;\n  password: string;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_ = false;\n  private isClosed_: boolean;\n  private connectTimeoutTimer_: number | null;\n  private onDisconnect_: ((a?: boolean) => void) | null;\n\n  /**\n   * @param connId An identifier for this connection, used for logging\n   * @param repoInfo The info for the endpoint to send data to.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The AppCheck token for this client.\n   * @param authToken The AuthToken to use for this connection.\n   * @param transportSessionId Optional transportSessionid if we are\n   * reconnecting for an existing transport session\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has\n   * already created a connection previously\n   */\n  constructor(\n    public connId: string,\n    public repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    public transportSessionId?: string,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.urlFn = (params: { [k: string]: string }) => {\n      // Always add the token if we have one.\n      if (this.appCheckToken) {\n        params[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\n    };\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n\n    this.connectTimeoutTimer_ = setTimeout(() => {\n      this.log_('Timed out trying to connect.');\n      // Make sure we clear the host cache\n      this.onClosed_();\n      this.connectTimeoutTimer_ = null;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)) as any;\n\n    // Ensure we delay the creation of the iframe until the DOM is loaded.\n    executeWhenDOMReady(() => {\n      if (this.isClosed_) {\n        return;\n      }\n\n      //Set up a callback that gets triggered once a connection is set up.\n      this.scriptTagHolder = new FirebaseIFrameScriptHolder(\n        (...args) => {\n          const [command, arg1, arg2, arg3, arg4] = args;\n          this.incrementIncomingBytes_(args);\n          if (!this.scriptTagHolder) {\n            return; // we closed the connection.\n          }\n\n          if (this.connectTimeoutTimer_) {\n            clearTimeout(this.connectTimeoutTimer_);\n            this.connectTimeoutTimer_ = null;\n          }\n          this.everConnected_ = true;\n          if (command === FIREBASE_LONGPOLL_START_PARAM) {\n            this.id = arg1 as string;\n            this.password = arg2 as string;\n          } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n            // Don't clear the host cache. We got a response from the server, so we know it's reachable\n            if (arg1) {\n              // We aren't expecting any more data (other than what the server's already in the process of sending us\n              // through our already open polls), so don't send any more.\n              this.scriptTagHolder.sendNewPolls = false;\n\n              // arg1 in this case is the last response number sent by the server. We should try to receive\n              // all of the responses up to this one before closing\n              this.myPacketOrderer.closeAfter(arg1 as number, () => {\n                this.onClosed_();\n              });\n            } else {\n              this.onClosed_();\n            }\n          } else {\n            throw new Error('Unrecognized command received: ' + command);\n          }\n        },\n        (...args) => {\n          const [pN, data] = args;\n          this.incrementIncomingBytes_(args);\n          this.myPacketOrderer.handleResponse(pN as number, data as unknown[]);\n        },\n        () => {\n          this.onClosed_();\n        },\n        this.urlFn\n      );\n\n      //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(\n        Math.random() * 100000000\n      );\n      if (this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] =\n          this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n      if (this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = this.transportSessionId;\n      }\n      if (this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = this.lastSessionId;\n      }\n      if (this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = this.applicationId;\n      }\n      if (this.appCheckToken) {\n        urlParams[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      if (\n        typeof location !== 'undefined' &&\n        location.hostname &&\n        FORGE_DOMAIN_RE.test(location.hostname)\n      ) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n      const connectURL = this.urlFn(urlParams);\n      this.log_('Connecting via long-poll to ' + connectURL);\n      this.scriptTagHolder.addTag(connectURL, () => {\n        /* do nothing */\n      });\n    });\n  }\n\n  /**\n   * Call this when a handshake has completed successfully and we want to consider the connection established\n   */\n  start() {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  }\n\n  static forceAllow_: boolean;\n\n  /**\n   * Forces long polling to be considered as a potential transport\n   */\n  static forceAllow() {\n    BrowserPollConnection.forceAllow_ = true;\n  }\n\n  static forceDisallow_: boolean;\n\n  /**\n   * Forces longpolling to not be considered as a potential transport\n   */\n  static forceDisallow() {\n    BrowserPollConnection.forceDisallow_ = true;\n  }\n\n  // Static method, use string literal so it can be accessed in a generic way\n  static isAvailable() {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return (\n        !BrowserPollConnection.forceDisallow_ &&\n        typeof document !== 'undefined' &&\n        document.createElement != null &&\n        !isChromeExtensionContentScript() &&\n        !isWindowsStoreApp()\n      );\n    }\n  }\n\n  /**\n   * No-op for polling\n   */\n  markConnectionHealthy() {}\n\n  /**\n   * Stops polling and cleans up the iframe\n   */\n  private shutdown_() {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    }\n\n    //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  }\n\n  /**\n   * Triggered when this transport is closed\n   */\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\n   * that we've left.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\n   * broken into chunks (since URLs have a small maximum length).\n   * @param data - The JSON data to transmit.\n   */\n  send(data: {}) {\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //first, lets get the base64-encoded data\n    const base64data = base64Encode(dataStr);\n\n    //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n    const dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\n\n    //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(\n        this.curSegmentNum,\n        dataSegs.length,\n        dataSegs[i]\n      );\n      this.curSegmentNum++;\n    }\n  }\n\n  /**\n   * This is how we notify the server that we're leaving.\n   * We aren't able to send requests with DHTML on a window close event, but we can\n   * trigger XHR requests in some browsers (everything but Opera basically).\n   */\n  addDisconnectPingFrame(id: string, pw: string) {\n    if (isNodeSdk()) {\n      return;\n    }\n    this.myDisconnFrame = document.createElement('iframe');\n    const urlParams: { [k: string]: string } = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n\n    document.body.appendChild(this.myDisconnFrame);\n  }\n\n  /**\n   * Used to track the bytes received by this client\n   */\n  private incrementIncomingBytes_(args: unknown) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    const bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface IFrameElement extends HTMLIFrameElement {\n  doc: Document;\n}\n\n/*********************************************************************************************\n * A wrapper around an iframe that is used as a long-polling script holder.\n *********************************************************************************************/\nexport class FirebaseIFrameScriptHolder {\n  //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n  //problems in some browsers.\n  outstandingRequests = new Set<number>();\n\n  //A queue of the pending segments waiting for transmission to the server.\n  pendingSegs: Array<{ seg: number; ts: number; d: unknown }> = [];\n\n  //A serial number. We use this for two things:\n  // 1) A way to ensure the browser doesn't cache responses to polls\n  // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n  //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n  //    JSONP code in the order it was added to the iframe.\n  currentSerial = Math.floor(Math.random() * 100000000);\n\n  // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n  // incoming data from the server that we're waiting for).\n  sendNewPolls = true;\n\n  uniqueCallbackIdentifier: number;\n  myIFrame: IFrameElement;\n  alive: boolean;\n  myID: string;\n  myPW: string;\n  commandCB: (command: string, ...args: unknown[]) => void;\n  onMessageCB: (...args: unknown[]) => void;\n\n  /**\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\n   */\n  constructor(\n    commandCB: (command: string, ...args: unknown[]) => void,\n    onMessageCB: (...args: unknown[]) => void,\n    public onDisconnect: () => void,\n    public urlFn: (a: object) => string\n  ) {\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[\n        FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier\n      ] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] =\n        onMessageCB;\n\n      //Create an iframe for us to add script tags to.\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\n\n      // Set the iframe's contents.\n      let script = '';\n      // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n      if (\n        this.myIFrame.src &&\n        this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:'\n      ) {\n        const currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n      const iframeContents = '<html><body>' + script + '</body></html>';\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n        if (e.stack) {\n          log(e.stack);\n        }\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n\n  /**\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\n   * actually use.\n   */\n  private static createIFrame_(): IFrameElement {\n    const iframe = document.createElement('iframe') as IFrameElement;\n    iframe.style.display = 'none';\n\n    // This is necessary in order to initialize the document inside the iframe\n    if (document.body) {\n      document.body.appendChild(iframe);\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        const a = iframe.contentWindow.document;\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        const domain = document.domain;\n        iframe.src =\n          \"javascript:void((function(){document.open();document.domain='\" +\n          domain +\n          \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    }\n\n    // Get the document of the iframe in a browser-specific way.\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((iframe as any).document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = (iframe as any).document; //others?\n    }\n\n    return iframe;\n  }\n\n  /**\n   * Cancel all outstanding queries and remove the frame.\n   */\n  close() {\n    //Mark this iframe as dead, so no new requests are sent.\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting textContent seems to be the safest way to do this.\n      this.myIFrame.doc.body.textContent = '';\n      setTimeout(() => {\n        if (this.myIFrame !== null) {\n          document.body.removeChild(this.myIFrame);\n          this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    }\n\n    // Protect from being called recursively.\n    const onDisconnect = this.onDisconnect;\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  }\n\n  /**\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\n   * @param id - The ID of this connection\n   * @param pw - The password for this connection\n   */\n  startLongPoll(id: string, pw: string) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true;\n\n    //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n    while (this.newRequest_()) {}\n  }\n\n  /**\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\n   * too many outstanding requests and we are still alive.\n   *\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\n   * needed.\n   */\n  private newRequest_() {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (\n      this.alive &&\n      this.sendNewPolls &&\n      this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)\n    ) {\n      //construct our url\n      this.currentSerial++;\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      let theURL = this.urlFn(urlParams);\n      //Now add as much data as we can.\n      let curDataString = '';\n      let i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        const nextSeg = this.pendingSegs[0];\n        if (\n          (nextSeg.d as unknown[]).length +\n            SEG_HEADER_SIZE +\n            curDataString.length <=\n          MAX_URL_DATA_SIZE\n        ) {\n          //great, the segment will fit. Lets append it.\n          const theSeg = this.pendingSegs.shift();\n          curDataString =\n            curDataString +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\n            i +\n            '=' +\n            theSeg.seg +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\n            i +\n            '=' +\n            theSeg.ts +\n            '&' +\n            FIREBASE_LONGPOLL_DATA_PARAM +\n            i +\n            '=' +\n            theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Queue a packet for transmission to the server.\n   * @param segnum - A sequential id for this packet segment used for reassembly\n   * @param totalsegs - The total number of segments in this packet\n   * @param data - The data for this segment.\n   */\n  enqueueSegment(segnum: number, totalsegs: number, data: unknown) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\n\n    //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n    if (this.alive) {\n      this.newRequest_();\n    }\n  }\n\n  /**\n   * Add a script tag for a regular long-poll request.\n   * @param url - The URL of the script tag.\n   * @param serial - The serial number of the request.\n   */\n  private addLongPollTag_(url: string, serial: number) {\n    //remember that we sent this request.\n    this.outstandingRequests.add(serial);\n\n    const doNewRequest = () => {\n      this.outstandingRequests.delete(serial);\n      this.newRequest_();\n    };\n\n    // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n    const keepaliveTimeout = setTimeout(\n      doNewRequest,\n      Math.floor(KEEPALIVE_REQUEST_INTERVAL)\n    );\n\n    const readyStateCB = () => {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout);\n\n      // Trigger a new request so we can continue receiving data.\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  }\n\n  /**\n   * Add an arbitrary script tag to the iframe.\n   * @param url - The URL for the script tag source.\n   * @param loadCB - A callback to be triggered once the script has loaded.\n   */\n  addTag(url: string, loadCB: () => void) {\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this as any).doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(() => {\n        try {\n          // if we're already closed, don't add this poll\n          if (!this.sendNewPolls) {\n            return;\n          }\n          const newScript = this.myIFrame.doc.createElement('script');\n          newScript.type = 'text/javascript';\n          newScript.async = true;\n          newScript.src = url;\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          newScript.onload = (newScript as any).onreadystatechange =\n            function () {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              const rstate = (newScript as any).readyState;\n              if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                newScript.onload = (newScript as any).onreadystatechange = null;\n                if (newScript.parentNode) {\n                  newScript.parentNode.removeChild(newScript);\n                }\n                loadCB();\n              }\n            };\n          newScript.onerror = () => {\n            log('Long-poll script failed to load: ' + url);\n            this.sendNewPolls = false;\n            this.close();\n          };\n          this.myIFrame.doc.body.appendChild(newScript);\n        } catch (e) {\n          // TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isNodeSdk, jsonEval, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { logWrapper, splitStringBySize } from '../core/util/util';\nimport { SDK_VERSION } from '../core/version';\n\nimport {\n  APPLICATION_ID_PARAM,\n  APP_CHECK_TOKEN_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM,\n  WEBSOCKET\n} from './Constants';\nimport { Transport } from './Transport';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const MozWebSocket: any;\n\nconst WEBSOCKET_MAX_FRAME_SIZE = 16384;\nconst WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\n\nlet WebSocketImpl = null;\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n\nexport function setWebSocketImpl(impl) {\n  WebSocketImpl = impl;\n}\n\n/**\n * Create a new websocket connection with the given callbacks.\n */\nexport class WebSocketConnection implements Transport {\n  keepaliveTimer: number | null = null;\n  frames: string[] | null = null;\n  totalFrames = 0;\n  bytesSent = 0;\n  bytesReceived = 0;\n  connURL: string;\n  onDisconnect: (a?: boolean) => void;\n  onMessage: (msg: {}) => void;\n  mySock: WebSocket | null;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_: boolean;\n  private isClosed_: boolean;\n  private nodeAdmin: boolean;\n\n  /**\n   * @param connId identifier for this transport\n   * @param repoInfo The info for the websocket endpoint.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The App Check Token for this client.\n   * @param authToken The Auth Token for this client.\n   * @param transportSessionId Optional transportSessionId if this is connecting\n   * to an existing transport session\n   * @param lastSessionId Optional lastSessionId if there was a previous\n   * connection\n   */\n  constructor(\n    public connId: string,\n    repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    transportSessionId?: string,\n    lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(\n      repoInfo,\n      transportSessionId,\n      lastSessionId,\n      appCheckToken,\n      applicationId\n    );\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n\n  /**\n   * @param repoInfo - The info for the websocket endpoint.\n   * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\n   *                                         session\n   * @param lastSessionId - Optional lastSessionId if there was a previous connection\n   * @returns connection url\n   */\n  private static connectionURL_(\n    repoInfo: RepoInfo,\n    transportSessionId?: string,\n    lastSessionId?: string,\n    appCheckToken?: string,\n    applicationId?: string\n  ): string {\n    const urlParams: { [k: string]: string } = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (\n      !isNodeSdk() &&\n      typeof location !== 'undefined' &&\n      location.hostname &&\n      FORGE_DOMAIN_RE.test(location.hostname)\n    ) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n    if (appCheckToken) {\n      urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\n    }\n    if (applicationId) {\n      urlParams[APPLICATION_ID_PARAM] = applicationId;\n    }\n\n    return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n\n    this.log_('Websocket connecting to ' + this.connURL);\n\n    this.everConnected_ = false;\n    // Assume failure until proven otherwise.\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      let options: { [k: string]: object };\n      if (isNodeSdk()) {\n        const device = this.nodeAdmin ? 'AdminNode' : 'Node';\n        // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n        options = {\n          headers: {\n            'User-Agent': `Firebase/${PROTOCOL_VERSION}/${SDK_VERSION}/${process.platform}/${device}`,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n\n        // If using Node with admin creds, AppCheck-related checks are unnecessary.\n        // Note that we send the credentials here even if they aren't admin credentials, which is\n        // not a problem.\n        // Note that this header is just used to bypass appcheck, and the token should still be sent\n        // through the websocket connection once it is established.\n        if (this.authToken) {\n          options.headers['Authorization'] = `Bearer ${this.authToken}`;\n        }\n        if (this.appCheckToken) {\n          options.headers['X-Firebase-AppCheck'] = this.appCheckToken;\n        }\n\n        // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n        const env = process['env'];\n        const proxy =\n          this.connURL.indexOf('wss://') === 0\n            ? env['HTTPS_PROXY'] || env['https_proxy']\n            : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = { origin: proxy };\n        }\n      }\n      this.mySock = new WebSocketImpl(this.connURL, [], options);\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      const error = e.message || e.data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = () => {\n      this.log_('Websocket connected.');\n      this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = () => {\n      this.log_('Websocket connection was disconnected.');\n      this.mySock = null;\n      this.onClosed_();\n    };\n\n    this.mySock.onmessage = m => {\n      this.handleIncomingFrame(m as {});\n    };\n\n    this.mySock.onerror = e => {\n      this.log_('WebSocket error.  Closing connection.');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const error = (e as any).message || (e as any).data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n    };\n  }\n\n  /**\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\n   */\n  start() {}\n\n  static forceDisallow_: boolean;\n\n  static forceDisallow() {\n    WebSocketConnection.forceDisallow_ = true;\n  }\n\n  static isAvailable(): boolean {\n    let isOldAndroid = false;\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      const oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      const oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return (\n      !isOldAndroid &&\n      WebSocketImpl !== null &&\n      !WebSocketConnection.forceDisallow_\n    );\n  }\n\n  /**\n   * Number of response before we consider the connection \"healthy.\"\n   */\n  static responsesRequiredToBeHealthy = 2;\n\n  /**\n   * Time to wait for the connection te become healthy before giving up.\n   */\n  static healthyTimeout = 30000;\n\n  /**\n   * Returns true if we previously failed to connect with this transport.\n   */\n  static previouslyFailed(): boolean {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return (\n      PersistentStorage.isInMemoryStorage ||\n      PersistentStorage.get('previous_websocket_failure') === true\n    );\n  }\n\n  markConnectionHealthy() {\n    PersistentStorage.remove('previous_websocket_failure');\n  }\n\n  private appendFrame_(data: string) {\n    this.frames.push(data);\n    if (this.frames.length === this.totalFrames) {\n      const fullMess = this.frames.join('');\n      this.frames = null;\n      const jsonMess = jsonEval(fullMess) as object;\n\n      //handle the message\n      this.onMessage(jsonMess);\n    }\n  }\n\n  /**\n   * @param frameCount - The number of frames we are expecting from the server\n   */\n  private handleNewFrameCount_(frameCount: number) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  }\n\n  /**\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\n   * @returns Any remaining data to be process, or null if there is none\n   */\n  private extractFrameCount_(data: string): string | null {\n    assert(this.frames === null, 'We already have a frame buffer');\n    // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n    if (data.length <= 6) {\n      const frameCount = Number(data);\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n    this.handleNewFrameCount_(1);\n    return data;\n  }\n\n  /**\n   * Process a websocket frame that has arrived from the server.\n   * @param mess - The frame data\n   */\n  handleIncomingFrame(mess: { [k: string]: unknown }) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n    const data = mess['data'] as string;\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      const remainingData = this.extractFrameCount_(data);\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  }\n\n  /**\n   * Send a message to the server\n   * @param data - The JSON object to transmit\n   */\n  send(data: {}) {\n    this.resetKeepAlive();\n\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    const dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\n\n    //Send the length header\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    }\n\n    //Send the actual data in segments.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  }\n\n  private shutdown_() {\n    this.isClosed_ = true;\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  }\n\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_();\n\n      // since this is an internal close, trigger the close listener\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler.\n   * Close the websocket and kill the connection.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\n   * the last activity.\n   */\n  resetKeepAlive() {\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(() => {\n      //If there has been no websocket activity for a while, send a no-op\n      if (this.mySock) {\n        this.sendString_('0');\n      }\n      this.resetKeepAlive();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL)) as any;\n  }\n\n  /**\n   * Send a string over the websocket.\n   *\n   * @param str - String to send.\n   */\n  private sendString_(str: string) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_(\n        'Exception thrown from WebSocket.send():',\n        e.message || e.data,\n        'Closing connection.'\n      );\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { warn } from '../core/util/util';\n\nimport { BrowserPollConnection } from './BrowserPollConnection';\nimport { TransportConstructor } from './Transport';\nimport { WebSocketConnection } from './WebSocketConnection';\n\n/**\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\n * lifecycle.\n *\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\n * they are available.\n */\nexport class TransportManager {\n  private transports_: TransportConstructor[];\n\n  // Keeps track of whether the TransportManager has already chosen a transport to use\n  static globalTransportInitialized_ = false;\n\n  static get ALL_TRANSPORTS() {\n    return [BrowserPollConnection, WebSocketConnection];\n  }\n\n  /**\n   * Returns whether transport has been selected to ensure WebSocketConnection or BrowserPollConnection are not called after\n   * TransportManager has already set up transports_\n   */\n  static get IS_TRANSPORT_INITIALIZED() {\n    return this.globalTransportInitialized_;\n  }\n\n  /**\n   * @param repoInfo - Metadata around the namespace we're connecting to\n   */\n  constructor(repoInfo: RepoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  private initTransports_(repoInfo: RepoInfo) {\n    const isWebSocketsAvailable: boolean =\n      WebSocketConnection && WebSocketConnection['isAvailable']();\n    let isSkipPollConnection =\n      isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\n          \"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\"\n        );\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      const transports = (this.transports_ = [] as TransportConstructor[]);\n      for (const transport of TransportManager.ALL_TRANSPORTS) {\n        if (transport && transport['isAvailable']()) {\n          transports.push(transport);\n        }\n      }\n      TransportManager.globalTransportInitialized_ = true;\n    }\n  }\n\n  /**\n   * @returns The constructor for the initial transport to use\n   */\n  initialTransport(): TransportConstructor {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  }\n\n  /**\n   * @returns The constructor for the next transport, or null\n   */\n  upgradeTransport(): TransportConstructor | null {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { Indexable } from '../core/util/misc';\nimport {\n  error,\n  logWrapper,\n  requireKey,\n  setTimeoutNonBlocking,\n  warn\n} from '../core/util/util';\n\nimport { PROTOCOL_VERSION } from './Constants';\nimport { Transport, TransportConstructor } from './Transport';\nimport { TransportManager } from './TransportManager';\n\n// Abort upgrade attempt if it takes longer than 60s.\nconst UPGRADE_TIMEOUT = 60000;\n\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nconst DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\n\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nconst BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nconst BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\n\nconst enum RealtimeState {\n  CONNECTING,\n  CONNECTED,\n  DISCONNECTED\n}\n\nconst MESSAGE_TYPE = 't';\nconst MESSAGE_DATA = 'd';\nconst CONTROL_SHUTDOWN = 's';\nconst CONTROL_RESET = 'r';\nconst CONTROL_ERROR = 'e';\nconst CONTROL_PONG = 'o';\nconst SWITCH_ACK = 'a';\nconst END_TRANSMISSION = 'n';\nconst PING = 'p';\n\nconst SERVER_HELLO = 'h';\n\n/**\n * Creates a new real-time connection to the server using whichever method works\n * best in the current browser.\n */\nexport class Connection {\n  connectionCount = 0;\n  pendingDataMessages: unknown[] = [];\n  sessionId: string;\n\n  private conn_: Transport;\n  private healthyTimeout_: number;\n  private isHealthy_: boolean;\n  private log_: (...args: unknown[]) => void;\n  private primaryResponsesRequired_: number;\n  private rx_: Transport;\n  private secondaryConn_: Transport;\n  private secondaryResponsesRequired_: number;\n  private state_ = RealtimeState.CONNECTING;\n  private transportManager_: TransportManager;\n  private tx_: Transport;\n\n  /**\n   * @param id - an id for this connection\n   * @param repoInfo_ - the info for the endpoint to connect to\n   * @param applicationId_ - the Firebase App ID for this project\n   * @param appCheckToken_ - The App Check Token for this device.\n   * @param authToken_ - The auth token for this session.\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\n   */\n  constructor(\n    public id: string,\n    private repoInfo_: RepoInfo,\n    private applicationId_: string | undefined,\n    private appCheckToken_: string | undefined,\n    private authToken_: string | undefined,\n    private onMessage_: (a: {}) => void,\n    private onReady_: (a: number, b: string) => void,\n    private onDisconnect_: () => void,\n    private onKill_: (a: string) => void,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n\n  /**\n   * Starts a connection attempt\n   */\n  private start_(): void {\n    const conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      null,\n      this.lastSessionId\n    );\n\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessageReceived = this.connReceiver_(this.conn_);\n    const onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n\n    /*\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\n     * still have the context of your originating frame.\n     */\n    setTimeout(() => {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      this.conn_ && this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n\n    const healthyTimeoutMS = conn['healthyTimeout'] || 0;\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(() => {\n        this.healthyTimeout_ = null;\n        if (!this.isHealthy_) {\n          if (\n            this.conn_ &&\n            this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has received ' +\n                this.conn_.bytesReceived +\n                ' bytes.  Marking connection healthy.'\n            );\n            this.isHealthy_ = true;\n            this.conn_.markConnectionHealthy();\n          } else if (\n            this.conn_ &&\n            this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has sent ' +\n                this.conn_.bytesSent +\n                ' bytes.  Leaving connection alive.'\n            );\n            // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n          } else {\n            this.log_('Closing unhealthy connection after timeout.');\n            this.close();\n          }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      }, Math.floor(healthyTimeoutMS)) as any;\n    }\n  }\n\n  private nextTransportId_(): string {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  }\n\n  private disconnReceiver_(conn) {\n    return everConnected => {\n      if (conn === this.conn_) {\n        this.onConnectionLost_(everConnected);\n      } else if (conn === this.secondaryConn_) {\n        this.log_('Secondary connection lost.');\n        this.onSecondaryConnectionLost_();\n      } else {\n        this.log_('closing an old connection');\n      }\n    };\n  }\n\n  private connReceiver_(conn: Transport) {\n    return (message: Indexable) => {\n      if (this.state_ !== RealtimeState.DISCONNECTED) {\n        if (conn === this.rx_) {\n          this.onPrimaryMessageReceived_(message);\n        } else if (conn === this.secondaryConn_) {\n          this.onSecondaryMessageReceived_(message);\n        } else {\n          this.log_('message on old connection');\n        }\n      }\n    };\n  }\n\n  /**\n   * @param dataMsg - An arbitrary data message to be sent to the server\n   */\n  sendRequest(dataMsg: object) {\n    // wrap in a data message envelope and send it on\n    const msg = { t: 'd', d: dataMsg };\n    this.sendData_(msg);\n  }\n\n  tryCleanupConnection() {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_(\n        'cleaning up and promoting a connection: ' + this.secondaryConn_.connId\n      );\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null;\n      // the server will shutdown the old connection\n    }\n  }\n\n  private onSecondaryControl_(controlData: { [k: string]: unknown }) {\n    if (MESSAGE_TYPE in controlData) {\n      const cmd = controlData[MESSAGE_TYPE] as string;\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close();\n        // If we were already using this connection for something, than we need to fully close\n        if (\n          this.tx_ === this.secondaryConn_ ||\n          this.rx_ === this.secondaryConn_\n        ) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  }\n\n  private onSecondaryMessageReceived_(parsedData: Indexable) {\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onSecondaryControl_(data as Indexable);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  }\n\n  private upgradeIfSecondaryHealthy_() {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private proceedWithUpgrade_() {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start();\n    // send ack\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\n\n    // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n    this.log_('Ending transmission on primary');\n    this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\n    this.tx_ = this.secondaryConn_;\n\n    this.tryCleanupConnection();\n  }\n\n  private onPrimaryMessageReceived_(parsedData: { [k: string]: unknown }) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onControl_(data as { [k: string]: unknown });\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  }\n\n  private onDataMessage_(message: unknown) {\n    this.onPrimaryResponse_();\n\n    // We don't do anything with data messages, just kick them up a level\n    this.onMessage_(message);\n  }\n\n  private onPrimaryResponse_() {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  }\n\n  private onControl_(controlData: { [k: string]: unknown }) {\n    const cmd: string = requireKey(MESSAGE_TYPE, controlData) as string;\n    if (MESSAGE_DATA in controlData) {\n      const payload = controlData[MESSAGE_DATA];\n      if (cmd === SERVER_HELLO) {\n        const handshakePayload = {\n          ...(payload as {\n            ts: number;\n            v: string;\n            h: string;\n            s: string;\n          })\n        };\n        if (this.repoInfo_.isUsingEmulator) {\n          // Upon connecting, the emulator will pass the hostname that it's aware of, but we prefer the user's set hostname via `connectDatabaseEmulator` over what the emulator passes.\n          handshakePayload.h = this.repoInfo_.host;\n        }\n        this.onHandshake_(handshakePayload);\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n        for (let i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload as string);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload as string);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  }\n\n  /**\n   * @param handshake - The handshake data returned from the server\n   */\n  private onHandshake_(handshake: {\n    ts: number;\n    v: string;\n    h: string;\n    s: string;\n  }): void {\n    const timestamp = handshake.ts;\n    const version = handshake.v;\n    const host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.host = host;\n    // if we've already closed the connection, then don't bother trying to progress further\n    if (this.state_ === RealtimeState.CONNECTING) {\n      this.conn_.start();\n      this.onConnectionEstablished_(this.conn_, timestamp);\n      if (PROTOCOL_VERSION !== version) {\n        warn('Protocol version mismatch detected');\n      }\n      // TODO: do we want to upgrade? when? maybe a delay?\n      this.tryStartUpgrade_();\n    }\n  }\n\n  private tryStartUpgrade_() {\n    const conn = this.transportManager_.upgradeTransport();\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  }\n\n  private startUpgrade_(conn: TransportConstructor) {\n    this.secondaryConn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      this.sessionId\n    );\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.secondaryResponsesRequired_ =\n      conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessage = this.connReceiver_(this.secondaryConn_);\n    const onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect);\n\n    // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n    setTimeoutNonBlocking(() => {\n      if (this.secondaryConn_) {\n        this.log_('Timed out trying to upgrade.');\n        this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  }\n\n  private onReset_(host: string) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.host = host;\n    // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n    if (this.state_ === RealtimeState.CONNECTED) {\n      this.close();\n    } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  }\n\n  private onConnectionEstablished_(conn: Transport, timestamp: number) {\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = RealtimeState.CONNECTED;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    }\n\n    // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(() => {\n        this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  }\n\n  private sendPingOnPrimaryIfNecessary_() {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === RealtimeState.CONNECTED) {\n      this.log_('sending ping on primary.');\n      this.sendData_({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private onSecondaryConnectionLost_() {\n    const conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  }\n\n  /**\n   * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\n   * we should flush the host cache\n   */\n  private onConnectionLost_(everConnected: boolean) {\n    this.conn_ = null;\n\n    // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n    if (!everConnected && this.state_ === RealtimeState.CONNECTING) {\n      this.log_('Realtime connection failed.');\n      // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n      if (this.repoInfo_.isCacheableHost()) {\n        PersistentStorage.remove('host:' + this.repoInfo_.host);\n        // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n        this.repoInfo_.internalHost = this.repoInfo_.host;\n      }\n    } else if (this.state_ === RealtimeState.CONNECTED) {\n      this.log_('Realtime connection lost.');\n    }\n\n    this.close();\n  }\n\n  private onConnectionShutdown_(reason: string) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    }\n\n    // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n    this.onDisconnect_ = null;\n\n    this.close();\n  }\n\n  private sendData_(data: object) {\n    if (this.state_ !== RealtimeState.CONNECTED) {\n      throw 'Connection is not connected';\n    } else {\n      this.tx_.send(data);\n    }\n  }\n\n  /**\n   * Cleans up this connection, calling the appropriate callbacks\n   */\n  close() {\n    if (this.state_ !== RealtimeState.DISCONNECTED) {\n      this.log_('Closing realtime connection.');\n      this.state_ = RealtimeState.DISCONNECTED;\n\n      this.closeConnections_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_();\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  private closeConnections_() {\n    this.log_('Shutting down all connections');\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { QueryContext } from './view/EventRegistration';\n\n/**\n * Interface defining the set of actions that can be performed against the Firebase server\n * (basically corresponds to our wire protocol).\n *\n * @interface\n */\nexport abstract class ServerActions {\n  abstract listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ): void;\n\n  /**\n   * Remove a listen.\n   */\n  abstract unlisten(query: QueryContext, tag: number | null): void;\n\n  /**\n   * Get the server value satisfying this query.\n   */\n  abstract get(query: QueryContext): Promise<string>;\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {}\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {}\n\n  /**\n   * Refreshes the auth token for the current connection.\n   * @param token - The authentication token\n   */\n  refreshAuthToken(token: string) {}\n\n  /**\n   * Refreshes the app check token for the current connection.\n   * @param token The app check token\n   */\n  refreshAppCheckToken(token: string) {}\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  reportStats(stats: { [k: string]: unknown }) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\n/**\n * Base class to be used if you want to emit events. Call the constructor with\n * the set of allowed event names.\n */\nexport abstract class EventEmitter {\n  private listeners_: {\n    [eventType: string]: Array<{\n      callback(...args: unknown[]): void;\n      context: unknown;\n    }>;\n  } = {};\n\n  constructor(private allowedEvents_: string[]) {\n    assert(\n      Array.isArray(allowedEvents_) && allowedEvents_.length > 0,\n      'Requires a non-empty array'\n    );\n  }\n\n  /**\n   * To be overridden by derived classes in order to fire an initial event when\n   * somebody subscribes for data.\n   *\n   * @returns {Array.<*>} Array of parameters to trigger initial event with.\n   */\n  abstract getInitialEvent(eventType: string): unknown[];\n\n  /**\n   * To be called by derived classes to trigger events.\n   */\n  protected trigger(eventType: string, ...varArgs: unknown[]) {\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      const listeners = [...this.listeners_[eventType]];\n\n      for (let i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  }\n\n  on(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({ callback, context });\n\n    const eventData = this.getInitialEvent(eventType);\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  }\n\n  off(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    const listeners = this.listeners_[eventType] || [];\n    for (let i = 0; i < listeners.length; i++) {\n      if (\n        listeners[i].callback === callback &&\n        (!context || context === listeners[i].context)\n      ) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  private validateEventType_(eventType: string) {\n    assert(\n      this.allowedEvents_.find(et => {\n        return et === eventType;\n      }),\n      'Unknown event: ' + eventType\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isMobileCordova } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\n/**\n * Monitors online state (as reported by window.online/offline events).\n *\n * The expectation is that this could have many false positives (thinks we are online\n * when we're not), but no false negatives.  So we can safely use it to determine when\n * we definitely cannot reach the internet.\n */\nexport class OnlineMonitor extends EventEmitter {\n  private online_ = true;\n\n  static getInstance() {\n    return new OnlineMonitor();\n  }\n\n  constructor() {\n    super(['online']);\n\n    // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window.addEventListener !== 'undefined' &&\n      !isMobileCordova()\n    ) {\n      window.addEventListener(\n        'online',\n        () => {\n          if (!this.online_) {\n            this.online_ = true;\n            this.trigger('online', true);\n          }\n        },\n        false\n      );\n\n      window.addEventListener(\n        'offline',\n        () => {\n          if (this.online_) {\n            this.online_ = false;\n            this.trigger('online', false);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  }\n\n  currentlyOnline(): boolean {\n    return this.online_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringLength } from '@firebase/util';\n\nimport { nameCompare } from './util';\n\n/** Maximum key depth. */\nconst MAX_PATH_DEPTH = 32;\n\n/** Maximum number of (UTF8) bytes in a Firebase path. */\nconst MAX_PATH_LENGTH_BYTES = 768;\n\n/**\n * An immutable object representing a parsed path.  It's immutable so that you\n * can pass them around to other functions without worrying about them changing\n * it.\n */\n\nexport class Path {\n  pieces_: string[];\n  pieceNum_: number;\n\n  /**\n   * @param pathOrString - Path string to parse, or another path, or the raw\n   * tokens array\n   */\n  constructor(pathOrString: string | string[], pieceNum?: number) {\n    if (pieceNum === void 0) {\n      this.pieces_ = (pathOrString as string).split('/');\n\n      // Remove empty pieces.\n      let copyTo = 0;\n      for (let i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n      this.pieces_.length = copyTo;\n\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString as string[];\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  toString(): string {\n    let pathString = '';\n    for (let i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  }\n}\n\nexport function newEmptyPath(): Path {\n  return new Path('');\n}\n\nexport function pathGetFront(path: Path): string | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  return path.pieces_[path.pieceNum_];\n}\n\n/**\n * @returns The number of segments in this path\n */\nexport function pathGetLength(path: Path): number {\n  return path.pieces_.length - path.pieceNum_;\n}\n\nexport function pathPopFront(path: Path): Path {\n  let pieceNum = path.pieceNum_;\n  if (pieceNum < path.pieces_.length) {\n    pieceNum++;\n  }\n  return new Path(path.pieces_, pieceNum);\n}\n\nexport function pathGetBack(path: Path): string | null {\n  if (path.pieceNum_ < path.pieces_.length) {\n    return path.pieces_[path.pieces_.length - 1];\n  }\n\n  return null;\n}\n\nexport function pathToUrlEncodedString(path: Path): string {\n  let pathString = '';\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    if (path.pieces_[i] !== '') {\n      pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\n    }\n  }\n\n  return pathString || '/';\n}\n\n/**\n * Shallow copy of the parts of the path.\n *\n */\nexport function pathSlice(path: Path, begin: number = 0): string[] {\n  return path.pieces_.slice(path.pieceNum_ + begin);\n}\n\nexport function pathParent(path: Path): Path | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  return new Path(pieces, 0);\n}\n\nexport function pathChild(path: Path, childPathObj: string | Path): Path {\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  if (childPathObj instanceof Path) {\n    for (let i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n      pieces.push(childPathObj.pieces_[i]);\n    }\n  } else {\n    const childPieces = childPathObj.split('/');\n    for (let i = 0; i < childPieces.length; i++) {\n      if (childPieces[i].length > 0) {\n        pieces.push(childPieces[i]);\n      }\n    }\n  }\n\n  return new Path(pieces, 0);\n}\n\n/**\n * @returns True if there are no segments in this path\n */\nexport function pathIsEmpty(path: Path): boolean {\n  return path.pieceNum_ >= path.pieces_.length;\n}\n\n/**\n * @returns The path from outerPath to innerPath\n */\nexport function newRelativePath(outerPath: Path, innerPath: Path): Path {\n  const outer = pathGetFront(outerPath),\n    inner = pathGetFront(innerPath);\n  if (outer === null) {\n    return innerPath;\n  } else if (outer === inner) {\n    return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\n  } else {\n    throw new Error(\n      'INTERNAL ERROR: innerPath (' +\n        innerPath +\n        ') is not within ' +\n        'outerPath (' +\n        outerPath +\n        ')'\n    );\n  }\n}\n\n/**\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\n */\nexport function pathCompare(left: Path, right: Path): number {\n  const leftKeys = pathSlice(left, 0);\n  const rightKeys = pathSlice(right, 0);\n  for (let i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n    const cmp = nameCompare(leftKeys[i], rightKeys[i]);\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n  if (leftKeys.length === rightKeys.length) {\n    return 0;\n  }\n  return leftKeys.length < rightKeys.length ? -1 : 1;\n}\n\n/**\n * @returns true if paths are the same.\n */\nexport function pathEquals(path: Path, other: Path): boolean {\n  if (pathGetLength(path) !== pathGetLength(other)) {\n    return false;\n  }\n\n  for (\n    let i = path.pieceNum_, j = other.pieceNum_;\n    i <= path.pieces_.length;\n    i++, j++\n  ) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @returns True if this path is a parent of (or the same as) other\n */\nexport function pathContains(path: Path, other: Path): boolean {\n  let i = path.pieceNum_;\n  let j = other.pieceNum_;\n  if (pathGetLength(path) > pathGetLength(other)) {\n    return false;\n  }\n  while (i < path.pieces_.length) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n    ++i;\n    ++j;\n  }\n  return true;\n}\n\n/**\n * Dynamic (mutable) path used to count path lengths.\n *\n * This class is used to efficiently check paths for valid\n * length (in UTF8 bytes) and depth (used in path validation).\n *\n * Throws Error exception if path is ever invalid.\n *\n * The definition of a path always begins with '/'.\n */\nexport class ValidationPath {\n  parts_: string[];\n  /** Initialize to number of '/' chars needed in path. */\n  byteLength_: number;\n\n  /**\n   * @param path - Initial Path.\n   * @param errorPrefix_ - Prefix for any error messages.\n   */\n  constructor(path: Path, public errorPrefix_: string) {\n    this.parts_ = pathSlice(path, 0);\n    /** Initialize to number of '/' chars needed in path. */\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (let i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n    validationPathCheckValid(this);\n  }\n}\n\nexport function validationPathPush(\n  validationPath: ValidationPath,\n  child: string\n): void {\n  // Count the needed '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ += 1;\n  }\n  validationPath.parts_.push(child);\n  validationPath.byteLength_ += stringLength(child);\n  validationPathCheckValid(validationPath);\n}\n\nexport function validationPathPop(validationPath: ValidationPath): void {\n  const last = validationPath.parts_.pop();\n  validationPath.byteLength_ -= stringLength(last);\n  // Un-count the previous '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ -= 1;\n  }\n}\n\nfunction validationPathCheckValid(validationPath: ValidationPath): void {\n  if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'has a key path longer than ' +\n        MAX_PATH_LENGTH_BYTES +\n        ' bytes (' +\n        validationPath.byteLength_ +\n        ').'\n    );\n  }\n  if (validationPath.parts_.length > MAX_PATH_DEPTH) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'path specified exceeds the maximum depth that can be written (' +\n        MAX_PATH_DEPTH +\n        ') or object contains a cycle ' +\n        validationPathToErrorString(validationPath)\n    );\n  }\n}\n\n/**\n * String for use in error messages - uses '.' notation for path.\n */\nexport function validationPathToErrorString(\n  validationPath: ValidationPath\n): string {\n  if (validationPath.parts_.length === 0) {\n    return '';\n  }\n  return \"in property '\" + validationPath.parts_.join('.') + \"'\";\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\ndeclare const document: Document;\n\nexport class VisibilityMonitor extends EventEmitter {\n  private visible_: boolean;\n\n  static getInstance() {\n    return new VisibilityMonitor();\n  }\n\n  constructor() {\n    super(['visible']);\n    let hidden: string;\n    let visibilityChange: string;\n    if (\n      typeof document !== 'undefined' &&\n      typeof document.addEventListener !== 'undefined'\n    ) {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    }\n\n    // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n    this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(\n        visibilityChange,\n        () => {\n          const visible = !document[hidden];\n          if (visible !== this.visible_) {\n            this.visible_ = visible;\n            this.trigger('visible', visible);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  Deferred,\n  isEmpty,\n  isMobileCordova,\n  isNodeSdk,\n  isReactNative,\n  isValidFormat,\n  safeGet,\n  stringify,\n  isAdmin\n} from '@firebase/util';\n\nimport { Connection } from '../realtime/Connection';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { OnlineMonitor } from './util/OnlineMonitor';\nimport { Path } from './util/Path';\nimport { error, log, logWrapper, warn, ObjectToUniqueKey } from './util/util';\nimport { VisibilityMonitor } from './util/VisibilityMonitor';\nimport { SDK_VERSION } from './version';\nimport { QueryContext } from './view/EventRegistration';\n\nconst RECONNECT_MIN_DELAY = 1000;\nconst RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\nconst RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\nconst RECONNECT_DELAY_MULTIPLIER = 1.3;\nconst RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\nconst SERVER_KILL_INTERRUPT_REASON = 'server_kill';\n\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nconst INVALID_TOKEN_THRESHOLD = 3;\n\ninterface ListenSpec {\n  onComplete(s: string, p?: unknown): void;\n\n  hashFn(): string;\n\n  query: QueryContext;\n  tag: number | null;\n}\n\ninterface OnDisconnectRequest {\n  pathString: string;\n  action: string;\n  data: unknown;\n  onComplete?: (a: string, b: string) => void;\n}\n\ninterface OutstandingPut {\n  action: string;\n  request: object;\n  queued?: boolean;\n  onComplete: (a: string, b?: string) => void;\n}\n\ninterface OutstandingGet {\n  request: object;\n  onComplete: (response: { [k: string]: unknown }) => void;\n}\n\n/**\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\n *\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\n * in quotes to make sure the closure compiler does not minify them.\n */\nexport class PersistentConnection extends ServerActions {\n  // Used for diagnostic logging.\n  id = PersistentConnection.nextPersistentConnectionId_++;\n  private log_ = logWrapper('p:' + this.id + ':');\n\n  private interruptReasons_: { [reason: string]: boolean } = {};\n  private readonly listens: Map<\n    /* path */ string,\n    Map</* queryId */ string, ListenSpec>\n  > = new Map();\n  private outstandingPuts_: OutstandingPut[] = [];\n  private outstandingGets_: OutstandingGet[] = [];\n  private outstandingPutCount_ = 0;\n  private outstandingGetCount_ = 0;\n  private onDisconnectRequestQueue_: OnDisconnectRequest[] = [];\n  private connected_ = false;\n  private reconnectDelay_ = RECONNECT_MIN_DELAY;\n  private maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n  private securityDebugCallback_: ((a: object) => void) | null = null;\n  lastSessionId: string | null = null;\n\n  private establishConnectionTimer_: number | null = null;\n\n  private visible_: boolean = false;\n\n  // Before we get connected, we keep a queue of pending messages to send.\n  private requestCBHash_: { [k: number]: (a: unknown) => void } = {};\n  private requestNumber_ = 0;\n\n  private realtime_: {\n    sendRequest(a: object): void;\n    close(): void;\n  } | null = null;\n\n  private authToken_: string | null = null;\n  private appCheckToken_: string | null = null;\n  private forceTokenRefresh_ = false;\n  private invalidAuthTokenCount_ = 0;\n  private invalidAppCheckTokenCount_ = 0;\n\n  private firstConnection_ = true;\n  private lastConnectionAttemptTime_: number | null = null;\n  private lastConnectionEstablishedTime_: number | null = null;\n\n  private static nextPersistentConnectionId_ = 0;\n\n  /**\n   * Counter for number of connections created. Mainly used for tagging in the logs\n   */\n  private static nextConnectionId_ = 0;\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param applicationId_ - The Firebase App ID for this project\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private applicationId_: string,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private onConnectStatus_: (a: boolean) => void,\n    private onServerInfoUpdate_: (a: unknown) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider,\n    private authOverride_?: object | null\n  ) {\n    super();\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error(\n        'Auth override specified in options, but not supported on non Node.js platforms'\n      );\n    }\n\n    VisibilityMonitor.getInstance().on('visible', this.onVisible_, this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', this.onOnline_, this);\n    }\n  }\n\n  protected sendRequest(\n    action: string,\n    body: unknown,\n    onResponse?: (a: unknown) => void\n  ) {\n    const curReqNum = ++this.requestNumber_;\n\n    const msg = { r: curReqNum, a: action, b: body };\n    this.log_(stringify(msg));\n    assert(\n      this.connected_,\n      \"sendRequest call when we're not connected not allowed.\"\n    );\n    this.realtime_.sendRequest(msg);\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  }\n\n  get(query: QueryContext): Promise<string> {\n    this.initConnection_();\n\n    const deferred = new Deferred<string>();\n    const request = {\n      p: query._path.toString(),\n      q: query._queryObject\n    };\n    const outstandingGet = {\n      action: 'g',\n      request,\n      onComplete: (message: { [k: string]: unknown }) => {\n        const payload = message['d'] as string;\n        if (message['s'] === 'ok') {\n          deferred.resolve(payload);\n        } else {\n          deferred.reject(payload);\n        }\n      }\n    };\n    this.outstandingGets_.push(outstandingGet);\n    this.outstandingGetCount_++;\n    const index = this.outstandingGets_.length - 1;\n\n    if (this.connected_) {\n      this.sendGet_(index);\n    }\n\n    return deferred.promise;\n  }\n\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    this.initConnection_();\n\n    const queryId = query._queryIdentifier;\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'listen() called for non-default but complete query'\n    );\n    assert(\n      !this.listens.get(pathString)!.has(queryId),\n      `listen() called twice for same path/queryId.`\n    );\n    const listenSpec: ListenSpec = {\n      onComplete,\n      hashFn: currentHashFn,\n      query,\n      tag\n    };\n    this.listens.get(pathString)!.set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  }\n\n  private sendGet_(index: number) {\n    const get = this.outstandingGets_[index];\n    this.sendRequest('g', get.request, (message: { [k: string]: unknown }) => {\n      delete this.outstandingGets_[index];\n      this.outstandingGetCount_--;\n      if (this.outstandingGetCount_ === 0) {\n        this.outstandingGets_ = [];\n      }\n      if (get.onComplete) {\n        get.onComplete(message);\n      }\n    });\n  }\n\n  private sendListen_(listenSpec: ListenSpec) {\n    const query = listenSpec.query;\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n\n    const action = 'q';\n\n    // Only bother to send query if it's non-default.\n    if (listenSpec.tag) {\n      req['q'] = query._queryObject;\n      req['t'] = listenSpec.tag;\n    }\n\n    req[/*hash*/ 'h'] = listenSpec.hashFn();\n\n    this.sendRequest(action, req, (message: { [k: string]: unknown }) => {\n      const payload: unknown = message[/*data*/ 'd'];\n      const status = message[/*status*/ 's'] as string;\n\n      // print warnings in any case...\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      const currentListenSpec =\n        this.listens.get(pathString) &&\n        this.listens.get(pathString)!.get(queryId);\n      // only trigger actions if the listen hasn't been removed and readded\n      if (currentListenSpec === listenSpec) {\n        this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  }\n\n  private static warnOnListenWarnings_(payload: unknown, query: QueryContext) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const warnings = safeGet(payload as any, 'w');\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        const indexSpec =\n          '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\n        const indexPath = query._path.toString();\n        warn(\n          `Using an unspecified index. Your data will be downloaded and ` +\n            `filtered on the client. Consider adding ${indexSpec} at ` +\n            `${indexPath} to your security rules for better performance.`\n        );\n      }\n    }\n  }\n\n  refreshAuthToken(token: string) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, () => {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  }\n\n  private reduceReconnectDelayIfAdminCredential_(credential: string) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    const isFirebaseSecret = credential && credential.length === 40;\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_(\n        'Admin auth credential detected.  Reducing max reconnect time.'\n      );\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  }\n\n  refreshAppCheckToken(token: string | null) {\n    this.appCheckToken_ = token;\n    this.log_('App check token refreshed');\n    if (this.appCheckToken_) {\n      this.tryAppCheck();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us.\n      //If we're not connected, simply delete the credential so we dont become\n      // authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unappeck', {}, () => {});\n      }\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\n   * a auth revoked (the connection is closed).\n   */\n  tryAuth() {\n    if (this.connected_ && this.authToken_) {\n      const token = this.authToken_;\n      const authMethod = isValidFormat(token) ? 'auth' : 'gauth';\n      const requestData: { [k: string]: unknown } = { cred: token };\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n      this.sendRequest(\n        authMethod,\n        requestData,\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n\n          if (this.authToken_ === token) {\n            if (status === 'ok') {\n              this.invalidAuthTokenCount_ = 0;\n            } else {\n              // Triggers reconnect and force refresh for auth token\n              this.onAuthRevoked_(status, data);\n            }\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given token. If the authentication\n   * attempt fails, it's triggered like the token was revoked (the connection is\n   * closed).\n   */\n  tryAppCheck() {\n    if (this.connected_ && this.appCheckToken_) {\n      this.sendRequest(\n        'appcheck',\n        { 'token': this.appCheckToken_ },\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n          if (status === 'ok') {\n            this.invalidAppCheckTokenCount_ = 0;\n          } else {\n            this.onAppCheckRevoked_(status, data);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  unlisten(query: QueryContext, tag: number | null) {\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'unlisten() called for non-default but complete query'\n    );\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\n    }\n  }\n\n  private sendUnlisten_(\n    pathString: string,\n    queryId: string,\n    queryObj: object,\n    tag: number | null\n  ) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n    const action = 'n';\n    // Only bother sending queryId if it's non-default.\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  }\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'o',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'om',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'oc',\n        data: null,\n        onComplete\n      });\n    }\n  }\n\n  private sendOnDisconnect_(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string) => void\n  ) {\n    const request = { /*path*/ p: pathString, /*data*/ d: data };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, (response: { [k: string]: unknown }) => {\n      if (onComplete) {\n        setTimeout(() => {\n          onComplete(\n            response[/*status*/ 's'] as string,\n            response[/* data */ 'd'] as string\n          );\n        }, Math.floor(0));\n      }\n    });\n  }\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  }\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  }\n\n  putInternal(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.initConnection_();\n\n    const request: { [k: string]: unknown } = {\n      /*path*/ p: pathString,\n      /*data*/ d: data\n    };\n\n    if (hash !== undefined) {\n      request[/*hash*/ 'h'] = hash;\n    }\n\n    // TODO: Only keep track of the most recent put for a given path?\n    this.outstandingPuts_.push({\n      action,\n      request,\n      onComplete\n    });\n\n    this.outstandingPutCount_++;\n    const index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  }\n\n  private sendPut_(index: number) {\n    const action = this.outstandingPuts_[index].action;\n    const request = this.outstandingPuts_[index].request;\n    const onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n\n    this.sendRequest(action, request, (message: { [k: string]: unknown }) => {\n      this.log_(action + ' response', message);\n\n      delete this.outstandingPuts_[index];\n      this.outstandingPutCount_--;\n\n      // Clean up array occasionally.\n      if (this.outstandingPutCount_ === 0) {\n        this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(\n          message[/*status*/ 's'] as string,\n          message[/* data */ 'd'] as string\n        );\n      }\n    });\n  }\n\n  reportStats(stats: { [k: string]: unknown }) {\n    // If we're not connected, we just drop the stats.\n    if (this.connected_) {\n      const request = { /*counters*/ c: stats };\n      this.log_('reportStats', request);\n\n      this.sendRequest(/*stats*/ 's', request, result => {\n        const status = result[/*status*/ 's'];\n        if (status !== 'ok') {\n          const errorReason = result[/* data */ 'd'];\n          this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  }\n\n  private onDataMessage_(message: { [k: string]: unknown }) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      const reqNum = message['r'] as string;\n      const onResponse = this.requestCBHash_[reqNum];\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[/*body*/ 'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'] as string, message['b'] as {});\n    }\n  }\n\n  private onDataPush_(action: string, body: { [k: string]: unknown }) {\n    this.log_('handleServerMessage', action, body);\n    if (action === 'd') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge*/ false,\n        body['t'] as number\n      );\n    } else if (action === 'm') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge=*/ true,\n        body['t'] as number\n      );\n    } else if (action === 'c') {\n      this.onListenRevoked_(\n        body[/*path*/ 'p'] as string,\n        body[/*query*/ 'q'] as unknown[]\n      );\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'apc') {\n      this.onAppCheckRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error(\n        'Unrecognized action received from server: ' +\n          stringify(action) +\n          '\\nAre you using the latest client?'\n      );\n    }\n  }\n\n  private onReady_(timestamp: number, sessionId: string) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  }\n\n  private scheduleConnect_(timeout: number) {\n    assert(\n      !this.realtime_,\n      \"Scheduling a connect when we're already connected/ing?\"\n    );\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    }\n\n    // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n    this.establishConnectionTimer_ = setTimeout(() => {\n      this.establishConnectionTimer_ = null;\n      this.establishConnection_();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(timeout)) as any;\n  }\n\n  private initConnection_() {\n    if (!this.realtime_ && this.firstConnection_) {\n      this.scheduleConnect_(0);\n    }\n  }\n\n  private onVisible_(visible: boolean) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (\n      visible &&\n      !this.visible_ &&\n      this.reconnectDelay_ === this.maxReconnectDelay_\n    ) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n    this.visible_ = visible;\n  }\n\n  private onOnline_(online: boolean) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  }\n\n  private onRealtimeDisconnect_() {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null;\n\n    // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n    this.cancelSentTransactions_();\n\n    // Clear out the pending requests.\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        const timeSinceLastConnectSucceeded =\n          new Date().getTime() - this.lastConnectionEstablishedTime_;\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      const timeSinceLastConnectAttempt =\n        new Date().getTime() - this.lastConnectionAttemptTime_;\n      let reconnectDelay = Math.max(\n        0,\n        this.reconnectDelay_ - timeSinceLastConnectAttempt\n      );\n      reconnectDelay = Math.random() * reconnectDelay;\n\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay);\n\n      // Adjust reconnect delay for next time.\n      this.reconnectDelay_ = Math.min(\n        this.maxReconnectDelay_,\n        this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER\n      );\n    }\n    this.onConnectStatus_(false);\n  }\n\n  private async establishConnection_() {\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      const onDataMessage = this.onDataMessage_.bind(this);\n      const onReady = this.onReady_.bind(this);\n      const onDisconnect = this.onRealtimeDisconnect_.bind(this);\n      const connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      const lastSessionId = this.lastSessionId;\n      let canceled = false;\n      let connection: Connection | null = null;\n      const closeFn = function () {\n        if (connection) {\n          connection.close();\n        } else {\n          canceled = true;\n          onDisconnect();\n        }\n      };\n      const sendRequestFn = function (msg: object) {\n        assert(\n          connection,\n          \"sendRequest call when we're not connected not allowed.\"\n        );\n        connection.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn,\n        sendRequest: sendRequestFn\n      };\n\n      const forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false;\n\n      try {\n        // First fetch auth and app check token, and establish connection after\n        // fetching the token was successful\n        const [authToken, appCheckToken] = await Promise.all([\n          this.authTokenProvider_.getToken(forceRefresh),\n          this.appCheckTokenProvider_.getToken(forceRefresh)\n        ]);\n\n        if (!canceled) {\n          log('getToken() completed. Creating connection.');\n          this.authToken_ = authToken && authToken.accessToken;\n          this.appCheckToken_ = appCheckToken && appCheckToken.token;\n          connection = new Connection(\n            connId,\n            this.repoInfo_,\n            this.applicationId_,\n            this.appCheckToken_,\n            this.authToken_,\n            onDataMessage,\n            onReady,\n            onDisconnect,\n            /* onKill= */ reason => {\n              warn(reason + ' (' + this.repoInfo_.toString() + ')');\n              this.interrupt(SERVER_KILL_INTERRUPT_REASON);\n            },\n            lastSessionId\n          );\n        } else {\n          log('getToken() completed but was canceled');\n        }\n      } catch (error) {\n        this.log_('Failed to get token: ' + error);\n        if (!canceled) {\n          if (this.repoInfo_.nodeAdmin) {\n            // This may be a critical error for the Admin Node.js SDK, so log a warning.\n            // But getToken() may also just have temporarily failed, so we still want to\n            // continue retrying.\n            warn(error);\n          }\n          closeFn();\n        }\n      }\n    }\n  }\n\n  interrupt(reason: string) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  }\n\n  resume(reason: string) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  }\n\n  private handleTimestamp_(timestamp: number) {\n    const delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({ serverTimeOffset: delta });\n  }\n\n  private cancelSentTransactions_() {\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      const put = this.outstandingPuts_[i];\n      if (put && /*hash*/ 'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    }\n\n    // Clean up array occasionally.\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  }\n\n  private onListenRevoked_(pathString: string, query?: unknown[]) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    let queryId;\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(q => ObjectToUniqueKey(q)).join('$');\n    }\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  }\n\n  private removeListen_(pathString: string, queryId: string): ListenSpec {\n    const normalizedPathString = new Path(pathString).toString(); // normalize path.\n    let listen;\n    if (this.listens.has(normalizedPathString)) {\n      const map = this.listens.get(normalizedPathString)!;\n      listen = map.get(queryId);\n      map.delete(queryId);\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n    return listen;\n  }\n\n  private onAuthRevoked_(statusCode: string, explanation: string) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n      if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n\n        // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onAppCheckRevoked_(statusCode: string, explanation: string) {\n    log('App check token revoked: ' + statusCode + '/' + explanation);\n    this.appCheckToken_ = null;\n    this.forceTokenRefresh_ = true;\n    // Note: We don't close the connection as the developer may not have\n    // enforcement enabled. The backend closes connections with enforcements.\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAppCheckTokenCount_++;\n      if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        this.appCheckTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onSecurityDebugPacket_(body: { [k: string]: unknown }) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log(\n          'FIREBASE: ' + (body['msg'] as string).replace('\\n', '\\nFIREBASE: ')\n        );\n      }\n    }\n  }\n\n  private restoreState_() {\n    //Re-authenticate ourselves if we have a credential stored.\n    this.tryAuth();\n    this.tryAppCheck();\n\n    // Puts depend on having received the corresponding data update from the server before they complete, so we must\n    // make sure to send listens before puts.\n    for (const queries of this.listens.values()) {\n      for (const listenSpec of queries.values()) {\n        this.sendListen_(listenSpec);\n      }\n    }\n\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      const request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(\n        request.action,\n        request.pathString,\n        request.data,\n        request.onComplete\n      );\n    }\n\n    for (let i = 0; i < this.outstandingGets_.length; i++) {\n      if (this.outstandingGets_[i]) {\n        this.sendGet_(i);\n      }\n    }\n  }\n\n  /**\n   * Sends client stats for first connection\n   */\n  private sendConnectStats_() {\n    const stats: { [k: string]: number } = {};\n\n    let clientName = 'js';\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n    this.reportStats(stats);\n  }\n\n  private shouldReconnect_(): boolean {\n    const online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\nimport { Index } from './indexes/Index';\n\n/**\n * Node is an interface defining the common functionality for nodes in\n * a DataSnapshot.\n *\n * @interface\n */\nexport interface Node {\n  /**\n   * Whether this node is a leaf node.\n   * @returns Whether this is a leaf node.\n   */\n  isLeafNode(): boolean;\n\n  /**\n   * Gets the priority of the node.\n   * @returns The priority of the node.\n   */\n  getPriority(): Node;\n\n  /**\n   * Returns a duplicate node with the new priority.\n   * @param newPriorityNode - New priority to set for the node.\n   * @returns Node with new priority.\n   */\n  updatePriority(newPriorityNode: Node): Node;\n\n  /**\n   * Returns the specified immediate child, or null if it doesn't exist.\n   * @param childName - The name of the child to retrieve.\n   * @returns The retrieved child, or an empty node.\n   */\n  getImmediateChild(childName: string): Node;\n\n  /**\n   * Returns a child by path, or null if it doesn't exist.\n   * @param path - The path of the child to retrieve.\n   * @returns The retrieved child or an empty node.\n   */\n  getChild(path: Path): Node;\n\n  /**\n   * Returns the name of the child immediately prior to the specified childNode, or null.\n   * @param childName - The name of the child to find the predecessor of.\n   * @param childNode - The node to find the predecessor of.\n   * @param index - The index to use to determine the predecessor\n   * @returns The name of the predecessor child, or null if childNode is the first child.\n   */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string | null;\n\n  /**\n   * Returns a duplicate node, with the specified immediate child updated.\n   * Any value in the node will be removed.\n   * @param childName - The name of the child to update.\n   * @param newChildNode - The new child node\n   * @returns The updated node.\n   */\n  updateImmediateChild(childName: string, newChildNode: Node): Node;\n\n  /**\n   * Returns a duplicate node, with the specified child updated.  Any value will\n   * be removed.\n   * @param path - The path of the child to update.\n   * @param newChildNode - The new child node, which may be an empty node\n   * @returns The updated node.\n   */\n  updateChild(path: Path, newChildNode: Node): Node;\n\n  /**\n   * True if the immediate child specified exists\n   */\n  hasChild(childName: string): boolean;\n\n  /**\n   * @returns True if this node has no value or children.\n   */\n  isEmpty(): boolean;\n\n  /**\n   * @returns The number of children of this node.\n   */\n  numChildren(): number;\n\n  /**\n   * Calls action for each child.\n   * @param action - Action to be called for\n   * each child.  It's passed the child name and the child node.\n   * @returns The first truthy value return by action, or the last falsey one\n   */\n  forEachChild(index: Index, action: (a: string, b: Node) => void): unknown;\n\n  /**\n   * @param exportFormat - True for export format (also wire protocol format).\n   * @returns Value of this node as JSON.\n   */\n  val(exportFormat?: boolean): unknown;\n\n  /**\n   * @returns hash representing the node contents.\n   */\n  hash(): string;\n\n  /**\n   * @param other - Another node\n   * @returns -1 for less than, 0 for equal, 1 for greater than other\n   */\n  compareTo(other: Node): number;\n\n  /**\n   * @returns Whether or not this snapshot equals other\n   */\n  equals(other: Node): boolean;\n\n  /**\n   * @returns This node, with the specified index now available\n   */\n  withIndex(indexDefinition: Index): Node;\n\n  isIndexed(indexDefinition: Index): boolean;\n}\n\nexport class NamedNode {\n  constructor(public name: string, public node: Node) {}\n\n  static Wrap(name: string, node: Node) {\n    return new NamedNode(name, node);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Comparator } from '../../util/SortedMap';\nimport { MIN_NAME } from '../../util/util';\nimport { Node, NamedNode } from '../Node';\n\nexport abstract class Index {\n  abstract compare(a: NamedNode, b: NamedNode): number;\n\n  abstract isDefinedOn(node: Node): boolean;\n\n  /**\n   * @returns A standalone comparison function for\n   * this index\n   */\n  getCompare(): Comparator<NamedNode> {\n    return this.compare.bind(this);\n  }\n\n  /**\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\n   *\n   *\n   * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    const oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    const newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  }\n\n  /**\n   * @returns a node wrapper that will sort equal to or less than\n   * any other node wrapper, using this index\n   */\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @returns a node wrapper that will sort greater than or equal to\n   * any other node wrapper, using this index\n   */\n  abstract maxPost(): NamedNode;\n\n  abstract makePost(indexValue: unknown, name: string): NamedNode;\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  abstract toString(): string;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { ChildrenNode } from '../ChildrenNode';\nimport { Node, NamedNode } from '../Node';\n\nimport { Index } from './Index';\n\nlet __EMPTY_NODE: ChildrenNode;\n\nexport class KeyIndex extends Index {\n  static get __EMPTY_NODE() {\n    return __EMPTY_NODE;\n  }\n\n  static set __EMPTY_NODE(val) {\n    __EMPTY_NODE = val;\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    return nameCompare(a.name, b.name);\n  }\n  isDefinedOn(node: Node): boolean {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return false; // The key for a node never changes.\n  }\n  minPost() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  }\n\n  makePost(indexValue: string, name: string): NamedNode {\n    assert(\n      typeof indexValue === 'string',\n      'KeyIndex indexValue must always be a string.'\n    );\n    // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.key';\n  }\n}\n\nexport const KEY_INDEX = new KeyIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implementation of an immutable SortedMap using a Left-leaning\n * Red-Black Tree, adapted from the implementation in Mugs\n * (http://mads379.github.com/mugs/) by Mads Hartmann Jensen\n * (mads379\\@gmail.com).\n *\n * Original paper on Left-leaning Red-Black Trees:\n *   http://www.cs.princeton.edu/~rs/talks/LLRB/LLRB.pdf\n *\n * Invariant 1: No red node has a red child\n * Invariant 2: Every leaf path has the same number of black nodes\n * Invariant 3: Only the left child can be red (left leaning)\n */\n\n// TODO: There are some improvements I'd like to make to improve memory / perf:\n//  * Create two prototypes, LLRedNode and LLBlackNode, instead of storing a\n//    color property in every node.\n// TODO: It would also be good (and possibly necessary) to create a base\n// interface for LLRBNode and LLRBEmptyNode.\n\nexport type Comparator<K> = (key1: K, key2: K) => number;\n\n/**\n * An iterator over an LLRBNode.\n */\nexport class SortedMapIterator<K, V, T> {\n  private nodeStack_: Array<LLRBNode<K, V> | LLRBEmptyNode<K, V>> = [];\n\n  /**\n   * @param node - Node to iterate.\n   * @param isReverse_ - Whether or not to iterate in reverse\n   */\n  constructor(\n    node: LLRBNode<K, V> | LLRBEmptyNode<K, V>,\n    startKey: K | null,\n    comparator: Comparator<K>,\n    private isReverse_: boolean,\n    private resultGenerator_: ((k: K, v: V) => T) | null = null\n  ) {\n    let cmp = 1;\n    while (!node.isEmpty()) {\n      node = node as LLRBNode<K, V>;\n      cmp = startKey ? comparator(node.key, startKey) : 1;\n      // flip the comparison if we're going in reverse\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  getNext(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    let node = this.nodeStack_.pop();\n    let result: T;\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = { key: node.key, value: node.value } as unknown as T;\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  }\n\n  hasNext(): boolean {\n    return this.nodeStack_.length > 0;\n  }\n\n  peek(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    const node = this.nodeStack_[this.nodeStack_.length - 1];\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return { key: node.key, value: node.value } as unknown as T;\n    }\n  }\n}\n\n/**\n * Represents a node in a Left-leaning Red-Black tree.\n */\nexport class LLRBNode<K, V> {\n  color: boolean;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n\n  /**\n   * @param key - Key associated with this node.\n   * @param value - Value associated with this node.\n   * @param color - Whether this node is red.\n   * @param left - Left child.\n   * @param right - Right child.\n   */\n  constructor(\n    public key: K,\n    public value: V,\n    color: boolean | null,\n    left?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ) {\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left =\n      left != null ? left : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n    this.right =\n      right != null ? right : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n  }\n\n  static RED = true;\n  static BLACK = false;\n\n  /**\n   * Returns a copy of the current node, optionally replacing pieces of it.\n   *\n   * @param key - New key for the node, or null.\n   * @param value - New value for the node, or null.\n   * @param color - New color for the node, or null.\n   * @param left - New left child for the node, or null.\n   * @param right - New right child for the node, or null.\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBNode<K, V> {\n    return new LLRBNode(\n      key != null ? key : this.key,\n      value != null ? value : this.value,\n      color != null ? color : this.color,\n      left != null ? left : this.left,\n      right != null ? right : this.right\n    );\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return this.left.count() + 1 + this.right.count();\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   *   node.  If it returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return (\n      this.left.inorderTraversal(action) ||\n      !!action(this.key, this.value) ||\n      this.right.inorderTraversal(action)\n    );\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return (\n      this.right.reverseTraversal(action) ||\n      action(this.key, this.value) ||\n      this.left.reverseTraversal(action)\n    );\n  }\n\n  /**\n   * @returns The minimum node in the tree.\n   */\n  private min_(): LLRBNode<K, V> {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return (this.left as LLRBNode<K, V>).min_();\n    }\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  minKey(): K {\n    return this.min_().key;\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  maxKey(): K {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  }\n\n  /**\n   * @param key - Key to insert.\n   * @param value - Value to insert.\n   * @param comparator - Comparator.\n   * @returns New tree, with the key/value added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    const cmp = comparator(key, n.key);\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        n.right.insert(key, value, comparator)\n      );\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns New tree, with the minimum key removed.\n   */\n  private removeMin_(): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n    }\n    let n: LLRBNode<K, V> = this;\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n    n = n.copy(null, null, null, (n.left as LLRBNode<K, V>).removeMin_(), null);\n    return n.fixUp_();\n  }\n\n  /**\n   * @param key - The key of the item to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with the specified item removed.\n   */\n  remove(\n    key: K,\n    comparator: Comparator<K>\n  ): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    let n, smallest;\n    n = this;\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n        } else {\n          smallest = (n.right as LLRBNode<K, V>).min_();\n          n = n.copy(\n            smallest.key,\n            smallest.value,\n            null,\n            null,\n            (n.right as LLRBNode<K, V>).removeMin_()\n          );\n        }\n      }\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns Whether this is a RED node.\n   */\n  isRed_(): boolean {\n    return this.color;\n  }\n\n  /**\n   * @returns New tree after performing any needed rotations.\n   */\n  private fixUp_(): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedLeft.\n   */\n  private moveRedLeft_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.right.left.isRed_()) {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        (n.right as LLRBNode<K, V>).rotateRight_()\n      );\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedRight.\n   */\n  private moveRedRight_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after rotateLeft.\n   */\n  private rotateLeft_(): LLRBNode<K, V> {\n    const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns New tree, after rotateRight.\n   */\n  private rotateRight_(): LLRBNode<K, V> {\n    const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns Newt ree, after colorFlip.\n   */\n  private colorFlip_(): LLRBNode<K, V> {\n    const left = this.left.copy(null, null, !this.left.color, null, null);\n    const right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  }\n\n  /**\n   * For testing.\n   *\n   * @returns True if all is well.\n   */\n  private checkMaxDepth_(): boolean {\n    const blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  }\n\n  check_(): number {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error(\n        'Red node has red child(' + this.key + ',' + this.value + ')'\n      );\n    }\n    if (this.right.isRed_()) {\n      throw new Error(\n        'Right child of (' + this.key + ',' + this.value + ') is red'\n      );\n    }\n    const blackDepth = this.left.check_();\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  }\n}\n\n/**\n * Represents an empty node (a leaf node in the Red-Black Tree).\n */\nexport class LLRBEmptyNode<K, V> {\n  key: K;\n  value: V;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  color: boolean;\n\n  /**\n   * Returns a copy of the current node.\n   *\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key/value added.\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @param comparator - Comparator.\n   * @returns New tree, with item added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    return new LLRBNode(key, value, null);\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with item removed.\n   */\n  remove(key: K, comparator: Comparator<K>): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return 0;\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return true;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return false;\n  }\n\n  minKey(): null {\n    return null;\n  }\n\n  maxKey(): null {\n    return null;\n  }\n\n  check_(): number {\n    return 0;\n  }\n\n  /**\n   * @returns Whether this node is red.\n   */\n  isRed_() {\n    return false;\n  }\n}\n\n/**\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\n * tree.\n */\nexport class SortedMap<K, V> {\n  /**\n   * Always use the same empty node, to reduce memory.\n   */\n  static EMPTY_NODE = new LLRBEmptyNode();\n\n  /**\n   * @param comparator_ - Key comparator.\n   * @param root_ - Optional root node for the map.\n   */\n  constructor(\n    private comparator_: Comparator<K>,\n    private root_:\n      | LLRBNode<K, V>\n      | LLRBEmptyNode<K, V> = SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>\n  ) {}\n\n  /**\n   * Returns a copy of the map, with the specified key/value added or replaced.\n   * (TODO: We should perhaps rename this method to 'put')\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @returns New map, with item added.\n   */\n  insert(key: K, value: V): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .insert(key, value, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns a copy of the map, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @returns New map, with item removed.\n   */\n  remove(key: K): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .remove(key, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns the value of the node with the given key, or null.\n   *\n   * @param key - The key to look up.\n   * @returns The value of the node with the given key, or null if the\n   * key doesn't exist.\n   */\n  get(key: K): V | null {\n    let cmp;\n    let node = this.root_;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\n   * @param key - The key to find the predecessor of\n   * @returns The predecessor key.\n   */\n  getPredecessorKey(key: K): K | null {\n    let cmp,\n      node = this.root_,\n      rightParent = null;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error(\n      'Attempted to find predecessor key for a nonexistent key.  What gives?'\n    );\n  }\n\n  /**\n   * @returns True if the map is empty.\n   */\n  isEmpty(): boolean {\n    return this.root_.isEmpty();\n  }\n\n  /**\n   * @returns The total number of nodes in the map.\n   */\n  count(): number {\n    return this.root_.count();\n  }\n\n  /**\n   * @returns The minimum key in the map.\n   */\n  minKey(): K | null {\n    return this.root_.minKey();\n  }\n\n  /**\n   * @returns The maximum key in the map.\n   */\n  maxKey(): K | null {\n    return this.root_.maxKey();\n  }\n\n  /**\n   * Traverses the map in key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return this.root_.inorderTraversal(action);\n  }\n\n  /**\n   * Traverses the map in reverse key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns True if the traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return this.root_.reverseTraversal(action);\n  }\n\n  /**\n   * Returns an iterator over the SortedMap.\n   * @returns The iterator.\n   */\n  getIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getReverseIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n\n  getReverseIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../util/util';\n\nimport { NamedNode } from './Node';\n\nexport function NAME_ONLY_COMPARATOR(left: NamedNode, right: NamedNode) {\n  return nameCompare(left.name, right.name);\n}\n\nexport function NAME_COMPARATOR(left: string, right: string) {\n  return nameCompare(left, right);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { doubleToIEEE754String } from '../util/util';\n\nimport { Node } from './Node';\n\nlet MAX_NODE: Node;\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport const priorityHashText = function (priority: string | number): string {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n\n/**\n * Validates that a priority snapshot Node is valid.\n */\nexport const validatePriorityNode = function (priorityNode: Node) {\n  if (priorityNode.isLeafNode()) {\n    const val = priorityNode.val();\n    assert(\n      typeof val === 'string' ||\n        typeof val === 'number' ||\n        (typeof val === 'object' && contains(val as Indexable, '.sv')),\n      'Priority must be a string or number.'\n    );\n  } else {\n    assert(\n      priorityNode === MAX_NODE || priorityNode.isEmpty(),\n      'priority of unexpected type.'\n    );\n  }\n  // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n  assert(\n    priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(),\n    \"Priority nodes can't have a priority of their own.\"\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport {\n  Path,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\nimport { doubleToIEEE754String, sha1 } from '../util/util';\n\nimport { ChildrenNodeConstructor } from './ChildrenNode';\nimport { Index } from './indexes/Index';\nimport { Node } from './Node';\nimport { priorityHashText, validatePriorityNode } from './snap';\n\nlet __childrenNodeConstructor: ChildrenNodeConstructor;\n\n/**\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\n * implements Node and stores the value of the node (a string,\n * number, or boolean) accessible via getValue().\n */\nexport class LeafNode implements Node {\n  static set __childrenNodeConstructor(val: ChildrenNodeConstructor) {\n    __childrenNodeConstructor = val;\n  }\n\n  static get __childrenNodeConstructor() {\n    return __childrenNodeConstructor;\n  }\n\n  /**\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\n   * the same type, the comparison falls back to their value\n   */\n  static VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n\n  private lazyHash_: string | null = null;\n\n  /**\n   * @param value_ - The value to store in this leaf node. The object type is\n   * possible in the event of a deferred value\n   * @param priorityNode_ - The priority of this node.\n   */\n  constructor(\n    private readonly value_: string | number | boolean | Indexable,\n    private priorityNode_: Node = LeafNode.__childrenNodeConstructor.EMPTY_NODE\n  ) {\n    assert(\n      this.value_ !== undefined && this.value_ !== null,\n      \"LeafNode shouldn't be created with null/undefined value.\"\n    );\n\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return true;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    return new LeafNode(this.value_, newPriorityNode);\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    if (pathIsEmpty(path)) {\n      return this;\n    } else if (pathGetFront(path) === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n  hasChild(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(childName: string, childNode: Node): null {\n    return null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(\n        childName,\n        newChildNode\n      ).updatePriority(this.priorityNode_);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(\n        front !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n\n      return this.updateImmediateChild(\n        front,\n        LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(\n          pathPopFront(path),\n          newChildNode\n        )\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return 0;\n  }\n\n  /** @inheritDoc */\n  forEachChild(index: Index, action: (s: string, n: Node) => void): boolean {\n    return false;\n  }\n  val(exportFormat?: boolean): {} {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.priorityNode_.isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.priorityNode_.val() as number | string) +\n          ':';\n      }\n\n      const type = typeof this.value_;\n      toHash += type + ':';\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_ as number);\n      } else {\n        toHash += this.value_;\n      }\n      this.lazyHash_ = sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /**\n   * Returns the value of the leaf node.\n   * @returns The value of the node.\n   */\n  getValue(): Indexable | string | number | boolean {\n    return this.value_;\n  }\n  compareTo(other: Node): number {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other as LeafNode);\n    }\n  }\n\n  /**\n   * Comparison specifically for two leaf nodes\n   */\n  private compareToLeafNode_(otherLeaf: LeafNode): number {\n    const otherLeafType = typeof otherLeaf.value_;\n    const thisLeafType = typeof this.value_;\n    const otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    const thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  }\n  withIndex(): Node {\n    return this;\n  }\n  isIndexed(): boolean {\n    return true;\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      const otherLeaf = other as LeafNode;\n      return (\n        this.value_ === otherLeaf.value_ &&\n        this.priorityNode_.equals(otherLeaf.priorityNode_)\n      );\n    } else {\n      return false;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { LeafNode } from '../LeafNode';\nimport { NamedNode, Node } from '../Node';\n\nimport { Index } from './Index';\n\nlet nodeFromJSON: (a: unknown) => Node;\nlet MAX_NODE: Node;\n\nexport function setNodeFromJSON(val: (a: unknown) => Node) {\n  nodeFromJSON = val;\n}\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport class PriorityIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const aPriority = a.node.getPriority();\n    const bPriority = b.node.getPriority();\n    const indexCmp = aPriority.compareTo(bPriority);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getPriority().isEmpty();\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE));\n  }\n\n  makePost(indexValue: unknown, name: string): NamedNode {\n    const priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.priority';\n  }\n}\n\nexport const PRIORITY_INDEX = new PriorityIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LLRBNode, SortedMap } from '../util/SortedMap';\n\nimport { NamedNode } from './Node';\n\nconst LOG_2 = Math.log(2);\n\nclass Base12Num {\n  count: number;\n  private current_: number;\n  private bits_: number;\n\n  constructor(length: number) {\n    const logBase2 = (num: number) =>\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parseInt((Math.log(num) / LOG_2) as any, 10);\n    const bitMask = (bits: number) => parseInt(Array(bits + 1).join('1'), 2);\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    const mask = bitMask(this.count);\n    this.bits_ = (length + 1) & mask;\n  }\n\n  nextBitIsOne(): boolean {\n    //noinspection JSBitwiseOperatorUsage\n    const result = !(this.bits_ & (0x1 << this.current_));\n    this.current_--;\n    return result;\n  }\n}\n\n/**\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\n * function\n *\n * Uses the algorithm described in the paper linked here:\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\n *\n * @param childList - Unsorted list of children\n * @param cmp - The comparison method to be used\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\n * type is not NamedNode\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\n */\nexport const buildChildSet = function <K, V>(\n  childList: NamedNode[],\n  cmp: (a: NamedNode, b: NamedNode) => number,\n  keyFn?: (a: NamedNode) => K,\n  mapSortFn?: (a: K, b: K) => number\n): SortedMap<K, V> {\n  childList.sort(cmp);\n\n  const buildBalancedTree = function (\n    low: number,\n    high: number\n  ): LLRBNode<K, V> | null {\n    const length = high - low;\n    let namedNode: NamedNode;\n    let key: K;\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        null,\n        null\n      );\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const middle = parseInt((length / 2) as any, 10) + low;\n      const left = buildBalancedTree(low, middle);\n      const right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        left,\n        right\n      );\n    }\n  };\n\n  const buildFrom12Array = function (base12: Base12Num): LLRBNode<K, V> {\n    let node: LLRBNode<K, V> = null;\n    let root = null;\n    let index = childList.length;\n\n    const buildPennant = function (chunkSize: number, color: boolean) {\n      const low = index - chunkSize;\n      const high = index;\n      index -= chunkSize;\n      const childTree = buildBalancedTree(low + 1, high);\n      const namedNode = childList[low];\n      const key: K = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      attachPennant(\n        new LLRBNode(\n          key,\n          namedNode.node as unknown as V,\n          color,\n          null,\n          childTree\n        )\n      );\n    };\n\n    const attachPennant = function (pennant: LLRBNode<K, V>) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (let i = 0; i < base12.count; ++i) {\n      const isOne = base12.nextBitIsOne();\n      // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n      const chunkSize = Math.pow(2, base12.count - (i + 1));\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n    return root;\n  };\n\n  const base12 = new Base12Num(childList.length);\n  const root = buildFrom12Array(base12);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return new SortedMap<K, V>(mapSortFn || (cmp as any), root);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains, map, safeGet } from '@firebase/util';\n\nimport { SortedMap } from '../util/SortedMap';\n\nimport { buildChildSet } from './childSet';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX } from './indexes/KeyIndex';\nimport { PRIORITY_INDEX } from './indexes/PriorityIndex';\nimport { NamedNode, Node } from './Node';\n\nlet _defaultIndexMap: IndexMap;\n\nconst fallbackObject = {};\n\nexport class IndexMap {\n  /**\n   * The default IndexMap for nodes without a priority\n   */\n  static get Default(): IndexMap {\n    assert(\n      fallbackObject && PRIORITY_INDEX,\n      'ChildrenNode.ts has not been loaded'\n    );\n    _defaultIndexMap =\n      _defaultIndexMap ||\n      new IndexMap(\n        { '.priority': fallbackObject },\n        { '.priority': PRIORITY_INDEX }\n      );\n    return _defaultIndexMap;\n  }\n\n  constructor(\n    private indexes_: {\n      [k: string]: SortedMap<NamedNode, Node> | /*FallbackType*/ object;\n    },\n    private indexSet_: { [k: string]: Index }\n  ) {}\n\n  get(indexKey: string): SortedMap<NamedNode, Node> | null {\n    const sortedMap = safeGet(this.indexes_, indexKey);\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  }\n\n  hasIndex(indexDefinition: Index): boolean {\n    return contains(this.indexSet_, indexDefinition.toString());\n  }\n\n  addIndex(\n    indexDefinition: Index,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    assert(\n      indexDefinition !== KEY_INDEX,\n      \"KeyIndex always exists and isn't meant to be added to the IndexMap.\"\n    );\n    const childList = [];\n    let sawIndexedValue = false;\n    const iter = existingChildren.getIterator(NamedNode.Wrap);\n    let next = iter.getNext();\n    while (next) {\n      sawIndexedValue =\n        sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n    let newIndex;\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n    const indexName = indexDefinition.toString();\n    const newIndexSet = { ...this.indexSet_ };\n    newIndexSet[indexName] = indexDefinition;\n    const newIndexes = { ...this.indexes_ };\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  }\n\n  /**\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\n   */\n  addToIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>, indexName: string) => {\n        const index = safeGet(this.indexSet_, indexName);\n        assert(index, 'Missing index implementation for ' + indexName);\n        if (indexedChildren === fallbackObject) {\n          // Check to see if we need to index everything\n          if (index.isDefinedOn(namedNode.node)) {\n            // We need to build this index\n            const childList = [];\n            const iter = existingChildren.getIterator(NamedNode.Wrap);\n            let next = iter.getNext();\n            while (next) {\n              if (next.name !== namedNode.name) {\n                childList.push(next);\n              }\n              next = iter.getNext();\n            }\n            childList.push(namedNode);\n            return buildChildSet(childList, index.getCompare());\n          } else {\n            // No change, this remains a fallback\n            return fallbackObject;\n          }\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          let newChildren = indexedChildren;\n          if (existingSnap) {\n            newChildren = newChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          }\n          return newChildren.insert(namedNode, namedNode.node);\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n\n  /**\n   * Create a new IndexMap instance with the given value removed\n   */\n  removeFromIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>) => {\n        if (indexedChildren === fallbackObject) {\n          // This is the fallback. Just return it, nothing to do in this case\n          return indexedChildren;\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          if (existingSnap) {\n            return indexedChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          } else {\n            // No record of this child\n            return indexedChildren;\n          }\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathGetLength, pathPopFront } from '../util/Path';\nimport { SortedMap, SortedMapIterator } from '../util/SortedMap';\nimport { MAX_NAME, MIN_NAME, sha1 } from '../util/util';\n\nimport { NAME_COMPARATOR } from './comparators';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX, KeyIndex } from './indexes/KeyIndex';\nimport {\n  PRIORITY_INDEX,\n  setMaxNode as setPriorityMaxNode\n} from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\nimport { priorityHashText, setMaxNode, validatePriorityNode } from './snap';\n\nexport interface ChildrenNodeConstructor {\n  new (\n    children_: SortedMap<string, Node>,\n    priorityNode_: Node | null,\n    indexMap_: IndexMap\n  ): ChildrenNode;\n  EMPTY_NODE: ChildrenNode;\n}\n\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\nlet EMPTY_NODE: ChildrenNode;\n\n/**\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\n * (i.e. nodes with children).  It implements Node and stores the\n * list of children in the children property, sorted by child name.\n */\nexport class ChildrenNode implements Node {\n  private lazyHash_: string | null = null;\n\n  static get EMPTY_NODE(): ChildrenNode {\n    return (\n      EMPTY_NODE ||\n      (EMPTY_NODE = new ChildrenNode(\n        new SortedMap<string, Node>(NAME_COMPARATOR),\n        null,\n        IndexMap.Default\n      ))\n    );\n  }\n\n  /**\n   * @param children_ - List of children of this node..\n   * @param priorityNode_ - The priority of this node (as a snapshot node).\n   */\n  constructor(\n    private readonly children_: SortedMap<string, Node>,\n    private readonly priorityNode_: Node | null,\n    private indexMap_: IndexMap\n  ) {\n    /**\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\n     * class instead of an empty ChildrenNode.\n     */\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(\n        !this.priorityNode_ || this.priorityNode_.isEmpty(),\n        'An empty node cannot have a priority'\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_ || EMPTY_NODE;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      const child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(pathPopFront(path));\n  }\n\n  /** @inheritDoc */\n  hasChild(childName: string): boolean {\n    return this.children_.get(childName) !== null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      const namedNode = new NamedNode(childName, newChildNode);\n      let newChildren, newIndexMap;\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(\n          namedNode,\n          this.children_\n        );\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      const newPriority = newChildren.isEmpty()\n        ? EMPTY_NODE\n        : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(\n        pathGetFront(path) !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n      const newImmediateChild = this.getImmediateChild(front).updateChild(\n        pathPopFront(path),\n        newChildNode\n      );\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return this.children_.isEmpty();\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return this.children_.count();\n  }\n\n  private static INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n\n  /** @inheritDoc */\n  val(exportFormat?: boolean): object {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    const obj: { [k: string]: unknown } = {};\n    let numKeys = 0,\n      maxKey = 0,\n      allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, (key: string, childNode: Node) => {\n      obj[key] = childNode.val(exportFormat);\n\n      numKeys++;\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      const array: unknown[] = [];\n      // eslint-disable-next-line guard-for-in\n      for (const key in obj) {\n        array[key as unknown as number] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n      return obj;\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.getPriority().isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.getPriority().val() as string | number) +\n          ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n        const childHash = childNode.hash();\n        if (childHash !== '') {\n          toHash += ':' + key + ':' + childHash;\n        }\n      });\n\n      this.lazyHash_ = toHash === '' ? '' : sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      const predecessor = idx.getPredecessorKey(\n        new NamedNode(childName, childNode)\n      );\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  }\n\n  getFirstChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  }\n\n  getFirstChild(indexDefinition: Index): NamedNode | null {\n    const minKey = this.getFirstChildName(indexDefinition);\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Given an index, return the key name of the largest value we have, according to that index\n   */\n  getLastChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  }\n\n  getLastChild(indexDefinition: Index): NamedNode | null {\n    const maxKey = this.getLastChildName(indexDefinition);\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  }\n  forEachChild(\n    index: Index,\n    action: (key: string, node: Node) => boolean | void\n  ): boolean {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      return idx.inorderTraversal(wrappedNode => {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  }\n\n  getIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  }\n\n  getIteratorFrom(\n    startPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getIteratorFrom(startPost, key => key);\n    } else {\n      const iterator = this.children_.getIteratorFrom(\n        startPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n\n  getReverseIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getReverseIteratorFrom(\n      indexDefinition.maxPost(),\n      indexDefinition\n    );\n  }\n\n  getReverseIteratorFrom(\n    endPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, key => {\n        return key;\n      });\n    } else {\n      const iterator = this.children_.getReverseIteratorFrom(\n        endPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n  compareTo(other: ChildrenNode): number {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  }\n  withIndex(indexDefinition: Index): Node {\n    if (\n      indexDefinition === KEY_INDEX ||\n      this.indexMap_.hasIndex(indexDefinition)\n    ) {\n      return this;\n    } else {\n      const newIndexMap = this.indexMap_.addIndex(\n        indexDefinition,\n        this.children_\n      );\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  }\n  isIndexed(index: Index): boolean {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      const otherChildrenNode = other as ChildrenNode;\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (\n        this.children_.count() === otherChildrenNode.children_.count()\n      ) {\n        const thisIter = this.getIterator(PRIORITY_INDEX);\n        const otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        let thisCurrent = thisIter.getNext();\n        let otherCurrent = otherIter.getNext();\n        while (thisCurrent && otherCurrent) {\n          if (\n            thisCurrent.name !== otherCurrent.name ||\n            !thisCurrent.node.equals(otherCurrent.node)\n          ) {\n            return false;\n          }\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  /**\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\n   * instead.\n   *\n   */\n  private resolveIndex_(\n    indexDefinition: Index\n  ): SortedMap<NamedNode, Node> | null {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  }\n}\n\nexport class MaxNode extends ChildrenNode {\n  constructor() {\n    super(\n      new SortedMap<string, Node>(NAME_COMPARATOR),\n      ChildrenNode.EMPTY_NODE,\n      IndexMap.Default\n    );\n  }\n\n  compareTo(other: Node): number {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n\n  equals(other: Node): boolean {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  }\n\n  getPriority(): MaxNode {\n    return this;\n  }\n\n  getImmediateChild(childName: string): ChildrenNode {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n}\n\n/**\n * Marker that will sort higher than any other snapshot.\n */\nexport const MAX_NODE = new MaxNode();\n\n/**\n * Document NamedNode extensions\n */\ndeclare module './Node' {\n  interface NamedNode {\n    MIN: NamedNode;\n    MAX: NamedNode;\n  }\n}\n\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE)\n  }\n});\n\n/**\n * Reference Extensions\n */\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE);\nsetPriorityMaxNode(MAX_NODE);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { SortedMap } from '../util/SortedMap';\nimport { each } from '../util/util';\n\nimport { ChildrenNode } from './ChildrenNode';\nimport { buildChildSet } from './childSet';\nimport { NAME_COMPARATOR, NAME_ONLY_COMPARATOR } from './comparators';\nimport { PRIORITY_INDEX, setNodeFromJSON } from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\n\nconst USE_HINZE = true;\n\n/**\n * Constructs a snapshot node representing the passed JSON and returns it.\n * @param json - JSON to create a node for.\n * @param priority - Optional priority to use.  This will be ignored if the\n * passed JSON contains a .priority property.\n */\nexport function nodeFromJSON(\n  json: unknown | null,\n  priority: unknown = null\n): Node {\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(\n    priority === null ||\n      typeof priority === 'string' ||\n      typeof priority === 'number' ||\n      (typeof priority === 'object' && '.sv' in (priority as object)),\n    'Invalid priority type found: ' + typeof priority\n  );\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  }\n\n  // Valid leaf nodes include non-objects or server-value wrapper objects\n  if (typeof json !== 'object' || '.sv' in json) {\n    const jsonLeaf = json as string | number | boolean | Indexable;\n    return new LeafNode(jsonLeaf, nodeFromJSON(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    const children: NamedNode[] = [];\n    let childrenHavePriority = false;\n    const hinzeJsonObj = json;\n    each(hinzeJsonObj, (key, child) => {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        const childNode = nodeFromJSON(child);\n        if (!childNode.isEmpty()) {\n          childrenHavePriority =\n            childrenHavePriority || !childNode.getPriority().isEmpty();\n          children.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    const childSet = buildChildSet(\n      children,\n      NAME_ONLY_COMPARATOR,\n      namedNode => namedNode.name,\n      NAME_COMPARATOR\n    ) as SortedMap<string, Node>;\n    if (childrenHavePriority) {\n      const sortedChildSet = buildChildSet(\n        children,\n        PRIORITY_INDEX.getCompare()\n      );\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        new IndexMap(\n          { '.priority': sortedChildSet },\n          { '.priority': PRIORITY_INDEX }\n        )\n      );\n    } else {\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        IndexMap.Default\n      );\n    }\n  } else {\n    let node: Node = ChildrenNode.EMPTY_NODE;\n    each(json, (key: string, childData: unknown) => {\n      if (contains(json as object, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          const childNode = nodeFromJSON(childData);\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node = node.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n\n    return node.updatePriority(nodeFromJSON(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathIsEmpty, pathSlice } from '../../util/Path';\nimport { MAX_NAME, nameCompare } from '../../util/util';\nimport { ChildrenNode, MAX_NODE } from '../ChildrenNode';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class PathIndex extends Index {\n  constructor(private indexPath_: Path) {\n    super();\n\n    assert(\n      !pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority',\n      \"Can't create PathIndex with empty path or .priority key\"\n    );\n  }\n\n  protected extractChild(snap: Node): Node {\n    return snap.getChild(this.indexPath_);\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getChild(this.indexPath_).isEmpty();\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    const aChild = this.extractChild(a.node);\n    const bChild = this.extractChild(b.node);\n    const indexCmp = aChild.compareTo(bChild);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    const node = ChildrenNode.EMPTY_NODE.updateChild(\n      this.indexPath_,\n      valueNode\n    );\n    return new NamedNode(name, node);\n  }\n  maxPost(): NamedNode {\n    const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\n    return new NamedNode(MAX_NAME, node);\n  }\n  toString(): string {\n    return pathSlice(this.indexPath_, 0).join('/');\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../../util/util';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class ValueIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const indexCmp = a.node.compareTo(b.node);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return true;\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.equals(newNode);\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MAX;\n  }\n\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, valueNode);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.value';\n  }\n}\n\nexport const VALUE_INDEX = new ValueIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nexport const enum ChangeType {\n  /** Event type for a child added */\n  CHILD_ADDED = 'child_added',\n  /** Event type for a child removed */\n  CHILD_REMOVED = 'child_removed',\n  /** Event type for a child changed */\n  CHILD_CHANGED = 'child_changed',\n  /** Event type for a child moved */\n  CHILD_MOVED = 'child_moved',\n  /** Event type for a value change */\n  VALUE = 'value'\n}\n\nexport interface Change {\n  /** @param type - The event type */\n  type: ChangeType;\n  /** @param snapshotNode - The data */\n  snapshotNode: Node;\n  /** @param childName - The name for this child, if it's a child even */\n  childName?: string;\n  /** @param oldSnap - Used for intermediate processing of child changed events */\n  oldSnap?: Node;\n  /**  * @param prevName - The name for the previous child, if applicable */\n  prevName?: string | null;\n}\n\nexport function changeValue(snapshotNode: Node): Change {\n  return { type: ChangeType.VALUE, snapshotNode };\n}\n\nexport function changeChildAdded(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_ADDED, snapshotNode, childName };\n}\n\nexport function changeChildRemoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_REMOVED, snapshotNode, childName };\n}\n\nexport function changeChildChanged(\n  childName: string,\n  snapshotNode: Node,\n  oldSnap: Node\n): Change {\n  return {\n    type: ChangeType.CHILD_CHANGED,\n    snapshotNode,\n    childName,\n    oldSnap\n  };\n}\n\nexport function changeChildMoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_MOVED, snapshotNode, childName };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\n\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\n */\nexport class IndexedFilter implements NodeFilter {\n  constructor(private readonly index_: Index) {}\n\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    assert(\n      snap.isIndexed(this.index_),\n      'A node must be indexed if only a child is updated'\n    );\n    const oldChild = snap.getImmediateChild(key);\n    // Check if anything actually changed.\n    if (\n      oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))\n    ) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(\n            changeChildRemoved(key, oldChild)\n          );\n        } else {\n          assert(\n            snap.isLeafNode(),\n            'A child remove without an old child only makes sense on a leaf node'\n          );\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(\n          changeChildChanged(key, newChild, oldChild)\n        );\n      }\n    }\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(\n              changeChildRemoved(key, childNode)\n            );\n          }\n        });\n      }\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (oldSnap.hasChild(key)) {\n            const oldChild = oldSnap.getImmediateChild(key);\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(\n                changeChildChanged(key, childNode, oldChild)\n              );\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(\n              changeChildAdded(key, childNode)\n            );\n          }\n        });\n      }\n    }\n    return newSnap.withIndex(this.index_);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  }\n  filtersNodes(): boolean {\n    return false;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NamedNode, Node } from '../../../core/snap/Node';\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Path } from '../../util/Path';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\n */\nexport class RangedFilter implements NodeFilter {\n  private indexedFilter_: IndexedFilter;\n\n  private index_: Index;\n\n  private startPost_: NamedNode;\n\n  private endPost_: NamedNode;\n\n  private startIsInclusive_: boolean;\n\n  private endIsInclusive_: boolean;\n\n  constructor(params: QueryParams) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n    this.startIsInclusive_ = !params.startAfterSet_;\n    this.endIsInclusive_ = !params.endBeforeSet_;\n  }\n\n  getStartPost(): NamedNode {\n    return this.startPost_;\n  }\n\n  getEndPost(): NamedNode {\n    return this.endPost_;\n  }\n\n  matches(node: NamedNode): boolean {\n    const isWithinStart = this.startIsInclusive_\n      ? this.index_.compare(this.getStartPost(), node) <= 0\n      : this.index_.compare(this.getStartPost(), node) < 0;\n    const isWithinEnd = this.endIsInclusive_\n      ? this.index_.compare(node, this.getEndPost()) <= 0\n      : this.index_.compare(node, this.getEndPost()) < 0;\n    return isWithinStart && isWithinEnd;\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    return this.indexedFilter_.updateChild(\n      snap,\n      key,\n      newChild,\n      affectedPath,\n      source,\n      optChangeAccumulator\n    );\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n    let filtered = newSnap.withIndex(this.index_);\n    // Don't support priorities on queries\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    const self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(\n      oldSnap,\n      filtered,\n      optChangeAccumulator\n    );\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.indexedFilter_;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private static getStartPost_(params: QueryParams): NamedNode {\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  }\n\n  private static getEndPost_(params: QueryParams): NamedNode {\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { NamedNode, Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\nimport { RangedFilter } from './RangedFilter';\n\n/**\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\n */\nexport class LimitedFilter implements NodeFilter {\n  private readonly rangedFilter_: RangedFilter;\n\n  private readonly index_: Index;\n\n  private readonly limit_: number;\n\n  private readonly reverse_: boolean;\n\n  private readonly startIsInclusive_: boolean;\n\n  private readonly endIsInclusive_: boolean;\n\n  constructor(params: QueryParams) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n    this.startIsInclusive_ = !params.startAfterSet_;\n    this.endIsInclusive_ = !params.endBeforeSet_;\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_\n        .getIndexedFilter()\n        .updateChild(\n          snap,\n          key,\n          newChild,\n          affectedPath,\n          source,\n          optChangeAccumulator\n        );\n    } else {\n      return this.fullLimitUpdateChild_(\n        snap,\n        key,\n        newChild,\n        source,\n        optChangeAccumulator\n      );\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    let filtered;\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (\n        this.limit_ * 2 < newSnap.numChildren() &&\n        newSnap.isIndexed(this.index_)\n      ) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n        // anchor to the startPost, endPost, or last element as appropriate\n        let iterator;\n        if (this.reverse_) {\n          iterator = (newSnap as ChildrenNode).getReverseIteratorFrom(\n            this.rangedFilter_.getEndPost(),\n            this.index_\n          );\n        } else {\n          iterator = (newSnap as ChildrenNode).getIteratorFrom(\n            this.rangedFilter_.getStartPost(),\n            this.index_\n          );\n        }\n        let count = 0;\n        while (iterator.hasNext() && count < this.limit_) {\n          const next = iterator.getNext();\n          if (!this.withinDirectionalStart(next)) {\n            // if we have not reached the start, skip to the next element\n            continue;\n          } else if (!this.withinDirectionalEnd(next)) {\n            // if we have reached the end, stop adding elements\n            break;\n          } else {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_);\n        // Don't support priorities on queries\n        filtered = filtered.updatePriority(\n          ChildrenNode.EMPTY_NODE\n        ) as ChildrenNode;\n\n        let iterator;\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n        } else {\n          iterator = filtered.getIterator(this.index_);\n        }\n\n        let count = 0;\n        while (iterator.hasNext()) {\n          const next = iterator.getNext();\n          const inRange =\n            count < this.limit_ &&\n            this.withinDirectionalStart(next) &&\n            this.withinDirectionalEnd(next);\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(\n              next.name,\n              ChildrenNode.EMPTY_NODE\n            );\n          }\n        }\n      }\n    }\n    return this.rangedFilter_\n      .getIndexedFilter()\n      .updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.rangedFilter_.getIndexedFilter();\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private fullLimitUpdateChild_(\n    snap: Node,\n    childKey: string,\n    childSnap: Node,\n    source: CompleteChildSource,\n    changeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    // TODO: rename all cache stuff etc to general snap terminology\n    let cmp;\n    if (this.reverse_) {\n      const indexCmp = this.index_.getCompare();\n      cmp = (a: NamedNode, b: NamedNode) => indexCmp(b, a);\n    } else {\n      cmp = this.index_.getCompare();\n    }\n    const oldEventCache = snap as ChildrenNode;\n    assert(oldEventCache.numChildren() === this.limit_, '');\n    const newChildNamedNode = new NamedNode(childKey, childSnap);\n    const windowBoundary = this.reverse_\n      ? oldEventCache.getFirstChild(this.index_)\n      : (oldEventCache.getLastChild(this.index_) as NamedNode);\n    const inRange = this.rangedFilter_.matches(newChildNamedNode);\n    if (oldEventCache.hasChild(childKey)) {\n      const oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      let nextChild = source.getChildAfterChild(\n        this.index_,\n        windowBoundary,\n        this.reverse_\n      );\n      while (\n        nextChild != null &&\n        (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))\n      ) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(\n          this.index_,\n          nextChild,\n          this.reverse_\n        );\n      }\n      const compareNext =\n        nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      const remainsInWindow =\n        inRange && !childSnap.isEmpty() && compareNext >= 0;\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildChanged(childKey, childSnap, oldChildSnap)\n          );\n        }\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(childKey, oldChildSnap)\n          );\n        }\n        const newEventCache = oldEventCache.updateImmediateChild(\n          childKey,\n          ChildrenNode.EMPTY_NODE\n        );\n        const nextChildInRange =\n          nextChild != null && this.rangedFilter_.matches(nextChild);\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(\n              changeChildAdded(nextChild.name, nextChild.node)\n            );\n          }\n          return newEventCache.updateImmediateChild(\n            nextChild.name,\n            nextChild.node\n          );\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(windowBoundary.name, windowBoundary.node)\n          );\n          changeAccumulator.trackChildChange(\n            changeChildAdded(childKey, childSnap)\n          );\n        }\n        return oldEventCache\n          .updateImmediateChild(childKey, childSnap)\n          .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  }\n\n  private withinDirectionalStart = (node: NamedNode) =>\n    this.reverse_ ? this.withinEndPost(node) : this.withinStartPost(node);\n\n  private withinDirectionalEnd = (node: NamedNode) =>\n    this.reverse_ ? this.withinStartPost(node) : this.withinEndPost(node);\n\n  private withinStartPost = (node: NamedNode) => {\n    const compareRes = this.index_.compare(\n      this.rangedFilter_.getStartPost(),\n      node\n    );\n    return this.startIsInclusive_ ? compareRes <= 0 : compareRes < 0;\n  };\n\n  private withinEndPost = (node: NamedNode) => {\n    const compareRes = this.index_.compare(\n      node,\n      this.rangedFilter_.getEndPost()\n    );\n    return this.endIsInclusive_ ? compareRes <= 0 : compareRes < 0;\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, stringify } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { PathIndex } from '../snap/indexes/PathIndex';\nimport { PRIORITY_INDEX, PriorityIndex } from '../snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../snap/indexes/ValueIndex';\nimport { MAX_NAME, MIN_NAME } from '../util/util';\n\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { LimitedFilter } from './filter/LimitedFilter';\nimport { NodeFilter } from './filter/NodeFilter';\nimport { RangedFilter } from './filter/RangedFilter';\n\n/**\n * Wire Protocol Constants\n */\nconst enum WIRE_PROTOCOL_CONSTANTS {\n  INDEX_START_VALUE = 'sp',\n  INDEX_START_NAME = 'sn',\n  INDEX_START_IS_INCLUSIVE = 'sin',\n  INDEX_END_VALUE = 'ep',\n  INDEX_END_NAME = 'en',\n  INDEX_END_IS_INCLUSIVE = 'ein',\n  LIMIT = 'l',\n  VIEW_FROM = 'vf',\n  VIEW_FROM_LEFT = 'l',\n  VIEW_FROM_RIGHT = 'r',\n  INDEX = 'i'\n}\n\n/**\n * REST Query Constants\n */\nconst enum REST_QUERY_CONSTANTS {\n  ORDER_BY = 'orderBy',\n  PRIORITY_INDEX = '$priority',\n  VALUE_INDEX = '$value',\n  KEY_INDEX = '$key',\n  START_AFTER = 'startAfter',\n  START_AT = 'startAt',\n  END_AT = 'endAt',\n  END_BEFORE = 'endBefore',\n  LIMIT_TO_FIRST = 'limitToFirst',\n  LIMIT_TO_LAST = 'limitToLast'\n}\n\n/**\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\n * user-facing API level, so it is not done here.\n *\n * @internal\n */\nexport class QueryParams {\n  limitSet_ = false;\n  startSet_ = false;\n  startNameSet_ = false;\n  startAfterSet_ = false; // can only be true if startSet_ is true\n  endSet_ = false;\n  endNameSet_ = false;\n  endBeforeSet_ = false; // can only be true if endSet_ is true\n  limit_ = 0;\n  viewFrom_ = '';\n  indexStartValue_: unknown | null = null;\n  indexStartName_ = '';\n  indexEndValue_: unknown | null = null;\n  indexEndName_ = '';\n  index_: PriorityIndex = PRIORITY_INDEX;\n\n  hasStart(): boolean {\n    return this.startSet_;\n  }\n\n  /**\n   * @returns True if it would return from left.\n   */\n  isViewFromLeft(): boolean {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n    }\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true\n   */\n  getIndexStartValue(): unknown {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true.\n   * Returns the starting key name for the range defined by these query parameters\n   */\n  getIndexStartName(): string {\n    assert(this.startSet_, 'Only valid if start has been set');\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  }\n\n  hasEnd(): boolean {\n    return this.endSet_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   */\n  getIndexEndValue(): unknown {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   * Returns the end key name for the range defined by these query parameters\n   */\n  getIndexEndName(): string {\n    assert(this.endSet_, 'Only valid if end has been set');\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  }\n\n  hasLimit(): boolean {\n    return this.limitSet_;\n  }\n\n  /**\n   * @returns True if a limit has been set and it has been explicitly anchored\n   */\n  hasAnchoredLimit(): boolean {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  }\n\n  /**\n   * Only valid to call if hasLimit() returns true\n   */\n  getLimit(): number {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  }\n\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  loadsAllData(): boolean {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  }\n\n  isDefault(): boolean {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  }\n\n  copy(): QueryParams {\n    const copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.startAfterSet_ = this.startAfterSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.endBeforeSet_ = this.endBeforeSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  }\n}\n\nexport function queryParamsGetNodeFilter(queryParams: QueryParams): NodeFilter {\n  if (queryParams.loadsAllData()) {\n    return new IndexedFilter(queryParams.getIndex());\n  } else if (queryParams.hasLimit()) {\n    return new LimitedFilter(queryParams);\n  } else {\n    return new RangedFilter(queryParams);\n  }\n}\n\nexport function queryParamsLimit(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = '';\n  return newParams;\n}\n\nexport function queryParamsLimitToFirst(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n  return newParams;\n}\n\nexport function queryParamsLimitToLast(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n  return newParams;\n}\n\nexport function queryParamsStartAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.startSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexStartValue_ = indexValue;\n  if (key != null) {\n    newParams.startNameSet_ = true;\n    newParams.indexStartName_ = key;\n  } else {\n    newParams.startNameSet_ = false;\n    newParams.indexStartName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsStartAfter(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX || !!key) {\n    params = queryParamsStartAt(queryParams, indexValue, key);\n  } else {\n    params = queryParamsStartAt(queryParams, indexValue, MAX_NAME);\n  }\n  params.startAfterSet_ = true;\n  return params;\n}\n\nexport function queryParamsEndAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.endSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexEndValue_ = indexValue;\n  if (key !== undefined) {\n    newParams.endNameSet_ = true;\n    newParams.indexEndName_ = key;\n  } else {\n    newParams.endNameSet_ = false;\n    newParams.indexEndName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsEndBefore(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX || !!key) {\n    params = queryParamsEndAt(queryParams, indexValue, key);\n  } else {\n    params = queryParamsEndAt(queryParams, indexValue, MIN_NAME);\n  }\n  params.endBeforeSet_ = true;\n  return params;\n}\n\nexport function queryParamsOrderBy(\n  queryParams: QueryParams,\n  index: Index\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.index_ = index;\n  return newParams;\n}\n\n/**\n * Returns a set of REST query string parameters representing this query.\n *\n * @returns query string parameters\n */\nexport function queryParamsToRestQueryStringParameters(\n  queryParams: QueryParams\n): Record<string, string | number> {\n  const qs: Record<string, string | number> = {};\n\n  if (queryParams.isDefault()) {\n    return qs;\n  }\n\n  let orderBy;\n  if (queryParams.index_ === PRIORITY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.PRIORITY_INDEX;\n  } else if (queryParams.index_ === VALUE_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.VALUE_INDEX;\n  } else if (queryParams.index_ === KEY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.KEY_INDEX;\n  } else {\n    assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\n    orderBy = queryParams.index_.toString();\n  }\n  qs[REST_QUERY_CONSTANTS.ORDER_BY] = stringify(orderBy);\n\n  if (queryParams.startSet_) {\n    const startParam = queryParams.startAfterSet_\n      ? REST_QUERY_CONSTANTS.START_AFTER\n      : REST_QUERY_CONSTANTS.START_AT;\n    qs[startParam] = stringify(queryParams.indexStartValue_);\n    if (queryParams.startNameSet_) {\n      qs[startParam] += ',' + stringify(queryParams.indexStartName_);\n    }\n  }\n\n  if (queryParams.endSet_) {\n    const endParam = queryParams.endBeforeSet_\n      ? REST_QUERY_CONSTANTS.END_BEFORE\n      : REST_QUERY_CONSTANTS.END_AT;\n    qs[endParam] = stringify(queryParams.indexEndValue_);\n    if (queryParams.endNameSet_) {\n      qs[endParam] += ',' + stringify(queryParams.indexEndName_);\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    if (queryParams.isViewFromLeft()) {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_FIRST] = queryParams.limit_;\n    } else {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_LAST] = queryParams.limit_;\n    }\n  }\n\n  return qs;\n}\n\nexport function queryParamsGetQueryObject(\n  queryParams: QueryParams\n): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  if (queryParams.startSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] =\n      queryParams.indexStartValue_;\n    if (queryParams.startNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] =\n        queryParams.indexStartName_;\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_IS_INCLUSIVE] =\n      !queryParams.startAfterSet_;\n  }\n  if (queryParams.endSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = queryParams.indexEndValue_;\n    if (queryParams.endNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = queryParams.indexEndName_;\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_IS_INCLUSIVE] =\n      !queryParams.endBeforeSet_;\n  }\n  if (queryParams.limitSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = queryParams.limit_;\n    let viewFrom = queryParams.viewFrom_;\n    if (viewFrom === '') {\n      if (queryParams.isViewFromLeft()) {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n      } else {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n      }\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n  }\n  // For now, priority index is the default, so we only specify if it's some other index\n  if (queryParams.index_ !== PRIORITY_INDEX) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = queryParams.index_.toString();\n  }\n  return obj;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  jsonEval,\n  safeGet,\n  querystring,\n  Deferred\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { logWrapper, warn } from './util/util';\nimport { QueryContext } from './view/EventRegistration';\nimport { queryParamsToRestQueryStringParameters } from './view/QueryParams';\n\n/**\n * An implementation of ServerActions that communicates with the server via REST requests.\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\n * persistent connection (using WebSockets or long-polling)\n */\nexport class ReadonlyRestClient extends ServerActions {\n  reportStats(stats: { [k: string]: unknown }): void {\n    throw new Error('Method not implemented.');\n  }\n\n  /** @private {function(...[*])} */\n  private log_: (...args: unknown[]) => void = logWrapper('p:rest:');\n\n  /**\n   * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\n   * that's been removed. :-/\n   */\n  private listens_: { [k: string]: object } = {};\n\n  static getListenId_(query: QueryContext, tag?: number | null): string {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(\n        query._queryParams.isDefault(),\n        \"should have a tag if it's not a default query.\"\n      );\n      return query._path.toString();\n    }\n  }\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider\n  ) {\n    super();\n  }\n\n  /** @inheritDoc */\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\n\n    // Mark this listener so we can tell if it's removed.\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    const thisListen = {};\n    this.listens_[listenId] = thisListen;\n\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\n        }\n\n        if (safeGet(this.listens_, listenId) === thisListen) {\n          let status;\n          if (!error) {\n            status = 'ok';\n          } else if (error === 401) {\n            status = 'permission_denied';\n          } else {\n            status = 'rest_error:' + error;\n          }\n\n          onComplete(status, null);\n        }\n      }\n    );\n  }\n\n  /** @inheritDoc */\n  unlisten(query: QueryContext, tag: number | null) {\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  }\n\n  get(query: QueryContext): Promise<string> {\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    const pathString = query._path.toString();\n\n    const deferred = new Deferred<string>();\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(\n            pathString,\n            data,\n            /*isMerge=*/ false,\n            /*tag=*/ null\n          );\n          deferred.resolve(data as string);\n        } else {\n          deferred.reject(new Error(data as string));\n        }\n      }\n    );\n    return deferred.promise;\n  }\n\n  /** @inheritDoc */\n  refreshAuthToken(token: string) {\n    // no-op since we just always call getToken.\n  }\n\n  /**\n   * Performs a REST request to the given path, with the provided query string parameters,\n   * and any auth credentials we have.\n   */\n  private restRequest_(\n    pathString: string,\n    queryStringParameters: { [k: string]: string | number } = {},\n    callback: ((a: number | null, b?: unknown) => void) | null\n  ) {\n    queryStringParameters['format'] = 'export';\n\n    return Promise.all([\n      this.authTokenProvider_.getToken(/*forceRefresh=*/ false),\n      this.appCheckTokenProvider_.getToken(/*forceRefresh=*/ false)\n    ]).then(([authToken, appCheckToken]) => {\n      if (authToken && authToken.accessToken) {\n        queryStringParameters['auth'] = authToken.accessToken;\n      }\n      if (appCheckToken && appCheckToken.token) {\n        queryStringParameters['ac'] = appCheckToken.token;\n      }\n\n      const url =\n        (this.repoInfo_.secure ? 'https://' : 'http://') +\n        this.repoInfo_.host +\n        pathString +\n        '?' +\n        'ns=' +\n        this.repoInfo_.namespace +\n        querystring(queryStringParameters);\n\n      this.log_('Sending REST request for ' + url);\n      const xhr = new XMLHttpRequest();\n      xhr.onreadystatechange = () => {\n        if (callback && xhr.readyState === 4) {\n          this.log_(\n            'REST Response for ' + url + ' received. status:',\n            xhr.status,\n            'response:',\n            xhr.responseText\n          );\n          let res = null;\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = jsonEval(xhr.responseText);\n            } catch (e) {\n              warn(\n                'Failed to parse JSON response for ' +\n                  url +\n                  ': ' +\n                  xhr.responseText\n              );\n            }\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn(\n                'Got unsuccessful REST response for ' +\n                  url +\n                  ' Status: ' +\n                  xhr.status\n              );\n            }\n            callback(xhr.status);\n          }\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url, /*asynchronous=*/ true);\n      xhr.send();\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\n\n/**\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\n */\nexport class SnapshotHolder {\n  private rootNode_: Node = ChildrenNode.EMPTY_NODE;\n\n  getNode(path: Path): Node {\n    return this.rootNode_.getChild(path);\n  }\n\n  updateSnapshot(path: Path, newSnapshotNode: Node) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { Node } from './snap/Node';\nimport { Path, pathGetFront, pathIsEmpty, pathPopFront } from './util/Path';\n\n/**\n * Helper class to store a sparse set of snapshots.\n */\nexport interface SparseSnapshotTree {\n  value: Node | null;\n  readonly children: Map<string, SparseSnapshotTree>;\n}\n\nexport function newSparseSnapshotTree(): SparseSnapshotTree {\n  return {\n    value: null,\n    children: new Map()\n  };\n}\n\n/**\n * Gets the node stored at the given path if one exists.\n * Only seems to be used in tests.\n *\n * @param path - Path to look up snapshot for.\n * @returns The retrieved node, or null.\n */\nexport function sparseSnapshotTreeFind(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): Node | null {\n  if (sparseSnapshotTree.value != null) {\n    return sparseSnapshotTree.value.getChild(path);\n  } else if (!pathIsEmpty(path) && sparseSnapshotTree.children.size > 0) {\n    const childKey = pathGetFront(path);\n    path = pathPopFront(path);\n    if (sparseSnapshotTree.children.has(childKey)) {\n      const childTree = sparseSnapshotTree.children.get(childKey);\n      return sparseSnapshotTreeFind(childTree, path);\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\n\n/**\n * Stores the given node at the specified path. If there is already a node\n * at a shallower path, it merges the new data into that snapshot node.\n *\n * @param path - Path to look up snapshot for.\n * @param data - The new data, or null.\n */\nexport function sparseSnapshotTreeRemember(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path,\n  data: Node\n): void {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = data;\n    sparseSnapshotTree.children.clear();\n  } else if (sparseSnapshotTree.value !== null) {\n    sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\n  } else {\n    const childKey = pathGetFront(path);\n    if (!sparseSnapshotTree.children.has(childKey)) {\n      sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\n    }\n\n    const child = sparseSnapshotTree.children.get(childKey);\n    path = pathPopFront(path);\n    sparseSnapshotTreeRemember(child, path, data);\n  }\n}\n\n/**\n * Purge the data at path from the cache.\n *\n * @param path - Path to look up snapshot for.\n * @returns True if this node should now be removed.\n */\nexport function sparseSnapshotTreeForget(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): boolean {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = null;\n    sparseSnapshotTree.children.clear();\n    return true;\n  } else {\n    if (sparseSnapshotTree.value !== null) {\n      if (sparseSnapshotTree.value.isLeafNode()) {\n        // We're trying to forget a node that doesn't exist\n        return false;\n      } else {\n        const value = sparseSnapshotTree.value;\n        sparseSnapshotTree.value = null;\n\n        value.forEachChild(PRIORITY_INDEX, (key, tree) => {\n          sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\n        });\n\n        return sparseSnapshotTreeForget(sparseSnapshotTree, path);\n      }\n    } else if (sparseSnapshotTree.children.size > 0) {\n      const childKey = pathGetFront(path);\n      path = pathPopFront(path);\n      if (sparseSnapshotTree.children.has(childKey)) {\n        const safeToRemove = sparseSnapshotTreeForget(\n          sparseSnapshotTree.children.get(childKey),\n          path\n        );\n        if (safeToRemove) {\n          sparseSnapshotTree.children.delete(childKey);\n        }\n      }\n\n      return sparseSnapshotTree.children.size === 0;\n    } else {\n      return true;\n    }\n  }\n}\n\n/**\n * Recursively iterates through all of the stored tree and calls the\n * callback on each one.\n *\n * @param prefixPath - Path to look up node for.\n * @param func - The function to invoke for each tree.\n */\nexport function sparseSnapshotTreeForEachTree(\n  sparseSnapshotTree: SparseSnapshotTree,\n  prefixPath: Path,\n  func: (a: Path, b: Node) => unknown\n): void {\n  if (sparseSnapshotTree.value !== null) {\n    func(prefixPath, sparseSnapshotTree.value);\n  } else {\n    sparseSnapshotTreeForEachChild(sparseSnapshotTree, (key, tree) => {\n      const path = new Path(prefixPath.toString() + '/' + key);\n      sparseSnapshotTreeForEachTree(tree, path, func);\n    });\n  }\n}\n\n/**\n * Iterates through each immediate child and triggers the callback.\n * Only seems to be used in tests.\n *\n * @param func - The function to invoke for each child.\n */\nexport function sparseSnapshotTreeForEachChild(\n  sparseSnapshotTree: SparseSnapshotTree,\n  func: (a: string, b: SparseSnapshotTree) => void\n): void {\n  sparseSnapshotTree.children.forEach((tree, key) => {\n    func(key, tree);\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\n\n/**\n * Returns the delta from the previous call to get stats.\n *\n * @param collection_ - The collection to \"listen\" to.\n */\nexport class StatsListener {\n  private last_: { [k: string]: number } | null = null;\n\n  constructor(private collection_: StatsCollection) {}\n\n  get(): { [k: string]: number } {\n    const newStats = this.collection_.get();\n\n    const delta = { ...newStats };\n    if (this.last_) {\n      each(this.last_, (stat: string, value: number) => {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n    this.last_ = newStats;\n\n    return delta;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\nimport { ServerActions } from '../ServerActions';\nimport { setTimeoutNonBlocking, each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\nimport { StatsListener } from './StatsListener';\n\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nconst FIRST_STATS_MIN_TIME = 10 * 1000;\nconst FIRST_STATS_MAX_TIME = 30 * 1000;\n\n// We'll continue to report stats on average every 5 minutes.\nconst REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n\nexport class StatsReporter {\n  private statsListener_: StatsListener;\n  statsToReport_: { [k: string]: boolean } = {};\n\n  constructor(collection: StatsCollection, private server_: ServerActions) {\n    this.statsListener_ = new StatsListener(collection);\n\n    const timeout =\n      FIRST_STATS_MIN_TIME +\n      (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  private reportStats_() {\n    const stats = this.statsListener_.get();\n    const reportedStats: typeof stats = {};\n    let haveStatsToReport = false;\n\n    each(stats, (stat: string, value: number) => {\n      if (value > 0 && contains(this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    }\n\n    // queue our next run.\n    setTimeoutNonBlocking(\n      this.reportStats_.bind(this),\n      Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL)\n    );\n  }\n}\n\nexport function statsReporterIncludeStat(\n  reporter: StatsReporter,\n  stat: string\n) {\n  reporter.statsToReport_[stat] = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\n/**\n *\n * @enum\n */\nexport enum OperationType {\n  OVERWRITE,\n  MERGE,\n  ACK_USER_WRITE,\n  LISTEN_COMPLETE\n}\n\n/**\n * @interface\n */\nexport interface Operation {\n  source: OperationSource;\n\n  type: OperationType;\n\n  path: Path;\n\n  operationForChild(childName: string): Operation | null;\n}\n\nexport interface OperationSource {\n  fromUser: boolean;\n  fromServer: boolean;\n  queryId: string | null;\n  tagged: boolean;\n}\n\nexport function newOperationSourceUser(): OperationSource {\n  return {\n    fromUser: true,\n    fromServer: false,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServer(): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServerTaggedQuery(\n  queryId: string\n): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId,\n    tagged: true\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { newOperationSourceUser, Operation, OperationType } from './Operation';\n\nexport class AckUserWrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.ACK_USER_WRITE;\n\n  /** @inheritDoc */\n  source = newOperationSourceUser();\n\n  /**\n   * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\n   */\n  constructor(\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public affectedTree: ImmutableTree<boolean>,\n    /** @inheritDoc */ public revert: boolean\n  ) {}\n  operationForChild(childName: string): AckUserWrite {\n    if (!pathIsEmpty(this.path)) {\n      assert(\n        pathGetFront(this.path) === childName,\n        'operationForChild called for unrelated child.'\n      );\n      return new AckUserWrite(\n        pathPopFront(this.path),\n        this.affectedTree,\n        this.revert\n      );\n    } else if (this.affectedTree.value != null) {\n      assert(\n        this.affectedTree.children.isEmpty(),\n        'affectedTree should not have overlapping affected paths.'\n      );\n      // All child locations are affected as well; just return same operation.\n      return this;\n    } else {\n      const childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(newEmptyPath(), childTree, this.revert);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class ListenComplete implements Operation {\n  /** @inheritDoc */\n  type = OperationType.LISTEN_COMPLETE;\n\n  constructor(public source: OperationSource, public path: Path) {}\n\n  operationForChild(childName: string): ListenComplete {\n    if (pathIsEmpty(this.path)) {\n      return new ListenComplete(this.source, newEmptyPath());\n    } else {\n      return new ListenComplete(this.source, pathPopFront(this.path));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class Overwrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.OVERWRITE;\n\n  constructor(\n    public source: OperationSource,\n    public path: Path,\n    public snap: Node\n  ) {}\n\n  operationForChild(childName: string): Overwrite {\n    if (pathIsEmpty(this.path)) {\n      return new Overwrite(\n        this.source,\n        newEmptyPath(),\n        this.snap.getImmediateChild(childName)\n      );\n    } else {\n      return new Overwrite(this.source, pathPopFront(this.path), this.snap);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\nimport { Overwrite } from './Overwrite';\n\nexport class Merge implements Operation {\n  /** @inheritDoc */\n  type = OperationType.MERGE;\n\n  constructor(\n    /** @inheritDoc */ public source: OperationSource,\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public children: ImmutableTree<Node>\n  ) {}\n  operationForChild(childName: string): Operation {\n    if (pathIsEmpty(this.path)) {\n      const childTree = this.children.subtree(new Path(childName));\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, newEmptyPath(), childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, newEmptyPath(), childTree);\n      }\n    } else {\n      assert(\n        pathGetFront(this.path) === childName,\n        \"Can't get a merge for a child not on the path of the operation\"\n      );\n      return new Merge(this.source, pathPopFront(this.path), this.children);\n    }\n  }\n  toString(): string {\n    return (\n      'Operation(' +\n      this.path +\n      ': ' +\n      this.source.toString() +\n      ' merge: ' +\n      this.children.toString() +\n      ')'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\n\n/**\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\n * whether a node potentially had children removed due to a filter.\n */\nexport class CacheNode {\n  constructor(\n    private node_: Node,\n    private fullyInitialized_: boolean,\n    private filtered_: boolean\n  ) {}\n\n  /**\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\n   */\n  isFullyInitialized(): boolean {\n    return this.fullyInitialized_;\n  }\n\n  /**\n   * Returns whether this node is potentially missing children due to a filter applied to the node\n   */\n  isFiltered(): boolean {\n    return this.filtered_;\n  }\n\n  isCompleteForPath(path: Path): boolean {\n    if (pathIsEmpty(path)) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    const childKey = pathGetFront(path);\n    return this.isCompleteForChild(childKey);\n  }\n\n  isCompleteForChild(key: string): boolean {\n    return (\n      (this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key)\n    );\n  }\n\n  getNode(): Node {\n    return this.node_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assertionError } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\n\nimport { Change, ChangeType, changeChildMoved } from './Change';\nimport { Event } from './Event';\nimport { EventRegistration, QueryContext } from './EventRegistration';\n\n/**\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\n * for details.\n *\n */\nexport class EventGenerator {\n  index_: Index;\n\n  constructor(public query_: QueryContext) {\n    this.index_ = this.query_._queryParams.getIndex();\n  }\n}\n\n/**\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\n *\n * Notes:\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\n *    our index.\n *  - prevName will be calculated based on the index ordering.\n */\nexport function eventGeneratorGenerateEventsForChanges(\n  eventGenerator: EventGenerator,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistrations: EventRegistration[]\n): Event[] {\n  const events: Event[] = [];\n  const moves: Change[] = [];\n\n  changes.forEach(change => {\n    if (\n      change.type === ChangeType.CHILD_CHANGED &&\n      eventGenerator.index_.indexedValueChanged(\n        change.oldSnap as Node,\n        change.snapshotNode\n      )\n    ) {\n      moves.push(changeChildMoved(change.childName, change.snapshotNode));\n    }\n  });\n\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_REMOVED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_ADDED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_MOVED,\n    moves,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_CHANGED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.VALUE,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n\n  return events;\n}\n\n/**\n * Given changes of a single change type, generate the corresponding events.\n */\nfunction eventGeneratorGenerateEventsForType(\n  eventGenerator: EventGenerator,\n  events: Event[],\n  eventType: string,\n  changes: Change[],\n  registrations: EventRegistration[],\n  eventCache: Node\n) {\n  const filteredChanges = changes.filter(change => change.type === eventType);\n\n  filteredChanges.sort((a, b) =>\n    eventGeneratorCompareChanges(eventGenerator, a, b)\n  );\n  filteredChanges.forEach(change => {\n    const materializedChange = eventGeneratorMaterializeSingleChange(\n      eventGenerator,\n      change,\n      eventCache\n    );\n    registrations.forEach(registration => {\n      if (registration.respondsTo(change.type)) {\n        events.push(\n          registration.createEvent(materializedChange, eventGenerator.query_)\n        );\n      }\n    });\n  });\n}\n\nfunction eventGeneratorMaterializeSingleChange(\n  eventGenerator: EventGenerator,\n  change: Change,\n  eventCache: Node\n): Change {\n  if (change.type === 'value' || change.type === 'child_removed') {\n    return change;\n  } else {\n    change.prevName = eventCache.getPredecessorChildName(\n      change.childName,\n      change.snapshotNode,\n      eventGenerator.index_\n    );\n    return change;\n  }\n}\n\nfunction eventGeneratorCompareChanges(\n  eventGenerator: EventGenerator,\n  a: Change,\n  b: Change\n) {\n  if (a.childName == null || b.childName == null) {\n    throw assertionError('Should only compare child_ events.');\n  }\n  const aWrapped = new NamedNode(a.childName, a.snapshotNode);\n  const bWrapped = new NamedNode(b.childName, b.snapshotNode);\n  return eventGenerator.index_.compare(aWrapped, bWrapped);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nimport { CacheNode } from './CacheNode';\n\n/**\n * Stores the data we have cached for a view.\n *\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\n */\nexport interface ViewCache {\n  readonly eventCache: CacheNode;\n  readonly serverCache: CacheNode;\n}\n\nexport function newViewCache(\n  eventCache: CacheNode,\n  serverCache: CacheNode\n): ViewCache {\n  return { eventCache, serverCache };\n}\n\nexport function viewCacheUpdateEventSnap(\n  viewCache: ViewCache,\n  eventSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    new CacheNode(eventSnap, complete, filtered),\n    viewCache.serverCache\n  );\n}\n\nexport function viewCacheUpdateServerSnap(\n  viewCache: ViewCache,\n  serverSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    viewCache.eventCache,\n    new CacheNode(serverSnap, complete, filtered)\n  );\n}\n\nexport function viewCacheGetCompleteEventSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.eventCache.isFullyInitialized()\n    ? viewCache.eventCache.getNode()\n    : null;\n}\n\nexport function viewCacheGetCompleteServerSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.serverCache.isFullyInitialized()\n    ? viewCache.serverCache.getNode()\n    : null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './Path';\nimport { SortedMap } from './SortedMap';\nimport { each, stringCompare } from './util';\n\nlet emptyChildrenSingleton: SortedMap<string, ImmutableTree<null>>;\n\n/**\n * Singleton empty children collection.\n *\n */\nconst EmptyChildren = (): SortedMap<string, ImmutableTree<null>> => {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap<string, ImmutableTree<null>>(\n      stringCompare\n    );\n  }\n  return emptyChildrenSingleton;\n};\n\n/**\n * A tree with immutable elements.\n */\nexport class ImmutableTree<T> {\n  static fromObject<T>(obj: { [k: string]: T }): ImmutableTree<T> {\n    let tree: ImmutableTree<T> = new ImmutableTree<T>(null);\n    each(obj, (childPath: string, childSnap: T) => {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  }\n\n  constructor(\n    public readonly value: T | null,\n    public readonly children: SortedMap<\n      string,\n      ImmutableTree<T>\n    > = EmptyChildren()\n  ) {}\n\n  /**\n   * True if the value is empty and there are no children\n   */\n  isEmpty(): boolean {\n    return this.value === null && this.children.isEmpty();\n  }\n\n  /**\n   * Given a path and predicate, return the first node and the path to that node\n   * where the predicate returns true.\n   *\n   * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\n   * objects on the way back out, it may be better to pass down a pathSoFar obj.\n   *\n   * @param relativePath - The remainder of the path\n   * @param predicate - The predicate to satisfy to return a node\n   */\n  findRootMostMatchingPathAndValue(\n    relativePath: Path,\n    predicate: (a: T) => boolean\n  ): { path: Path; value: T } | null {\n    if (this.value != null && predicate(this.value)) {\n      return { path: newEmptyPath(), value: this.value };\n    } else {\n      if (pathIsEmpty(relativePath)) {\n        return null;\n      } else {\n        const front = pathGetFront(relativePath);\n        const child = this.children.get(front);\n        if (child !== null) {\n          const childExistingPathAndValue =\n            child.findRootMostMatchingPathAndValue(\n              pathPopFront(relativePath),\n              predicate\n            );\n          if (childExistingPathAndValue != null) {\n            const fullPath = pathChild(\n              new Path(front),\n              childExistingPathAndValue.path\n            );\n            return { path: fullPath, value: childExistingPathAndValue.value };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  /**\n   * Find, if it exists, the shortest subpath of the given path that points a defined\n   * value in the tree\n   */\n  findRootMostValueAndPath(\n    relativePath: Path\n  ): { path: Path; value: T } | null {\n    return this.findRootMostMatchingPathAndValue(relativePath, () => true);\n  }\n\n  /**\n   * @returns The subtree at the given path\n   */\n  subtree(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return this;\n    } else {\n      const front = pathGetFront(relativePath);\n      const childTree = this.children.get(front);\n      if (childTree !== null) {\n        return childTree.subtree(pathPopFront(relativePath));\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Sets a value at the specified path.\n   *\n   * @param relativePath - Path to set value at.\n   * @param toSet - Value to set.\n   * @returns Resulting tree.\n   */\n  set(relativePath: Path, toSet: T | null): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.set(pathPopFront(relativePath), toSet);\n      const newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Removes the value at the specified path.\n   *\n   * @param relativePath - Path to value to remove.\n   * @returns Resulting tree.\n   */\n  remove(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      if (this.children.isEmpty()) {\n        return new ImmutableTree<T>(null);\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        const newChild = child.remove(pathPopFront(relativePath));\n        let newChildren;\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n        if (this.value === null && newChildren.isEmpty()) {\n          return new ImmutableTree<T>(null);\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  }\n\n  /**\n   * Gets a value from the tree.\n   *\n   * @param relativePath - Path to get value for.\n   * @returns Value at path, or null.\n   */\n  get(relativePath: Path): T | null {\n    if (pathIsEmpty(relativePath)) {\n      return this.value;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        return child.get(pathPopFront(relativePath));\n      } else {\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Replace the subtree at the specified path with the given new tree.\n   *\n   * @param relativePath - Path to replace subtree for.\n   * @param newTree - New tree.\n   * @returns Resulting tree.\n   */\n  setTree(relativePath: Path, newTree: ImmutableTree<T>): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return newTree;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.setTree(pathPopFront(relativePath), newTree);\n      let newChildren;\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Performs a depth first fold on this tree. Transforms a tree into a single\n   * value, given a function that operates on the path to a node, an optional\n   * current value, and a map of child names to folded subtrees\n   */\n  fold<V>(fn: (path: Path, value: T, children: { [k: string]: V }) => V): V {\n    return this.fold_(newEmptyPath(), fn);\n  }\n\n  /**\n   * Recursive helper for public-facing fold() method\n   */\n  private fold_<V>(\n    pathSoFar: Path,\n    fn: (path: Path, value: T | null, children: { [k: string]: V }) => V\n  ): V {\n    const accum: { [k: string]: V } = {};\n    this.children.inorderTraversal(\n      (childKey: string, childTree: ImmutableTree<T>) => {\n        accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\n      }\n    );\n    return fn(pathSoFar, this.value, accum);\n  }\n\n  /**\n   * Find the first matching value on the given path. Return the result of applying f to it.\n   */\n  findOnPath<V>(path: Path, f: (path: Path, value: T) => V | null): V | null {\n    return this.findOnPath_(path, newEmptyPath(), f);\n  }\n\n  private findOnPath_<V>(\n    pathToFollow: Path,\n    pathSoFar: Path,\n    f: (path: Path, value: T) => V | null\n  ): V | null {\n    const result = this.value ? f(pathSoFar, this.value) : false;\n    if (result) {\n      return result;\n    } else {\n      if (pathIsEmpty(pathToFollow)) {\n        return null;\n      } else {\n        const front = pathGetFront(pathToFollow)!;\n        const nextChild = this.children.get(front);\n        if (nextChild) {\n          return nextChild.findOnPath_(\n            pathPopFront(pathToFollow),\n            pathChild(pathSoFar, front),\n            f\n          );\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  foreachOnPath(\n    path: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    return this.foreachOnPath_(path, newEmptyPath(), f);\n  }\n\n  private foreachOnPath_(\n    pathToFollow: Path,\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    if (pathIsEmpty(pathToFollow)) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n      const front = pathGetFront(pathToFollow);\n      const nextChild = this.children.get(front);\n      if (nextChild) {\n        return nextChild.foreachOnPath_(\n          pathPopFront(pathToFollow),\n          pathChild(currentRelativePath, front),\n          f\n        );\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Calls the given function for each node in the tree that has a value.\n   *\n   * @param f - A function to be called with the path from the root of the tree to\n   * a node, and the value at that node. Called in depth-first order.\n   */\n  foreach(f: (path: Path, value: T) => void) {\n    this.foreach_(newEmptyPath(), f);\n  }\n\n  private foreach_(\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ) {\n    this.children.inorderTraversal((childName, childTree) => {\n      childTree.foreach_(pathChild(currentRelativePath, childName), f);\n    });\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  }\n\n  foreachChild(f: (name: string, value: T) => void) {\n    this.children.inorderTraversal(\n      (childName: string, childTree: ImmutableTree<T>) => {\n        if (childTree.value) {\n          f(childName, childTree.value);\n        }\n      }\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathIsEmpty\n} from './util/Path';\nimport { each } from './util/util';\n\n/**\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\n * to reflect the write added.\n */\nexport class CompoundWrite {\n  constructor(public writeTree_: ImmutableTree<Node>) {}\n\n  static empty(): CompoundWrite {\n    return new CompoundWrite(new ImmutableTree(null));\n  }\n}\n\nexport function compoundWriteAddWrite(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  node: Node\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return new CompoundWrite(new ImmutableTree(node));\n  } else {\n    const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n    if (rootmost != null) {\n      const rootMostPath = rootmost.path;\n      let value = rootmost.value;\n      const relativePath = newRelativePath(rootMostPath, path);\n      value = value.updateChild(relativePath, node);\n      return new CompoundWrite(\n        compoundWrite.writeTree_.set(rootMostPath, value)\n      );\n    } else {\n      const subtree = new ImmutableTree(node);\n      const newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\n      return new CompoundWrite(newWriteTree);\n    }\n  }\n}\n\nexport function compoundWriteAddWrites(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  updates: { [name: string]: Node }\n): CompoundWrite {\n  let newWrite = compoundWrite;\n  each(updates, (childKey: string, node: Node) => {\n    newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\n  });\n  return newWrite;\n}\n\n/**\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\n * location, which must be removed by calling this method with that path.\n *\n * @param compoundWrite - The CompoundWrite to remove.\n * @param path - The path at which a write and all deeper writes should be removed\n * @returns The new CompoundWrite with the removed path\n */\nexport function compoundWriteRemoveWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return CompoundWrite.empty();\n  } else {\n    const newWriteTree = compoundWrite.writeTree_.setTree(\n      path,\n      new ImmutableTree<Node>(null)\n    );\n    return new CompoundWrite(newWriteTree);\n  }\n}\n\n/**\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\n * considered \"complete\".\n *\n * @param compoundWrite - The CompoundWrite to check.\n * @param path - The path to check for\n * @returns Whether there is a complete write at that path\n */\nexport function compoundWriteHasCompleteWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): boolean {\n  return compoundWriteGetCompleteNode(compoundWrite, path) != null;\n}\n\n/**\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\n * writes from deeper paths, but will return child nodes from a more shallow path.\n *\n * @param compoundWrite - The CompoundWrite to get the node from.\n * @param path - The path to get a complete write\n * @returns The node if complete at that path, or null otherwise.\n */\nexport function compoundWriteGetCompleteNode(\n  compoundWrite: CompoundWrite,\n  path: Path\n): Node | null {\n  const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n  if (rootmost != null) {\n    return compoundWrite.writeTree_\n      .get(rootmost.path)\n      .getChild(newRelativePath(rootmost.path, path));\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns all children that are guaranteed to be a complete overwrite.\n *\n * @param compoundWrite - The CompoundWrite to get children from.\n * @returns A list of all complete children.\n */\nexport function compoundWriteGetCompleteChildren(\n  compoundWrite: CompoundWrite\n): NamedNode[] {\n  const children: NamedNode[] = [];\n  const node = compoundWrite.writeTree_.value;\n  if (node != null) {\n    // If it's a leaf node, it has no children; so nothing to do.\n    if (!node.isLeafNode()) {\n      (node as ChildrenNode).forEachChild(\n        PRIORITY_INDEX,\n        (childName, childNode) => {\n          children.push(new NamedNode(childName, childNode));\n        }\n      );\n    }\n  } else {\n    compoundWrite.writeTree_.children.inorderTraversal(\n      (childName, childTree) => {\n        if (childTree.value != null) {\n          children.push(new NamedNode(childName, childTree.value));\n        }\n      }\n    );\n  }\n  return children;\n}\n\nexport function compoundWriteChildCompoundWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return compoundWrite;\n  } else {\n    const shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\n    if (shadowingNode != null) {\n      return new CompoundWrite(new ImmutableTree(shadowingNode));\n    } else {\n      return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\n    }\n  }\n}\n\n/**\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\n * @returns Whether this CompoundWrite is empty\n */\nexport function compoundWriteIsEmpty(compoundWrite: CompoundWrite): boolean {\n  return compoundWrite.writeTree_.isEmpty();\n}\n\n/**\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\n * node\n * @param node - The node to apply this CompoundWrite to\n * @returns The node with all writes applied\n */\nexport function compoundWriteApply(\n  compoundWrite: CompoundWrite,\n  node: Node\n): Node {\n  return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\n}\n\nfunction applySubtreeWrite(\n  relativePath: Path,\n  writeTree: ImmutableTree<Node>,\n  node: Node\n): Node {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    let priorityWrite = null;\n    writeTree.children.inorderTraversal((childKey, childTree) => {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        assert(\n          childTree.value !== null,\n          'Priority writes must always be leaf nodes'\n        );\n        priorityWrite = childTree.value;\n      } else {\n        node = applySubtreeWrite(\n          pathChild(relativePath, childKey),\n          childTree,\n          node\n        );\n      }\n    });\n    // If there was a priority write, we only apply it if the node is not empty\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite !== null) {\n      node = node.updateChild(\n        pathChild(relativePath, '.priority'),\n        priorityWrite\n      );\n    }\n    return node;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError, safeGet } from '@firebase/util';\n\nimport {\n  CompoundWrite,\n  compoundWriteAddWrite,\n  compoundWriteAddWrites,\n  compoundWriteApply,\n  compoundWriteChildCompoundWrite,\n  compoundWriteGetCompleteChildren,\n  compoundWriteGetCompleteNode,\n  compoundWriteHasCompleteWrite,\n  compoundWriteIsEmpty,\n  compoundWriteRemoveWrite\n} from './CompoundWrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Index } from './snap/indexes/Index';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathContains,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './util/Path';\nimport { each } from './util/util';\nimport { CacheNode } from './view/CacheNode';\n\n/**\n * Defines a single user-initiated write operation. May be the result of a set(), transaction(), or update() call. In\n * the case of a set() or transaction, snap wil be non-null.  In the case of an update(), children will be non-null.\n */\nexport interface WriteRecord {\n  writeId: number;\n  path: Path;\n  snap?: Node | null;\n  children?: { [k: string]: Node } | null;\n  visible: boolean;\n}\n\n/**\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\n *\n */\nexport function writeTreeChildWrites(\n  writeTree: WriteTree,\n  path: Path\n): WriteTreeRef {\n  return newWriteTreeRef(path, writeTree);\n}\n\n/**\n * Record a new overwrite from user code.\n *\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\n */\nexport function writeTreeAddOverwrite(\n  writeTree: WriteTree,\n  path: Path,\n  snap: Node,\n  writeId: number,\n  visible?: boolean\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older write on top of newer ones'\n  );\n  if (visible === undefined) {\n    visible = true;\n  }\n  writeTree.allWrites.push({\n    path,\n    snap,\n    writeId,\n    visible\n  });\n\n  if (visible) {\n    writeTree.visibleWrites = compoundWriteAddWrite(\n      writeTree.visibleWrites,\n      path,\n      snap\n    );\n  }\n  writeTree.lastWriteId = writeId;\n}\n\n/**\n * Record a new merge from user code.\n */\nexport function writeTreeAddMerge(\n  writeTree: WriteTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older merge on top of newer ones'\n  );\n  writeTree.allWrites.push({\n    path,\n    children: changedChildren,\n    writeId,\n    visible: true\n  });\n\n  writeTree.visibleWrites = compoundWriteAddWrites(\n    writeTree.visibleWrites,\n    path,\n    changedChildren\n  );\n  writeTree.lastWriteId = writeId;\n}\n\nexport function writeTreeGetWrite(\n  writeTree: WriteTree,\n  writeId: number\n): WriteRecord | null {\n  for (let i = 0; i < writeTree.allWrites.length; i++) {\n    const record = writeTree.allWrites[i];\n    if (record.writeId === writeId) {\n      return record;\n    }\n  }\n  return null;\n}\n\n/**\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\n *\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\n * events as a result).\n */\nexport function writeTreeRemoveWrite(\n  writeTree: WriteTree,\n  writeId: number\n): boolean {\n  // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n  // out of order.\n  //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n  //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n\n  const idx = writeTree.allWrites.findIndex(s => {\n    return s.writeId === writeId;\n  });\n  assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n  const writeToRemove = writeTree.allWrites[idx];\n  writeTree.allWrites.splice(idx, 1);\n\n  let removedWriteWasVisible = writeToRemove.visible;\n  let removedWriteOverlapsWithOtherWrites = false;\n\n  let i = writeTree.allWrites.length - 1;\n\n  while (removedWriteWasVisible && i >= 0) {\n    const currentWrite = writeTree.allWrites[i];\n    if (currentWrite.visible) {\n      if (\n        i >= idx &&\n        writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)\n      ) {\n        // The removed write was completely shadowed by a subsequent write.\n        removedWriteWasVisible = false;\n      } else if (pathContains(writeToRemove.path, currentWrite.path)) {\n        // Either we're covering some writes or they're covering part of us (depending on which came first).\n        removedWriteOverlapsWithOtherWrites = true;\n      }\n    }\n    i--;\n  }\n\n  if (!removedWriteWasVisible) {\n    return false;\n  } else if (removedWriteOverlapsWithOtherWrites) {\n    // There's some shadowing going on. Just rebuild the visible writes from scratch.\n    writeTreeResetTree_(writeTree);\n    return true;\n  } else {\n    // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n    if (writeToRemove.snap) {\n      writeTree.visibleWrites = compoundWriteRemoveWrite(\n        writeTree.visibleWrites,\n        writeToRemove.path\n      );\n    } else {\n      const children = writeToRemove.children;\n      each(children, (childName: string) => {\n        writeTree.visibleWrites = compoundWriteRemoveWrite(\n          writeTree.visibleWrites,\n          pathChild(writeToRemove.path, childName)\n        );\n      });\n    }\n    return true;\n  }\n}\n\nfunction writeTreeRecordContainsPath_(\n  writeRecord: WriteRecord,\n  path: Path\n): boolean {\n  if (writeRecord.snap) {\n    return pathContains(writeRecord.path, path);\n  } else {\n    for (const childName in writeRecord.children) {\n      if (\n        writeRecord.children.hasOwnProperty(childName) &&\n        pathContains(pathChild(writeRecord.path, childName), path)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\n */\nfunction writeTreeResetTree_(writeTree: WriteTree) {\n  writeTree.visibleWrites = writeTreeLayerTree_(\n    writeTree.allWrites,\n    writeTreeDefaultFilter_,\n    newEmptyPath()\n  );\n  if (writeTree.allWrites.length > 0) {\n    writeTree.lastWriteId =\n      writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\n  } else {\n    writeTree.lastWriteId = -1;\n  }\n}\n\n/**\n * The default filter used when constructing the tree. Keep everything that's visible.\n */\nfunction writeTreeDefaultFilter_(write: WriteRecord) {\n  return write.visible;\n}\n\n/**\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\n * event data at that path.\n */\nfunction writeTreeLayerTree_(\n  writes: WriteRecord[],\n  filter: (w: WriteRecord) => boolean,\n  treeRoot: Path\n): CompoundWrite {\n  let compoundWrite = CompoundWrite.empty();\n  for (let i = 0; i < writes.length; ++i) {\n    const write = writes[i];\n    // Theory, a later set will either:\n    // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n    // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n    if (filter(write)) {\n      const writePath = write.path;\n      let relativePath: Path;\n      if (write.snap) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            relativePath,\n            write.snap\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            newEmptyPath(),\n            write.snap.getChild(relativePath)\n          );\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else if (write.children) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrites(\n            compoundWrite,\n            relativePath,\n            write.children\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          if (pathIsEmpty(relativePath)) {\n            compoundWrite = compoundWriteAddWrites(\n              compoundWrite,\n              newEmptyPath(),\n              write.children\n            );\n          } else {\n            const child = safeGet(write.children, pathGetFront(relativePath));\n            if (child) {\n              // There exists a child in this node that matches the root path\n              const deepNode = child.getChild(pathPopFront(relativePath));\n              compoundWrite = compoundWriteAddWrite(\n                compoundWrite,\n                newEmptyPath(),\n                deepNode\n              );\n            }\n          }\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else {\n        throw assertionError('WriteRecord should have .snap or .children');\n      }\n    }\n  }\n  return compoundWrite;\n}\n\n/**\n * Return a complete snapshot for the given path if there's visible write data at that path, else null.\n * No server data is considered.\n *\n */\nexport function writeTreeGetCompleteWriteData(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\n * writes), attempt to calculate a complete snapshot for the given path\n *\n * @param writeIdsToExclude - An optional set to be excluded\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeCalcCompleteEventCache(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  if (!writeIdsToExclude && !includeHiddenWrites) {\n    const shadowingNode = compoundWriteGetCompleteNode(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      const subMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        treePath\n      );\n      if (compoundWriteIsEmpty(subMerge)) {\n        return completeServerCache;\n      } else if (\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())\n      ) {\n        // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n        return null;\n      } else {\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(subMerge, layeredCache);\n      }\n    }\n  } else {\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\n      return completeServerCache;\n    } else {\n      // If the server cache is null, and we don't have a complete cache, we need to return null\n      if (\n        !includeHiddenWrites &&\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(merge, newEmptyPath())\n      ) {\n        return null;\n      } else {\n        const filter = function (write: WriteRecord) {\n          return (\n            (write.visible || includeHiddenWrites) &&\n            (!writeIdsToExclude ||\n              !~writeIdsToExclude.indexOf(write.writeId)) &&\n            (pathContains(write.path, treePath) ||\n              pathContains(treePath, write.path))\n          );\n        };\n        const mergeAtPath = writeTreeLayerTree_(\n          writeTree.allWrites,\n          filter,\n          treePath\n        );\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(mergeAtPath, layeredCache);\n      }\n    }\n  }\n}\n\n/**\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\n * Used when creating new views, to pre-fill their complete event children snapshot.\n */\nexport function writeTreeCalcCompleteEventChildren(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerChildren: ChildrenNode | null\n) {\n  let completeChildren = ChildrenNode.EMPTY_NODE as Node;\n  const topLevelSet = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    treePath\n  );\n  if (topLevelSet) {\n    if (!topLevelSet.isLeafNode()) {\n      // we're shadowing everything. Return the children.\n      topLevelSet.forEachChild(PRIORITY_INDEX, (childName, childSnap) => {\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          childSnap\n        );\n      });\n    }\n    return completeChildren;\n  } else if (completeServerChildren) {\n    // Layer any children we have on top of this\n    // We know we don't have a top-level set, so just enumerate existing children\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    completeServerChildren.forEachChild(\n      PRIORITY_INDEX,\n      (childName, childNode) => {\n        const node = compoundWriteApply(\n          compoundWriteChildCompoundWrite(merge, new Path(childName)),\n          childNode\n        );\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          node\n        );\n      }\n    );\n    // Add any complete children we have from the set\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  } else {\n    // We don't have anything to layer on top of. Layer on any children we have\n    // Note that we can return an empty snap if we have a defined delete\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  }\n}\n\n/**\n * Given that the underlying server data has updated, determine what, if anything, needs to be\n * applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events\n *\n * Either existingEventSnap or existingServerSnap must exist\n */\nexport function writeTreeCalcEventCacheAfterServerOverwrite(\n  writeTree: WriteTree,\n  treePath: Path,\n  childPath: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  assert(\n    existingEventSnap || existingServerSnap,\n    'Either existingEventSnap or existingServerSnap must exist'\n  );\n  const path = pathChild(treePath, childPath);\n  if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\n    // At this point we can probably guarantee that we're in case 2, meaning no events\n    // May need to check visibility while doing the findRootMostValueAndPath call\n    return null;\n  } else {\n    // No complete shadowing. We're either partially shadowing or not shadowing at all.\n    const childMerge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      path\n    );\n    if (compoundWriteIsEmpty(childMerge)) {\n      // We're not shadowing at all. Case 1\n      return existingServerSnap.getChild(childPath);\n    } else {\n      // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n      // However this is tricky to find out, since user updates don't necessary change the server\n      // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n      // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n      // only check if the updates change the serverNode.\n      // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getChild(childPath)\n      );\n    }\n  }\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeCalcCompleteChild(\n  writeTree: WriteTree,\n  treePath: Path,\n  childKey: string,\n  existingServerSnap: CacheNode\n): Node | null {\n  const path = pathChild(treePath, childKey);\n  const shadowingNode = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    path\n  );\n  if (shadowingNode != null) {\n    return shadowingNode;\n  } else {\n    if (existingServerSnap.isCompleteForChild(childKey)) {\n      const childMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        path\n      );\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getNode().getImmediateChild(childKey)\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n */\nexport function writeTreeShadowingWrite(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window.\n */\nexport function writeTreeCalcIndexedSlice(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  let toIterate: Node;\n  const merge = compoundWriteChildCompoundWrite(\n    writeTree.visibleWrites,\n    treePath\n  );\n  const shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\n  if (shadowingNode != null) {\n    toIterate = shadowingNode;\n  } else if (completeServerData != null) {\n    toIterate = compoundWriteApply(merge, completeServerData);\n  } else {\n    // no children to iterate on\n    return [];\n  }\n  toIterate = toIterate.withIndex(index);\n  if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n    const nodes = [];\n    const cmp = index.getCompare();\n    const iter = reverse\n      ? (toIterate as ChildrenNode).getReverseIteratorFrom(startPost, index)\n      : (toIterate as ChildrenNode).getIteratorFrom(startPost, index);\n    let next = iter.getNext();\n    while (next && nodes.length < count) {\n      if (cmp(next, startPost) !== 0) {\n        nodes.push(next);\n      }\n      next = iter.getNext();\n    }\n    return nodes;\n  } else {\n    return [];\n  }\n}\n\nexport function newWriteTree(): WriteTree {\n  return {\n    visibleWrites: CompoundWrite.empty(),\n    allWrites: [],\n    lastWriteId: -1\n  };\n}\n\n/**\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\n * and addMerge(), and removed with removeWrite().\n */\nexport interface WriteTree {\n  /**\n   * A tree tracking the result of applying all visible writes.  This does not include transactions with\n   * applyLocally=false or writes that are completely shadowed by other writes.\n   */\n  visibleWrites: CompoundWrite;\n\n  /**\n   * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\n   * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\n   * used by transactions).\n   */\n  allWrites: WriteRecord[];\n\n  lastWriteId: number;\n}\n\n/**\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\n * can lead to a more expensive calculation.\n *\n * @param writeIdsToExclude - Optional writes to exclude.\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeRefCalcCompleteEventCache(\n  writeTreeRef: WriteTreeRef,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  return writeTreeCalcCompleteEventCache(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerCache,\n    writeIdsToExclude,\n    includeHiddenWrites\n  );\n}\n\n/**\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\n * mix of the given server data and write data.\n *\n */\nexport function writeTreeRefCalcCompleteEventChildren(\n  writeTreeRef: WriteTreeRef,\n  completeServerChildren: ChildrenNode | null\n): ChildrenNode {\n  return writeTreeCalcCompleteEventChildren(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerChildren\n  ) as ChildrenNode;\n}\n\n/**\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\n * if anything, needs to be applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events should be raised\n *\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\n *\n *\n */\nexport function writeTreeRefCalcEventCacheAfterServerOverwrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  return writeTreeCalcEventCacheAfterServerOverwrite(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    path,\n    existingEventSnap,\n    existingServerSnap\n  );\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n *\n */\nexport function writeTreeRefShadowingWrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path\n): Node | null {\n  return writeTreeShadowingWrite(\n    writeTreeRef.writeTree,\n    pathChild(writeTreeRef.treePath, path)\n  );\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window\n */\nexport function writeTreeRefCalcIndexedSlice(\n  writeTreeRef: WriteTreeRef,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  return writeTreeCalcIndexedSlice(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerData,\n    startPost,\n    count,\n    reverse,\n    index\n  );\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeRefCalcCompleteChild(\n  writeTreeRef: WriteTreeRef,\n  childKey: string,\n  existingServerCache: CacheNode\n): Node | null {\n  return writeTreeCalcCompleteChild(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    childKey,\n    existingServerCache\n  );\n}\n\n/**\n * Return a WriteTreeRef for a child.\n */\nexport function writeTreeRefChild(\n  writeTreeRef: WriteTreeRef,\n  childName: string\n): WriteTreeRef {\n  return newWriteTreeRef(\n    pathChild(writeTreeRef.treePath, childName),\n    writeTreeRef.writeTree\n  );\n}\n\nexport function newWriteTreeRef(\n  path: Path,\n  writeTree: WriteTree\n): WriteTreeRef {\n  return {\n    treePath: path,\n    writeTree\n  };\n}\n\n/**\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\n * just proxy to the underlying WriteTree.\n *\n */\nexport interface WriteTreeRef {\n  /**\n   * The path to this particular write tree ref. Used for calling methods on writeTree_ while exposing a simpler\n   * interface to callers.\n   */\n  readonly treePath: Path;\n\n  /**\n   * * A reference to the actual tree of write data. All methods are pass-through to the tree, but with the appropriate\n   * path prefixed.\n   *\n   * This lets us make cheap references to points in the tree for sync points without having to copy and maintain all of\n   * the data.\n   */\n  readonly writeTree: WriteTree;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport {\n  Change,\n  ChangeType,\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from './Change';\n\nexport class ChildChangeAccumulator {\n  private readonly changeMap: Map<string, Change> = new Map();\n\n  trackChildChange(change: Change) {\n    const type = change.type;\n    const childKey = change.childName!;\n    assert(\n      type === ChangeType.CHILD_ADDED ||\n        type === ChangeType.CHILD_CHANGED ||\n        type === ChangeType.CHILD_REMOVED,\n      'Only child changes supported for tracking'\n    );\n    assert(\n      childKey !== '.priority',\n      'Only non-priority child changes can be tracked.'\n    );\n    const oldChange = this.changeMap.get(childKey);\n    if (oldChange) {\n      const oldType = oldChange.type;\n      if (\n        type === ChangeType.CHILD_ADDED &&\n        oldType === ChangeType.CHILD_REMOVED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(\n            childKey,\n            change.snapshotNode,\n            oldChange.snapshotNode\n          )\n        );\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.delete(childKey);\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildRemoved(childKey, oldChange.oldSnap)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildAdded(childKey, change.snapshotNode)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap)\n        );\n      } else {\n        throw assertionError(\n          'Illegal combination of changes: ' +\n            change +\n            ' occurred after ' +\n            oldChange\n        );\n      }\n    } else {\n      this.changeMap.set(childKey, change);\n    }\n  }\n\n  getChanges(): Change[] {\n    return Array.from(this.changeMap.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcIndexedSlice\n} from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { ViewCache, viewCacheGetCompleteServerSnap } from './ViewCache';\n\n/**\n * Since updates to filtered nodes might require nodes to be pulled in from \"outside\" the node, this interface\n * can help to get complete children that can be pulled in.\n * A class implementing this interface takes potentially multiple sources (e.g. user writes, server data from\n * other views etc.) to try it's best to get a complete child that might be useful in pulling into the view.\n *\n * @interface\n */\nexport interface CompleteChildSource {\n  getCompleteChild(childKey: string): Node | null;\n\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null;\n}\n\n/**\n * An implementation of CompleteChildSource that never returns any additional children\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class NoCompleteChildSource_ implements CompleteChildSource {\n  getCompleteChild(childKey?: string): Node | null {\n    return null;\n  }\n  getChildAfterChild(\n    index?: Index,\n    child?: NamedNode,\n    reverse?: boolean\n  ): NamedNode | null {\n    return null;\n  }\n}\n\n/**\n * Singleton instance.\n */\nexport const NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n\n/**\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\n * old event caches available to calculate complete children.\n */\nexport class WriteTreeCompleteChildSource implements CompleteChildSource {\n  constructor(\n    private writes_: WriteTreeRef,\n    private viewCache_: ViewCache,\n    private optCompleteServerCache_: Node | null = null\n  ) {}\n  getCompleteChild(childKey: string): Node | null {\n    const node = this.viewCache_.eventCache;\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      const serverNode =\n        this.optCompleteServerCache_ != null\n          ? new CacheNode(this.optCompleteServerCache_, true, false)\n          : this.viewCache_.serverCache;\n      return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\n    }\n  }\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null {\n    const completeServerData =\n      this.optCompleteServerCache_ != null\n        ? this.optCompleteServerCache_\n        : viewCacheGetCompleteServerSnap(this.viewCache_);\n    const nodes = writeTreeRefCalcIndexedSlice(\n      this.writes_,\n      completeServerData,\n      child,\n      1,\n      reverse,\n      index\n    );\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { AckUserWrite } from '../operation/AckUserWrite';\nimport { Merge } from '../operation/Merge';\nimport { Operation, OperationType } from '../operation/Operation';\nimport { Overwrite } from '../operation/Overwrite';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetBack,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathParent,\n  pathPopFront\n} from '../util/Path';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren,\n  writeTreeRefCalcEventCacheAfterServerOverwrite,\n  writeTreeRefShadowingWrite\n} from '../WriteTree';\n\nimport { Change, changeValue } from './Change';\nimport { ChildChangeAccumulator } from './ChildChangeAccumulator';\nimport {\n  CompleteChildSource,\n  NO_COMPLETE_CHILD_SOURCE,\n  WriteTreeCompleteChildSource\n} from './CompleteChildSource';\nimport { NodeFilter } from './filter/NodeFilter';\nimport {\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap,\n  viewCacheUpdateEventSnap,\n  viewCacheUpdateServerSnap\n} from './ViewCache';\n\nexport interface ProcessorResult {\n  readonly viewCache: ViewCache;\n  readonly changes: Change[];\n}\n\nexport interface ViewProcessor {\n  readonly filter: NodeFilter;\n}\n\nexport function newViewProcessor(filter: NodeFilter): ViewProcessor {\n  return { filter };\n}\n\nexport function viewProcessorAssertIndexed(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache\n): void {\n  assert(\n    viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Event snap not indexed'\n  );\n  assert(\n    viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Server snap not indexed'\n  );\n}\n\nexport function viewProcessorApplyOperation(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null\n): ProcessorResult {\n  const accumulator = new ChildChangeAccumulator();\n  let newViewCache, filterServerNode;\n  if (operation.type === OperationType.OVERWRITE) {\n    const overwrite = operation as Overwrite;\n    if (overwrite.source.fromUser) {\n      newViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(overwrite.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered  and the\n      // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n      // again\n      filterServerNode =\n        overwrite.source.tagged ||\n        (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\n      newViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.MERGE) {\n    const merge = operation as Merge;\n    if (merge.source.fromUser) {\n      newViewCache = viewProcessorApplyUserMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(merge.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered\n      filterServerNode =\n        merge.source.tagged || oldViewCache.serverCache.isFiltered();\n      newViewCache = viewProcessorApplyServerMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.ACK_USER_WRITE) {\n    const ackUserWrite = operation as AckUserWrite;\n    if (!ackUserWrite.revert) {\n      newViewCache = viewProcessorAckUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        ackUserWrite.affectedTree,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      newViewCache = viewProcessorRevertUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n    newViewCache = viewProcessorListenComplete(\n      viewProcessor,\n      oldViewCache,\n      operation.path,\n      writesCache,\n      accumulator\n    );\n  } else {\n    throw assertionError('Unknown operation type: ' + operation.type);\n  }\n  const changes = accumulator.getChanges();\n  viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\n  return { viewCache: newViewCache, changes };\n}\n\nfunction viewProcessorMaybeAddValueEvent(\n  oldViewCache: ViewCache,\n  newViewCache: ViewCache,\n  accumulator: Change[]\n): void {\n  const eventSnap = newViewCache.eventCache;\n  if (eventSnap.isFullyInitialized()) {\n    const isLeafOrEmpty =\n      eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n    const oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\n    if (\n      accumulator.length > 0 ||\n      !oldViewCache.eventCache.isFullyInitialized() ||\n      (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\n      !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())\n    ) {\n      accumulator.push(\n        changeValue(viewCacheGetCompleteEventSnap(newViewCache))\n      );\n    }\n  }\n}\n\nfunction viewProcessorGenerateEventCacheAfterServerEvent(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  changePath: Path,\n  writesCache: WriteTreeRef,\n  source: CompleteChildSource,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = viewCache.eventCache;\n  if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\n    // we have a shadowing write, ignore changes\n    return viewCache;\n  } else {\n    let newEventCache, serverNode;\n    if (pathIsEmpty(changePath)) {\n      // TODO: figure out how this plays with \"sliding ack windows\"\n      assert(\n        viewCache.serverCache.isFullyInitialized(),\n        'If change path is empty, we must have complete server data'\n      );\n      if (viewCache.serverCache.isFiltered()) {\n        // We need to special case this, because we need to only apply writes to complete children, or\n        // we might end up raising events for incomplete children. If the server data is filtered deep\n        // writes cannot be guaranteed to be complete\n        const serverCache = viewCacheGetCompleteServerSnap(viewCache);\n        const completeChildren =\n          serverCache instanceof ChildrenNode\n            ? serverCache\n            : ChildrenNode.EMPTY_NODE;\n        const completeEventChildren = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          completeChildren\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeEventChildren,\n          accumulator\n        );\n      } else {\n        const completeNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeNode,\n          accumulator\n        );\n      }\n    } else {\n      const childKey = pathGetFront(changePath);\n      if (childKey === '.priority') {\n        assert(\n          pathGetLength(changePath) === 1,\n          \"Can't have a priority with additional path components\"\n        );\n        const oldEventNode = oldEventSnap.getNode();\n        serverNode = viewCache.serverCache.getNode();\n        // we might have overwrites for this priority\n        const updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(\n          writesCache,\n          changePath,\n          oldEventNode,\n          serverNode\n        );\n        if (updatedPriority != null) {\n          newEventCache = viewProcessor.filter.updatePriority(\n            oldEventNode,\n            updatedPriority\n          );\n        } else {\n          // priority didn't change, keep old node\n          newEventCache = oldEventSnap.getNode();\n        }\n      } else {\n        const childChangePath = pathPopFront(changePath);\n        // update child\n        let newEventChild;\n        if (oldEventSnap.isCompleteForChild(childKey)) {\n          serverNode = viewCache.serverCache.getNode();\n          const eventChildUpdate =\n            writeTreeRefCalcEventCacheAfterServerOverwrite(\n              writesCache,\n              changePath,\n              oldEventSnap.getNode(),\n              serverNode\n            );\n          if (eventChildUpdate != null) {\n            newEventChild = oldEventSnap\n              .getNode()\n              .getImmediateChild(childKey)\n              .updateChild(childChangePath, eventChildUpdate);\n          } else {\n            // Nothing changed, just keep the old child\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n          }\n        } else {\n          newEventChild = writeTreeRefCalcCompleteChild(\n            writesCache,\n            childKey,\n            viewCache.serverCache\n          );\n        }\n        if (newEventChild != null) {\n          newEventCache = viewProcessor.filter.updateChild(\n            oldEventSnap.getNode(),\n            childKey,\n            newEventChild,\n            childChangePath,\n            source,\n            accumulator\n          );\n        } else {\n          // no complete child available or no change\n          newEventCache = oldEventSnap.getNode();\n        }\n      }\n    }\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath),\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n\nfunction viewProcessorApplyServerOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerSnap = oldViewCache.serverCache;\n  let newServerCache;\n  const serverFilter = filterServerNode\n    ? viewProcessor.filter\n    : viewProcessor.filter.getIndexedFilter();\n  if (pathIsEmpty(changePath)) {\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      changedSnap,\n      null\n    );\n  } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n    // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n    const newServerNode = oldServerSnap\n      .getNode()\n      .updateChild(changePath, changedSnap);\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      newServerNode,\n      null\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (\n      !oldServerSnap.isCompleteForPath(changePath) &&\n      pathGetLength(changePath) > 1\n    ) {\n      // We don't update incomplete nodes with updates intended for other listeners\n      return oldViewCache;\n    }\n    const childChangePath = pathPopFront(changePath);\n    const childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n    const newChildNode = childNode.updateChild(childChangePath, changedSnap);\n    if (childKey === '.priority') {\n      newServerCache = serverFilter.updatePriority(\n        oldServerSnap.getNode(),\n        newChildNode\n      );\n    } else {\n      newServerCache = serverFilter.updateChild(\n        oldServerSnap.getNode(),\n        childKey,\n        newChildNode,\n        childChangePath,\n        NO_COMPLETE_CHILD_SOURCE,\n        null\n      );\n    }\n  }\n  const newViewCache = viewCacheUpdateServerSnap(\n    oldViewCache,\n    newServerCache,\n    oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath),\n    serverFilter.filtersNodes()\n  );\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    newViewCache,\n    completeCache\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    changePath,\n    writesCache,\n    source,\n    accumulator\n  );\n}\n\nfunction viewProcessorApplyUserOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = oldViewCache.eventCache;\n  let newViewCache, newEventCache;\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    oldViewCache,\n    completeCache\n  );\n  if (pathIsEmpty(changePath)) {\n    newEventCache = viewProcessor.filter.updateFullNode(\n      oldViewCache.eventCache.getNode(),\n      changedSnap,\n      accumulator\n    );\n    newViewCache = viewCacheUpdateEventSnap(\n      oldViewCache,\n      newEventCache,\n      true,\n      viewProcessor.filter.filtersNodes()\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (childKey === '.priority') {\n      newEventCache = viewProcessor.filter.updatePriority(\n        oldViewCache.eventCache.getNode(),\n        changedSnap\n      );\n      newViewCache = viewCacheUpdateEventSnap(\n        oldViewCache,\n        newEventCache,\n        oldEventSnap.isFullyInitialized(),\n        oldEventSnap.isFiltered()\n      );\n    } else {\n      const childChangePath = pathPopFront(changePath);\n      const oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n      let newChild;\n      if (pathIsEmpty(childChangePath)) {\n        // Child overwrite, we can replace the child\n        newChild = changedSnap;\n      } else {\n        const childNode = source.getCompleteChild(childKey);\n        if (childNode != null) {\n          if (\n            pathGetBack(childChangePath) === '.priority' &&\n            childNode.getChild(pathParent(childChangePath)).isEmpty()\n          ) {\n            // This is a priority update on an empty node. If this node exists on the server, the\n            // server will send down the priority in the update, so ignore for now\n            newChild = childNode;\n          } else {\n            newChild = childNode.updateChild(childChangePath, changedSnap);\n          }\n        } else {\n          // There is no complete child node available\n          newChild = ChildrenNode.EMPTY_NODE;\n        }\n      }\n      if (!oldChild.equals(newChild)) {\n        const newEventSnap = viewProcessor.filter.updateChild(\n          oldEventSnap.getNode(),\n          childKey,\n          newChild,\n          childChangePath,\n          source,\n          accumulator\n        );\n        newViewCache = viewCacheUpdateEventSnap(\n          oldViewCache,\n          newEventSnap,\n          oldEventSnap.isFullyInitialized(),\n          viewProcessor.filter.filtersNodes()\n        );\n      } else {\n        newViewCache = oldViewCache;\n      }\n    }\n  }\n  return newViewCache;\n}\n\nfunction viewProcessorCacheHasChild(\n  viewCache: ViewCache,\n  childKey: string\n): boolean {\n  return viewCache.eventCache.isCompleteForChild(childKey);\n}\n\nfunction viewProcessorApplyUserMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorApplyMerge(\n  viewProcessor: ViewProcessor,\n  node: Node,\n  merge: ImmutableTree<Node>\n): Node {\n  merge.foreach((relativePath, childNode) => {\n    node = node.updateChild(relativePath, childNode);\n  });\n  return node;\n}\n\nfunction viewProcessorApplyServerMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n  // wait for the complete data update coming soon.\n  if (\n    viewCache.serverCache.getNode().isEmpty() &&\n    !viewCache.serverCache.isFullyInitialized()\n  ) {\n    return viewCache;\n  }\n\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  let viewMergeTree: ImmutableTree<Node>;\n  if (pathIsEmpty(path)) {\n    viewMergeTree = changedChildren;\n  } else {\n    viewMergeTree = new ImmutableTree<Node>(null).setTree(\n      path,\n      changedChildren\n    );\n  }\n  const serverNode = viewCache.serverCache.getNode();\n  viewMergeTree.children.inorderTraversal((childKey, childTree) => {\n    if (serverNode.hasChild(childKey)) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n  viewMergeTree.children.inorderTraversal((childKey, childMergeTree) => {\n    const isUnknownDeepMerge =\n      !viewCache.serverCache.isCompleteForChild(childKey) &&\n      childMergeTree.value === null;\n    if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childMergeTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorAckUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  ackPath: Path,\n  affectedTree: ImmutableTree<boolean>,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\n    return viewCache;\n  }\n\n  // Only filter server node if it is currently filtered\n  const filterServerNode = viewCache.serverCache.isFiltered();\n\n  // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n  // now that it won't be shadowed.\n  const serverCache = viewCache.serverCache;\n  if (affectedTree.value != null) {\n    // This is an overwrite.\n    if (\n      (pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\n      serverCache.isCompleteForPath(ackPath)\n    ) {\n      return viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        serverCache.getNode().getChild(ackPath),\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else if (pathIsEmpty(ackPath)) {\n      // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n      // should just re-apply whatever we have in our cache as a merge.\n      let changedChildren = new ImmutableTree<Node>(null);\n      serverCache.getNode().forEachChild(KEY_INDEX, (name, node) => {\n        changedChildren = changedChildren.set(new Path(name), node);\n      });\n      return viewProcessorApplyServerMerge(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        changedChildren,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else {\n      return viewCache;\n    }\n  } else {\n    // This is a merge.\n    let changedChildren = new ImmutableTree<Node>(null);\n    affectedTree.foreach((mergePath, value) => {\n      const serverCachePath = pathChild(ackPath, mergePath);\n      if (serverCache.isCompleteForPath(serverCachePath)) {\n        changedChildren = changedChildren.set(\n          mergePath,\n          serverCache.getNode().getChild(serverCachePath)\n        );\n      }\n    });\n    return viewProcessorApplyServerMerge(\n      viewProcessor,\n      viewCache,\n      ackPath,\n      changedChildren,\n      writesCache,\n      completeCache,\n      filterServerNode,\n      accumulator\n    );\n  }\n}\n\nfunction viewProcessorListenComplete(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerNode = viewCache.serverCache;\n  const newViewCache = viewCacheUpdateServerSnap(\n    viewCache,\n    oldServerNode.getNode(),\n    oldServerNode.isFullyInitialized() || pathIsEmpty(path),\n    oldServerNode.isFiltered()\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    path,\n    writesCache,\n    NO_COMPLETE_CHILD_SOURCE,\n    accumulator\n  );\n}\n\nfunction viewProcessorRevertUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  let complete;\n  if (writeTreeRefShadowingWrite(writesCache, path) != null) {\n    return viewCache;\n  } else {\n    const source = new WriteTreeCompleteChildSource(\n      writesCache,\n      viewCache,\n      completeServerCache\n    );\n    const oldEventCache = viewCache.eventCache.getNode();\n    let newEventCache;\n    if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\n      let newNode;\n      if (viewCache.serverCache.isFullyInitialized()) {\n        newNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n      } else {\n        const serverChildren = viewCache.serverCache.getNode();\n        assert(\n          serverChildren instanceof ChildrenNode,\n          'serverChildren would be complete if leaf node'\n        );\n        newNode = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          serverChildren as ChildrenNode\n        );\n      }\n      newNode = newNode as Node;\n      newEventCache = viewProcessor.filter.updateFullNode(\n        oldEventCache,\n        newNode,\n        accumulator\n      );\n    } else {\n      const childKey = pathGetFront(path);\n      let newChild = writeTreeRefCalcCompleteChild(\n        writesCache,\n        childKey,\n        viewCache.serverCache\n      );\n      if (\n        newChild == null &&\n        viewCache.serverCache.isCompleteForChild(childKey)\n      ) {\n        newChild = oldEventCache.getImmediateChild(childKey);\n      }\n      if (newChild != null) {\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          newChild,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else if (viewCache.eventCache.getNode().hasChild(childKey)) {\n        // No complete child available, delete the existing one, if any\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          ChildrenNode.EMPTY_NODE,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else {\n        newEventCache = oldEventCache;\n      }\n      if (\n        newEventCache.isEmpty() &&\n        viewCache.serverCache.isFullyInitialized()\n      ) {\n        // We might have reverted all child writes. Maybe the old event was a leaf node\n        complete = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        if (complete.isLeafNode()) {\n          newEventCache = viewProcessor.filter.updateFullNode(\n            newEventCache,\n            complete,\n            accumulator\n          );\n        }\n      }\n    }\n    complete =\n      viewCache.serverCache.isFullyInitialized() ||\n      writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      complete,\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Operation, OperationType } from '../operation/Operation';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\nimport { WriteTreeRef } from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { Change, changeChildAdded, changeValue } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport {\n  EventGenerator,\n  eventGeneratorGenerateEventsForChanges\n} from './EventGenerator';\nimport { EventRegistration, QueryContext } from './EventRegistration';\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { queryParamsGetNodeFilter } from './QueryParams';\nimport {\n  newViewCache,\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap\n} from './ViewCache';\nimport {\n  newViewProcessor,\n  ViewProcessor,\n  viewProcessorApplyOperation,\n  viewProcessorAssertIndexed\n} from './ViewProcessor';\n\n/**\n * A view represents a specific location and query that has 1 or more event registrations.\n *\n * It does several things:\n *  - Maintains the list of event registrations for this location/query.\n *  - Maintains a cache of the data visible for this location/query.\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\n *    registrations returns the set of events to be raised.\n */\nexport class View {\n  processor_: ViewProcessor;\n  viewCache_: ViewCache;\n  eventRegistrations_: EventRegistration[] = [];\n  eventGenerator_: EventGenerator;\n\n  constructor(private query_: QueryContext, initialViewCache: ViewCache) {\n    const params = this.query_._queryParams;\n\n    const indexFilter = new IndexedFilter(params.getIndex());\n    const filter = queryParamsGetNodeFilter(params);\n\n    this.processor_ = newViewProcessor(filter);\n\n    const initialServerCache = initialViewCache.serverCache;\n    const initialEventCache = initialViewCache.eventCache;\n\n    // Don't filter server node with other filter than index, wait for tagged listen\n    const serverSnap = indexFilter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialServerCache.getNode(),\n      null\n    );\n    const eventSnap = filter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialEventCache.getNode(),\n      null\n    );\n    const newServerCache = new CacheNode(\n      serverSnap,\n      initialServerCache.isFullyInitialized(),\n      indexFilter.filtersNodes()\n    );\n    const newEventCache = new CacheNode(\n      eventSnap,\n      initialEventCache.isFullyInitialized(),\n      filter.filtersNodes()\n    );\n\n    this.viewCache_ = newViewCache(newEventCache, newServerCache);\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n\n  get query(): QueryContext {\n    return this.query_;\n  }\n}\n\nexport function viewGetServerCache(view: View): Node | null {\n  return view.viewCache_.serverCache.getNode();\n}\n\nexport function viewGetCompleteNode(view: View): Node | null {\n  return viewCacheGetCompleteEventSnap(view.viewCache_);\n}\n\nexport function viewGetCompleteServerCache(\n  view: View,\n  path: Path\n): Node | null {\n  const cache = viewCacheGetCompleteServerSnap(view.viewCache_);\n  if (cache) {\n    // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n    // we need to see if it contains the child we're interested in.\n    if (\n      view.query._queryParams.loadsAllData() ||\n      (!pathIsEmpty(path) &&\n        !cache.getImmediateChild(pathGetFront(path)).isEmpty())\n    ) {\n      return cache.getChild(path);\n    }\n  }\n  return null;\n}\n\nexport function viewIsEmpty(view: View): boolean {\n  return view.eventRegistrations_.length === 0;\n}\n\nexport function viewAddEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration\n) {\n  view.eventRegistrations_.push(eventRegistration);\n}\n\n/**\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns Cancel events, if cancelError was provided.\n */\nexport function viewRemoveEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): Event[] {\n  const cancelEvents: CancelEvent[] = [];\n  if (cancelError) {\n    assert(\n      eventRegistration == null,\n      'A cancel should cancel all event registrations.'\n    );\n    const path = view.query._path;\n    view.eventRegistrations_.forEach(registration => {\n      const maybeEvent = registration.createCancelEvent(cancelError, path);\n      if (maybeEvent) {\n        cancelEvents.push(maybeEvent);\n      }\n    });\n  }\n\n  if (eventRegistration) {\n    let remaining = [];\n    for (let i = 0; i < view.eventRegistrations_.length; ++i) {\n      const existing = view.eventRegistrations_[i];\n      if (!existing.matches(eventRegistration)) {\n        remaining.push(existing);\n      } else if (eventRegistration.hasAnyCallback()) {\n        // We're removing just this one\n        remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\n        break;\n      }\n    }\n    view.eventRegistrations_ = remaining;\n  } else {\n    view.eventRegistrations_ = [];\n  }\n  return cancelEvents;\n}\n\n/**\n * Applies the given Operation, updates our cache, and returns the appropriate events.\n */\nexport function viewApplyOperation(\n  view: View,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null\n): Event[] {\n  if (\n    operation.type === OperationType.MERGE &&\n    operation.source.queryId !== null\n  ) {\n    assert(\n      viewCacheGetCompleteServerSnap(view.viewCache_),\n      'We should always have a full cache before handling merges'\n    );\n    assert(\n      viewCacheGetCompleteEventSnap(view.viewCache_),\n      'Missing event cache, even though we have a server cache'\n    );\n  }\n\n  const oldViewCache = view.viewCache_;\n  const result = viewProcessorApplyOperation(\n    view.processor_,\n    oldViewCache,\n    operation,\n    writesCache,\n    completeServerCache\n  );\n  viewProcessorAssertIndexed(view.processor_, result.viewCache);\n\n  assert(\n    result.viewCache.serverCache.isFullyInitialized() ||\n      !oldViewCache.serverCache.isFullyInitialized(),\n    'Once a server snap is complete, it should never go back'\n  );\n\n  view.viewCache_ = result.viewCache;\n\n  return viewGenerateEventsForChanges_(\n    view,\n    result.changes,\n    result.viewCache.eventCache.getNode(),\n    null\n  );\n}\n\nexport function viewGetInitialEvents(\n  view: View,\n  registration: EventRegistration\n): Event[] {\n  const eventSnap = view.viewCache_.eventCache;\n  const initialChanges: Change[] = [];\n  if (!eventSnap.getNode().isLeafNode()) {\n    const eventNode = eventSnap.getNode() as ChildrenNode;\n    eventNode.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      initialChanges.push(changeChildAdded(key, childNode));\n    });\n  }\n  if (eventSnap.isFullyInitialized()) {\n    initialChanges.push(changeValue(eventSnap.getNode()));\n  }\n  return viewGenerateEventsForChanges_(\n    view,\n    initialChanges,\n    eventSnap.getNode(),\n    registration\n  );\n}\n\nfunction viewGenerateEventsForChanges_(\n  view: View,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistration?: EventRegistration\n): Event[] {\n  const registrations = eventRegistration\n    ? [eventRegistration]\n    : view.eventRegistrations_;\n  return eventGeneratorGenerateEventsForChanges(\n    view.eventGenerator_,\n    changes,\n    eventCache,\n    registrations\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { Operation } from './operation/Operation';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport {\n  View,\n  viewAddEventRegistration,\n  viewApplyOperation,\n  viewGetCompleteServerCache,\n  viewGetInitialEvents,\n  viewIsEmpty,\n  viewRemoveEventRegistration\n} from './view/View';\nimport { newViewCache } from './view/ViewCache';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\n/**\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\n * and user writes (set, transaction, update).\n *\n * It's responsible for:\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\n *    applyUserOverwrite, etc.)\n */\nexport class SyncPoint {\n  /**\n   * The Views being tracked at this location in the tree, stored as a map where the key is a\n   * queryId and the value is the View for that query.\n   *\n   * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\n   */\n  readonly views: Map<string, View> = new Map();\n}\n\nexport function syncPointSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncPointGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport function syncPointIsEmpty(syncPoint: SyncPoint): boolean {\n  return syncPoint.views.size === 0;\n}\n\nexport function syncPointApplyOperation(\n  syncPoint: SyncPoint,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  optCompleteServerCache: Node | null\n): Event[] {\n  const queryId = operation.source.queryId;\n  if (queryId !== null) {\n    const view = syncPoint.views.get(queryId);\n    assert(view != null, 'SyncTree gave us an op for an invalid query.');\n    return viewApplyOperation(\n      view,\n      operation,\n      writesCache,\n      optCompleteServerCache\n    );\n  } else {\n    let events: Event[] = [];\n\n    for (const view of syncPoint.views.values()) {\n      events = events.concat(\n        viewApplyOperation(view, operation, writesCache, optCompleteServerCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Get a view for the specified query.\n *\n * @param query - The query to return a view for\n * @param writesCache\n * @param serverCache\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointGetView(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): View {\n  const queryId = query._queryIdentifier;\n  const view = syncPoint.views.get(queryId);\n  if (!view) {\n    // TODO: make writesCache take flag for complete server node\n    let eventCache = writeTreeRefCalcCompleteEventCache(\n      writesCache,\n      serverCacheComplete ? serverCache : null\n    );\n    let eventCacheComplete = false;\n    if (eventCache) {\n      eventCacheComplete = true;\n    } else if (serverCache instanceof ChildrenNode) {\n      eventCache = writeTreeRefCalcCompleteEventChildren(\n        writesCache,\n        serverCache\n      );\n      eventCacheComplete = false;\n    } else {\n      eventCache = ChildrenNode.EMPTY_NODE;\n      eventCacheComplete = false;\n    }\n    const viewCache = newViewCache(\n      new CacheNode(eventCache, eventCacheComplete, false),\n      new CacheNode(serverCache, serverCacheComplete, false)\n    );\n    return new View(query, viewCache);\n  }\n  return view;\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @param query\n * @param eventRegistration\n * @param writesCache\n * @param serverCache - Complete server cache, if we have it.\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointAddEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): Event[] {\n  const view = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!syncPoint.views.has(query._queryIdentifier)) {\n    syncPoint.views.set(query._queryIdentifier, view);\n  }\n  // This is guaranteed to exist now, we just created anything that was missing\n  viewAddEventRegistration(view, eventRegistration);\n  return viewGetInitialEvents(view, eventRegistration);\n}\n\n/**\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\n *\n * If query is the default query, we'll check all views for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\n *\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns removed queries and any cancel events\n */\nexport function syncPointRemoveEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): { removed: QueryContext[]; events: Event[] } {\n  const queryId = query._queryIdentifier;\n  const removed: QueryContext[] = [];\n  let cancelEvents: Event[] = [];\n  const hadCompleteView = syncPointHasCompleteView(syncPoint);\n  if (queryId === 'default') {\n    // When you do ref.off(...), we search all views for the registration to remove.\n    for (const [viewQueryId, view] of syncPoint.views.entries()) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(viewQueryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  } else {\n    // remove the callback from the specific view.\n    const view = syncPoint.views.get(queryId);\n    if (view) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(queryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  }\n\n  if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\n    // We removed our last complete view.\n    removed.push(\n      new (syncPointGetReferenceConstructor())(query._repo, query._path)\n    );\n  }\n\n  return { removed, events: cancelEvents };\n}\n\nexport function syncPointGetQueryViews(syncPoint: SyncPoint): View[] {\n  const result = [];\n  for (const view of syncPoint.views.values()) {\n    if (!view.query._queryParams.loadsAllData()) {\n      result.push(view);\n    }\n  }\n  return result;\n}\n\n/**\n * @param path - The path to the desired complete snapshot\n * @returns A complete cache, if it exists\n */\nexport function syncPointGetCompleteServerCache(\n  syncPoint: SyncPoint,\n  path: Path\n): Node | null {\n  let serverCache: Node | null = null;\n  for (const view of syncPoint.views.values()) {\n    serverCache = serverCache || viewGetCompleteServerCache(view, path);\n  }\n  return serverCache;\n}\n\nexport function syncPointViewForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): View | null {\n  const params = query._queryParams;\n  if (params.loadsAllData()) {\n    return syncPointGetCompleteView(syncPoint);\n  } else {\n    const queryId = query._queryIdentifier;\n    return syncPoint.views.get(queryId);\n  }\n}\n\nexport function syncPointViewExistsForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): boolean {\n  return syncPointViewForQuery(syncPoint, query) != null;\n}\n\nexport function syncPointHasCompleteView(syncPoint: SyncPoint): boolean {\n  return syncPointGetCompleteView(syncPoint) != null;\n}\n\nexport function syncPointGetCompleteView(syncPoint: SyncPoint): View | null {\n  for (const view of syncPoint.views.values()) {\n    if (view.query._queryParams.loadsAllData()) {\n      return view;\n    }\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { AckUserWrite } from './operation/AckUserWrite';\nimport { ListenComplete } from './operation/ListenComplete';\nimport { Merge } from './operation/Merge';\nimport {\n  newOperationSourceServer,\n  newOperationSourceServerTaggedQuery,\n  newOperationSourceUser,\n  Operation\n} from './operation/Operation';\nimport { Overwrite } from './operation/Overwrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport {\n  SyncPoint,\n  syncPointAddEventRegistration,\n  syncPointApplyOperation,\n  syncPointGetCompleteServerCache,\n  syncPointGetCompleteView,\n  syncPointGetQueryViews,\n  syncPointGetView,\n  syncPointHasCompleteView,\n  syncPointIsEmpty,\n  syncPointRemoveEventRegistration,\n  syncPointViewExistsForQuery,\n  syncPointViewForQuery\n} from './SyncPoint';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathGetFront,\n  pathIsEmpty\n} from './util/Path';\nimport { each, errorForServerCode } from './util/util';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport { View, viewGetCompleteNode, viewGetServerCache } from './view/View';\nimport {\n  newWriteTree,\n  WriteTree,\n  writeTreeAddMerge,\n  writeTreeAddOverwrite,\n  writeTreeCalcCompleteEventCache,\n  writeTreeChildWrites,\n  writeTreeGetWrite,\n  WriteTreeRef,\n  writeTreeRefChild,\n  writeTreeRemoveWrite\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\nexport function syncTreeSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncTreeGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport interface ListenProvider {\n  startListening(\n    query: QueryContext,\n    tag: number | null,\n    hashFn: () => string,\n    onComplete: (a: string, b?: unknown) => Event[]\n  ): Event[];\n\n  stopListening(a: QueryContext, b: number | null): void;\n}\n\n/**\n * Static tracker for next query tag.\n */\nlet syncTreeNextQueryTag_ = 1;\n\nexport function resetSyncTreeTag() {\n  syncTreeNextQueryTag_ = 1;\n}\n\n/**\n * SyncTree is the central class for managing event callback registration, data caching, views\n * (query processing), and event generation.  There are typically two SyncTree instances for\n * each Repo, one for the normal Firebase data, and one for the .info data.\n *\n * It has a number of responsibilities, including:\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\n *    (applyUserOverwrite(), applyUserMerge()).\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\n *    applyServerMerge()).\n *  - Generating user-facing events for server and user changes (all of the apply* methods\n *    return the set of events that need to be raised as a result).\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\n *    to the correct set of paths and queries to satisfy the current set of user event\n *    callbacks (listens are started/stopped using the provided listenProvider).\n *\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\n * events are returned to the caller rather than raised synchronously.\n *\n */\nexport class SyncTree {\n  /**\n   * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\n   */\n  syncPointTree_: ImmutableTree<SyncPoint> = new ImmutableTree<SyncPoint>(null);\n\n  /**\n   * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\n   */\n  pendingWriteTree_: WriteTree = newWriteTree();\n\n  readonly tagToQueryMap: Map<number, string> = new Map();\n  readonly queryToTagMap: Map<string, number> = new Map();\n\n  /**\n   * @param listenProvider_ - Used by SyncTree to start / stop listening\n   *   to server data.\n   */\n  constructor(public listenProvider_: ListenProvider) {}\n}\n\n/**\n * Apply the data changes for a user-generated set() or transaction() call.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node,\n  writeId: number,\n  visible?: boolean\n): Event[] {\n  // Record pending write.\n  writeTreeAddOverwrite(\n    syncTree.pendingWriteTree_,\n    path,\n    newData,\n    writeId,\n    visible\n  );\n\n  if (!visible) {\n    return [];\n  } else {\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new Overwrite(newOperationSourceUser(), path, newData)\n    );\n  }\n}\n\n/**\n * Apply the data from a user-generated update() call\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n): Event[] {\n  // Record pending merge.\n  writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\n\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceUser(), path, changeTree)\n  );\n}\n\n/**\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\n *\n * @param revert - True if the given write failed and needs to be reverted\n * @returns Events to raise.\n */\nexport function syncTreeAckUserWrite(\n  syncTree: SyncTree,\n  writeId: number,\n  revert: boolean = false\n) {\n  const write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\n  const needToReevaluate = writeTreeRemoveWrite(\n    syncTree.pendingWriteTree_,\n    writeId\n  );\n  if (!needToReevaluate) {\n    return [];\n  } else {\n    let affectedTree = new ImmutableTree<boolean>(null);\n    if (write.snap != null) {\n      // overwrite\n      affectedTree = affectedTree.set(newEmptyPath(), true);\n    } else {\n      each(write.children, (pathString: string) => {\n        affectedTree = affectedTree.set(new Path(pathString), true);\n      });\n    }\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new AckUserWrite(write.path, affectedTree, revert)\n    );\n  }\n}\n\n/**\n * Apply new server data for the specified path..\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Overwrite(newOperationSourceServer(), path, newData)\n  );\n}\n\n/**\n * Apply new server data to be merged in at the specified path.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node }\n): Event[] {\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceServer(), path, changeTree)\n  );\n}\n\n/**\n * Apply a listen complete for a query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyListenComplete(\n  syncTree: SyncTree,\n  path: Path\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new ListenComplete(newOperationSourceServer(), path)\n  );\n}\n\n/**\n * Apply a listen complete for a tagged query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedListenComplete(\n  syncTree: SyncTree,\n  path: Path,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new ListenComplete(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Remove event callback(s).\n *\n * If query is the default query, we'll check all queries for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\n *\n * @param eventRegistration - If null, all callbacks are removed.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @param skipListenerDedup - When performing a `get()`, we don't add any new listeners, so no\n *  deduping needs to take place. This flag allows toggling of that behavior\n * @returns Cancel events, if cancelError was provided.\n */\nexport function syncTreeRemoveEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error,\n  skipListenerDedup = false\n): Event[] {\n  // Find the syncPoint first. Then deal with whether or not it has matching listeners\n  const path = query._path;\n  const maybeSyncPoint = syncTree.syncPointTree_.get(path);\n  let cancelEvents: Event[] = [];\n  // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n  // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n  // not loadsAllData().\n  if (\n    maybeSyncPoint &&\n    (query._queryIdentifier === 'default' ||\n      syncPointViewExistsForQuery(maybeSyncPoint, query))\n  ) {\n    const removedAndEvents = syncPointRemoveEventRegistration(\n      maybeSyncPoint,\n      query,\n      eventRegistration,\n      cancelError\n    );\n    if (syncPointIsEmpty(maybeSyncPoint)) {\n      syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\n    }\n\n    const removed = removedAndEvents.removed;\n    cancelEvents = removedAndEvents.events;\n\n    if (!skipListenerDedup) {\n      /**\n       * We may have just removed one of many listeners and can short-circuit this whole process\n       * We may also not have removed a default listener, in which case all of the descendant listeners should already be\n       * properly set up.\n       */\n\n      // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n      // queryId === 'default'\n      const removingDefault =\n        -1 !==\n        removed.findIndex(query => {\n          return query._queryParams.loadsAllData();\n        });\n      const covered = syncTree.syncPointTree_.findOnPath(\n        path,\n        (relativePath, parentSyncPoint) =>\n          syncPointHasCompleteView(parentSyncPoint)\n      );\n\n      if (removingDefault && !covered) {\n        const subtree = syncTree.syncPointTree_.subtree(path);\n        // There are potentially child listeners. Determine what if any listens we need to send before executing the\n        // removal\n        if (!subtree.isEmpty()) {\n          // We need to fold over our subtree and collect the listeners to send\n          const newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\n\n          // Ok, we've collected all the listens we need. Set them up.\n          for (let i = 0; i < newViews.length; ++i) {\n            const view = newViews[i],\n              newQuery = view.query;\n            const listener = syncTreeCreateListenerForView_(syncTree, view);\n            syncTree.listenProvider_.startListening(\n              syncTreeQueryForListening_(newQuery),\n              syncTreeTagForQuery(syncTree, newQuery),\n              listener.hashFn,\n              listener.onComplete\n            );\n          }\n        }\n        // Otherwise there's nothing below us, so nothing we need to start listening on\n      }\n      // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n      // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n      // Also, note that if we have a cancelError, it's already been removed at the provider level.\n      if (!covered && removed.length > 0 && !cancelError) {\n        // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n        // default. Otherwise, we need to iterate through and cancel each individual query\n        if (removingDefault) {\n          // We don't tag default listeners\n          const defaultTag: number | null = null;\n          syncTree.listenProvider_.stopListening(\n            syncTreeQueryForListening_(query),\n            defaultTag\n          );\n        } else {\n          removed.forEach((queryToRemove: QueryContext) => {\n            const tagToRemove = syncTree.queryToTagMap.get(\n              syncTreeMakeQueryKey_(queryToRemove)\n            );\n            syncTree.listenProvider_.stopListening(\n              syncTreeQueryForListening_(queryToRemove),\n              tagToRemove\n            );\n          });\n        }\n      }\n    }\n    // Now, clear all of the tags we're tracking for the removed listens\n    syncTreeRemoveTags_(syncTree, removed);\n  } else {\n    // No-op, this listener must've been already removed\n  }\n  return cancelEvents;\n}\n\n/**\n * Apply new server data for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  snap: Node,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey != null) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new Overwrite(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      snap\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // Query must have been removed already\n    return [];\n  }\n}\n\n/**\n * Apply server data to be merged in for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const changeTree = ImmutableTree.fromObject(changedChildren);\n    const op = new Merge(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      changeTree\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeAddEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  skipSetupListener = false\n): Event[] {\n  const path = query._path;\n\n  let serverCache: Node | null = null;\n  let foundAncestorDefaultView = false;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(sp);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let serverCacheComplete;\n  if (serverCache != null) {\n    serverCacheComplete = true;\n  } else {\n    serverCacheComplete = false;\n    serverCache = ChildrenNode.EMPTY_NODE;\n    const subtree = syncTree.syncPointTree_.subtree(path);\n    subtree.foreachChild((childName, childSyncPoint) => {\n      const completeCache = syncPointGetCompleteServerCache(\n        childSyncPoint,\n        newEmptyPath()\n      );\n      if (completeCache) {\n        serverCache = serverCache.updateImmediateChild(\n          childName,\n          completeCache\n        );\n      }\n    });\n  }\n\n  const viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\n  if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\n    // We need to track a tag for this query\n    const queryKey = syncTreeMakeQueryKey_(query);\n    assert(\n      !syncTree.queryToTagMap.has(queryKey),\n      'View does not exist, but we have a tag'\n    );\n    const tag = syncTreeGetNextQueryTag_();\n    syncTree.queryToTagMap.set(queryKey, tag);\n    syncTree.tagToQueryMap.set(tag, queryKey);\n  }\n  const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\n  let events = syncPointAddEventRegistration(\n    syncPoint,\n    query,\n    eventRegistration,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!viewAlreadyExists && !foundAncestorDefaultView && !skipSetupListener) {\n    const view = syncPointViewForQuery(syncPoint, query);\n    events = events.concat(syncTreeSetupListener_(syncTree, query, view));\n  }\n  return events;\n}\n\n/**\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\n *\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\n *\n * @param path - The path to the data we want\n * @param writeIdsToExclude - A specific set to be excluded\n */\nexport function syncTreeCalcCompleteEventCache(\n  syncTree: SyncTree,\n  path: Path,\n  writeIdsToExclude?: number[]\n): Node {\n  const includeHiddenSets = true;\n  const writeTree = syncTree.pendingWriteTree_;\n  const serverCache = syncTree.syncPointTree_.findOnPath(\n    path,\n    (pathSoFar, syncPoint) => {\n      const relativePath = newRelativePath(pathSoFar, path);\n      const serverCache = syncPointGetCompleteServerCache(\n        syncPoint,\n        relativePath\n      );\n      if (serverCache) {\n        return serverCache;\n      }\n    }\n  );\n  return writeTreeCalcCompleteEventCache(\n    writeTree,\n    path,\n    serverCache,\n    writeIdsToExclude,\n    includeHiddenSets\n  );\n}\n\nexport function syncTreeGetServerValue(\n  syncTree: SyncTree,\n  query: QueryContext\n): Node | null {\n  const path = query._path;\n  let serverCache: Node | null = null;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n  const serverCacheComplete = serverCache != null;\n  const serverCacheNode: CacheNode | null = serverCacheComplete\n    ? new CacheNode(serverCache, true, false)\n    : null;\n  const writesCache: WriteTreeRef | null = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    query._path\n  );\n  const view: View = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE,\n    serverCacheComplete\n  );\n  return viewGetCompleteNode(view);\n}\n\n/**\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\n *\n * NOTES:\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\n *\n * - We call applyOperation() on each SyncPoint passing three things:\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\n *   3. A snapshot Node with cached server data, if we have it.\n *\n * - We concatenate all of the events returned by each SyncPoint and return the result.\n */\nfunction syncTreeApplyOperationToSyncPoints_(\n  syncTree: SyncTree,\n  operation: Operation\n): Event[] {\n  return syncTreeApplyOperationHelper_(\n    operation,\n    syncTree.syncPointTree_,\n    /*serverCache=*/ null,\n    writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath())\n  );\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  if (pathIsEmpty(operation.path)) {\n    return syncTreeApplyOperationDescendantsHelper_(\n      operation,\n      syncPointTree,\n      serverCache,\n      writesCache\n    );\n  } else {\n    const syncPoint = syncPointTree.get(newEmptyPath());\n\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n    }\n\n    let events: Event[] = [];\n    const childName = pathGetFront(operation.path);\n    const childOperation = operation.operationForChild(childName);\n    const childTree = syncPointTree.children.get(childName);\n    if (childTree && childOperation) {\n      const childServerCache = serverCache\n        ? serverCache.getImmediateChild(childName)\n        : null;\n      const childWritesCache = writeTreeRefChild(writesCache, childName);\n      events = events.concat(\n        syncTreeApplyOperationHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n\n    if (syncPoint) {\n      events = events.concat(\n        syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationDescendantsHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  const syncPoint = syncPointTree.get(newEmptyPath());\n\n  // If we don't have cached server data, see if we can get it from this SyncPoint.\n  if (serverCache == null && syncPoint != null) {\n    serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let events: Event[] = [];\n  syncPointTree.children.inorderTraversal((childName, childTree) => {\n    const childServerCache = serverCache\n      ? serverCache.getImmediateChild(childName)\n      : null;\n    const childWritesCache = writeTreeRefChild(writesCache, childName);\n    const childOperation = operation.operationForChild(childName);\n    if (childOperation) {\n      events = events.concat(\n        syncTreeApplyOperationDescendantsHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n  });\n\n  if (syncPoint) {\n    events = events.concat(\n      syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n    );\n  }\n\n  return events;\n}\n\nfunction syncTreeCreateListenerForView_(\n  syncTree: SyncTree,\n  view: View\n): { hashFn(): string; onComplete(a: string, b?: unknown): Event[] } {\n  const query = view.query;\n  const tag = syncTreeTagForQuery(syncTree, query);\n\n  return {\n    hashFn: () => {\n      const cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\n      return cache.hash();\n    },\n    onComplete: (status: string): Event[] => {\n      if (status === 'ok') {\n        if (tag) {\n          return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\n        } else {\n          return syncTreeApplyListenComplete(syncTree, query._path);\n        }\n      } else {\n        // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n        // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n        const error = errorForServerCode(status, query);\n        return syncTreeRemoveEventRegistration(\n          syncTree,\n          query,\n          /*eventRegistration*/ null,\n          error\n        );\n      }\n    }\n  };\n}\n\n/**\n * Return the tag associated with the given query.\n */\nexport function syncTreeTagForQuery(\n  syncTree: SyncTree,\n  query: QueryContext\n): number | null {\n  const queryKey = syncTreeMakeQueryKey_(query);\n  return syncTree.queryToTagMap.get(queryKey);\n}\n\n/**\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\n */\nfunction syncTreeMakeQueryKey_(query: QueryContext): string {\n  return query._path.toString() + '$' + query._queryIdentifier;\n}\n\n/**\n * Return the query associated with the given tag, if we have one\n */\nfunction syncTreeQueryKeyForTag_(\n  syncTree: SyncTree,\n  tag: number\n): string | null {\n  return syncTree.tagToQueryMap.get(tag);\n}\n\n/**\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\n */\nfunction syncTreeParseQueryKey_(queryKey: string): {\n  queryId: string;\n  path: Path;\n} {\n  const splitIndex = queryKey.indexOf('$');\n  assert(\n    splitIndex !== -1 && splitIndex < queryKey.length - 1,\n    'Bad queryKey.'\n  );\n  return {\n    queryId: queryKey.substr(splitIndex + 1),\n    path: new Path(queryKey.substr(0, splitIndex))\n  };\n}\n\n/**\n * A helper method to apply tagged operations\n */\nfunction syncTreeApplyTaggedOperation_(\n  syncTree: SyncTree,\n  queryPath: Path,\n  operation: Operation\n): Event[] {\n  const syncPoint = syncTree.syncPointTree_.get(queryPath);\n  assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n  const writesCache = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    queryPath\n  );\n  return syncPointApplyOperation(syncPoint, operation, writesCache, null);\n}\n\n/**\n * This collapses multiple unfiltered views into a single view, since we only need a single\n * listener for them.\n */\nfunction syncTreeCollectDistinctViewsForSubTree_(\n  subtree: ImmutableTree<SyncPoint>\n): View[] {\n  return subtree.fold<View[]>((relativePath, maybeChildSyncPoint, childMap) => {\n    if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n      const completeView = syncPointGetCompleteView(maybeChildSyncPoint);\n      return [completeView];\n    } else {\n      // No complete view here, flatten any deeper listens into an array\n      let views: View[] = [];\n      if (maybeChildSyncPoint) {\n        views = syncPointGetQueryViews(maybeChildSyncPoint);\n      }\n      each(childMap, (_key: string, childViews: View[]) => {\n        views = views.concat(childViews);\n      });\n      return views;\n    }\n  });\n}\n\n/**\n * Normalizes a query to a query we send the server for listening\n *\n * @returns The normalized query\n */\nfunction syncTreeQueryForListening_(query: QueryContext): QueryContext {\n  if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\n    // We treat queries that load all data as default queries\n    // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n    // from Query\n    return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\n  } else {\n    return query;\n  }\n}\n\nfunction syncTreeRemoveTags_(syncTree: SyncTree, queries: QueryContext[]) {\n  for (let j = 0; j < queries.length; ++j) {\n    const removedQuery = queries[j];\n    if (!removedQuery._queryParams.loadsAllData()) {\n      // We should have a tag for this\n      const removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\n      const removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\n      syncTree.queryToTagMap.delete(removedQueryKey);\n      syncTree.tagToQueryMap.delete(removedQueryTag);\n    }\n  }\n}\n\n/**\n * Static accessor for query tags.\n */\nfunction syncTreeGetNextQueryTag_(): number {\n  return syncTreeNextQueryTag_++;\n}\n\n/**\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\n *\n * @returns This method can return events to support synchronous data sources\n */\nfunction syncTreeSetupListener_(\n  syncTree: SyncTree,\n  query: QueryContext,\n  view: View\n): Event[] {\n  const path = query._path;\n  const tag = syncTreeTagForQuery(syncTree, query);\n  const listener = syncTreeCreateListenerForView_(syncTree, view);\n\n  const events = syncTree.listenProvider_.startListening(\n    syncTreeQueryForListening_(query),\n    tag,\n    listener.hashFn,\n    listener.onComplete\n  );\n\n  const subtree = syncTree.syncPointTree_.subtree(path);\n  // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n  // may need to shadow other listens as well.\n  if (tag) {\n    assert(\n      !syncPointHasCompleteView(subtree.value),\n      \"If we're adding a query, it shouldn't be shadowed\"\n    );\n  } else {\n    // Shadow everything at or below this location, this is a default listener.\n    const queriesToStop = subtree.fold<QueryContext[]>(\n      (relativePath, maybeChildSyncPoint, childMap) => {\n        if (\n          !pathIsEmpty(relativePath) &&\n          maybeChildSyncPoint &&\n          syncPointHasCompleteView(maybeChildSyncPoint)\n        ) {\n          return [syncPointGetCompleteView(maybeChildSyncPoint).query];\n        } else {\n          // No default listener here, flatten any deeper queries into an array\n          let queries: QueryContext[] = [];\n          if (maybeChildSyncPoint) {\n            queries = queries.concat(\n              syncPointGetQueryViews(maybeChildSyncPoint).map(\n                view => view.query\n              )\n            );\n          }\n          each(childMap, (_key: string, childQueries: QueryContext[]) => {\n            queries = queries.concat(childQueries);\n          });\n          return queries;\n        }\n      }\n    );\n    for (let i = 0; i < queriesToStop.length; ++i) {\n      const queryToStop = queriesToStop[i];\n      syncTree.listenProvider_.stopListening(\n        syncTreeQueryForListening_(queryToStop),\n        syncTreeTagForQuery(syncTree, queryToStop)\n      );\n    }\n  }\n  return events;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { LeafNode } from '../snap/LeafNode';\nimport { Node } from '../snap/Node';\nimport { nodeFromJSON } from '../snap/nodeFromJSON';\nimport { SyncTree, syncTreeCalcCompleteEventCache } from '../SyncTree';\n\nimport { Indexable } from './misc';\nimport { Path, pathChild } from './Path';\n\n/* It's critical for performance that we do not calculate actual values from a SyncTree\n * unless and until the value is needed. Because we expose both a SyncTree and Node\n * version of deferred value resolution, we ned a wrapper class that will let us share\n * code.\n *\n * @see https://github.com/firebase/firebase-js-sdk/issues/2487\n */\ninterface ValueProvider {\n  getImmediateChild(childName: string): ValueProvider;\n  node(): Node;\n}\n\nclass ExistingValueProvider implements ValueProvider {\n  constructor(readonly node_: Node) {}\n\n  getImmediateChild(childName: string): ValueProvider {\n    const child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  }\n\n  node(): Node {\n    return this.node_;\n  }\n}\n\nclass DeferredValueProvider implements ValueProvider {\n  private syncTree_: SyncTree;\n  private path_: Path;\n\n  constructor(syncTree: SyncTree, path: Path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  getImmediateChild(childName: string): ValueProvider {\n    const childPath = pathChild(this.path_, childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  }\n\n  node(): Node {\n    return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\n  }\n}\n\n/**\n * Generate placeholders for deferred values.\n */\nexport const generateWithValues = function (\n  values: {\n    [k: string]: unknown;\n  } | null\n): { [k: string]: unknown } {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n\n/**\n * Value to use when firing local events. When writing server values, fire\n * local events with an approximate value, otherwise return value as-is.\n */\nexport const resolveDeferredLeafValue = function (\n  value: { [k: string]: unknown } | string | number | boolean,\n  existingVal: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  if (!value || typeof value !== 'object') {\n    return value as string | number | boolean;\n  }\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal, serverValues);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nconst resolveScalarDeferredValue = function (\n  op: string,\n  existing: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'] as string | number | boolean;\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nconst resolveComplexDeferredValue = function (\n  op: object,\n  existing: ValueProvider,\n  unused: { [k: string]: unknown }\n): string | number | boolean {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n  const delta = op['increment'];\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  const existingNode = existing.node();\n  assert(\n    existingNode !== null && typeof existingNode !== 'undefined',\n    'Expected ChildrenNode.EMPTY_NODE for nulls'\n  );\n\n  // Incrementing a non-number sets the value to the incremented amount\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  const leaf = existingNode as LeafNode;\n  const existingVal = leaf.getValue();\n  if (typeof existingVal !== 'number') {\n    return delta;\n  }\n\n  // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n  return existingVal + delta;\n};\n\n/**\n * Recursively replace all deferred values and priorities in the tree with the\n * specified generated replacement values.\n * @param path - path to which write is relative\n * @param node - new data written at path\n * @param syncTree - current data\n */\nexport const resolveDeferredValueTree = function (\n  path: Path,\n  node: Node,\n  syncTree: SyncTree,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new DeferredValueProvider(syncTree, path),\n    serverValues\n  );\n};\n\n/**\n * Recursively replace all deferred values and priorities in the node with the\n * specified generated replacement values.  If there are no server values in the node,\n * it'll be returned as-is.\n */\nexport const resolveDeferredValueSnapshot = function (\n  node: Node,\n  existing: Node,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new ExistingValueProvider(existing),\n    serverValues\n  );\n};\n\nfunction resolveDeferredValue(\n  node: Node,\n  existingVal: ValueProvider,\n  serverValues: Indexable\n): Node {\n  const rawPri = node.getPriority().val() as\n    | Indexable\n    | boolean\n    | null\n    | number\n    | string;\n  const priority = resolveDeferredLeafValue(\n    rawPri,\n    existingVal.getImmediateChild('.priority'),\n    serverValues\n  );\n  let newNode: Node;\n\n  if (node.isLeafNode()) {\n    const leafNode = node as LeafNode;\n    const value = resolveDeferredLeafValue(\n      leafNode.getValue(),\n      existingVal,\n      serverValues\n    );\n    if (\n      value !== leafNode.getValue() ||\n      priority !== leafNode.getPriority().val()\n    ) {\n      return new LeafNode(value, nodeFromJSON(priority));\n    } else {\n      return node;\n    }\n  } else {\n    const childrenNode = node as ChildrenNode;\n    newNode = childrenNode;\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n    childrenNode.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\n      const newChildNode = resolveDeferredValue(\n        childNode,\n        existingVal.getImmediateChild(childName),\n        serverValues\n      );\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, safeGet } from '@firebase/util';\n\nimport { Path, pathGetFront, pathPopFront } from './Path';\nimport { each } from './util';\n\n/**\n * Node in a Tree.\n */\nexport interface TreeNode<T> {\n  // TODO: Consider making accessors that create children and value lazily or\n  // separate Internal / Leaf 'types'.\n  children: Record<string, TreeNode<T>>;\n  childCount: number;\n  value?: T;\n}\n\n/**\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\n * children.\n */\nexport class Tree<T> {\n  /**\n   * @param name - Optional name of the node.\n   * @param parent - Optional parent node.\n   * @param node - Optional node to wrap.\n   */\n  constructor(\n    readonly name: string = '',\n    readonly parent: Tree<T> | null = null,\n    public node: TreeNode<T> = { children: {}, childCount: 0 }\n  ) {}\n}\n\n/**\n * Returns a sub-Tree for the given path.\n *\n * @param pathObj - Path to look up.\n * @returns Tree for path.\n */\nexport function treeSubTree<T>(tree: Tree<T>, pathObj: string | Path): Tree<T> {\n  // TODO: Require pathObj to be Path?\n  let path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n  let child = tree,\n    next = pathGetFront(path);\n  while (next !== null) {\n    const childNode = safeGet(child.node.children, next) || {\n      children: {},\n      childCount: 0\n    };\n    child = new Tree<T>(next, child, childNode);\n    path = pathPopFront(path);\n    next = pathGetFront(path);\n  }\n\n  return child;\n}\n\n/**\n * Returns the data associated with this tree node.\n *\n * @returns The data or null if no data exists.\n */\nexport function treeGetValue<T>(tree: Tree<T>): T | undefined {\n  return tree.node.value;\n}\n\n/**\n * Sets data to this tree node.\n *\n * @param value - Value to set.\n */\nexport function treeSetValue<T>(tree: Tree<T>, value: T | undefined): void {\n  tree.node.value = value;\n  treeUpdateParents(tree);\n}\n\n/**\n * @returns Whether the tree has any children.\n */\nexport function treeHasChildren<T>(tree: Tree<T>): boolean {\n  return tree.node.childCount > 0;\n}\n\n/**\n * @returns Whethe rthe tree is empty (no value or children).\n */\nexport function treeIsEmpty<T>(tree: Tree<T>): boolean {\n  return treeGetValue(tree) === undefined && !treeHasChildren(tree);\n}\n\n/**\n * Calls action for each child of this tree node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachChild<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  each(tree.node.children, (child: string, childTree: TreeNode<T>) => {\n    action(new Tree<T>(child, tree, childTree));\n  });\n}\n\n/**\n * Does a depth-first traversal of this node's descendants, calling action for each one.\n *\n * @param action - Action to be called for each child.\n * @param includeSelf - Whether to call action on this node as well. Defaults to\n *   false.\n * @param childrenFirst - Whether to call action on children before calling it on\n *   parent.\n */\nexport function treeForEachDescendant<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void,\n  includeSelf?: boolean,\n  childrenFirst?: boolean\n): void {\n  if (includeSelf && !childrenFirst) {\n    action(tree);\n  }\n\n  treeForEachChild(tree, child => {\n    treeForEachDescendant(child, action, true, childrenFirst);\n  });\n\n  if (includeSelf && childrenFirst) {\n    action(tree);\n  }\n}\n\n/**\n * Calls action on each ancestor node.\n *\n * @param action - Action to be called on each parent; return\n *   true to abort.\n * @param includeSelf - Whether to call action on this node as well.\n * @returns true if the action callback returned true.\n */\nexport function treeForEachAncestor<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => unknown,\n  includeSelf?: boolean\n): boolean {\n  let node = includeSelf ? tree : tree.parent;\n  while (node !== null) {\n    if (action(node)) {\n      return true;\n    }\n    node = node.parent;\n  }\n  return false;\n}\n\n/**\n * Does a depth-first traversal of this node's descendants.  When a descendant with a value\n * is found, action is called on it and traversal does not continue inside the node.\n * Action is *not* called on this node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachImmediateDescendantWithValue<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  treeForEachChild(tree, child => {\n    if (treeGetValue(child) !== undefined) {\n      action(child);\n    } else {\n      treeForEachImmediateDescendantWithValue(child, action);\n    }\n  });\n}\n\n/**\n * @returns The path of this tree node, as a Path.\n */\nexport function treeGetPath<T>(tree: Tree<T>) {\n  return new Path(\n    tree.parent === null\n      ? tree.name\n      : treeGetPath(tree.parent) + '/' + tree.name\n  );\n}\n\n/**\n * Adds or removes this child from its parent based on whether it's empty or not.\n */\nfunction treeUpdateParents<T>(tree: Tree<T>) {\n  if (tree.parent !== null) {\n    treeUpdateChild(tree.parent, tree.name, tree);\n  }\n}\n\n/**\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\n *\n * @param childName - The name of the child to update.\n * @param child - The child to update.\n */\nfunction treeUpdateChild<T>(tree: Tree<T>, childName: string, child: Tree<T>) {\n  const childEmpty = treeIsEmpty(child);\n  const childExists = contains(tree.node.children, childName);\n  if (childEmpty && childExists) {\n    delete tree.node.children[childName];\n    tree.node.childCount--;\n    treeUpdateParents(tree);\n  } else if (!childEmpty && !childExists) {\n    tree.node.children[childName] = child.node;\n    tree.node.childCount++;\n    treeUpdateParents(tree);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  contains,\n  errorPrefix as errorPrefixFxn,\n  safeGet,\n  stringLength\n} from '@firebase/util';\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport {\n  Path,\n  pathChild,\n  pathCompare,\n  pathContains,\n  pathGetBack,\n  pathGetFront,\n  pathSlice,\n  ValidationPath,\n  validationPathPop,\n  validationPathPush,\n  validationPathToErrorString\n} from './Path';\nimport { each, isInvalidJSONNumber } from './util';\n\n/**\n * True for invalid Firebase keys\n */\nexport const INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n\n/**\n * True for invalid Firebase paths.\n * Allows '/' in paths.\n */\nexport const INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n\n/**\n * Maximum number of characters to allow in leaf value\n */\nexport const MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n\nexport const isValidKey = function (key: unknown): boolean {\n  return (\n    typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key)\n  );\n};\n\nexport const isValidPathString = function (pathString: string): boolean {\n  return (\n    typeof pathString === 'string' &&\n    pathString.length !== 0 &&\n    !INVALID_PATH_REGEX_.test(pathString)\n  );\n};\n\nexport const isValidRootPathString = function (pathString: string): boolean {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n\nexport const isValidPriority = function (priority: unknown): boolean {\n  return (\n    priority === null ||\n    typeof priority === 'string' ||\n    (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\n    (priority &&\n      typeof priority === 'object' &&\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      contains(priority as any, '.sv'))\n  );\n};\n\n/**\n * Pre-validate a datum passed as an argument to Firebase function.\n */\nexport const validateFirebaseDataArg = function (\n  fnName: string,\n  value: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && value === undefined) {\n    return;\n  }\n\n  validateFirebaseData(errorPrefixFxn(fnName, 'value'), value, path);\n};\n\n/**\n * Validate a data object client-side before sending to server.\n */\nexport const validateFirebaseData = function (\n  errorPrefix: string,\n  data: unknown,\n  path_: Path | ValidationPath\n) {\n  const path =\n    path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(\n      errorPrefix + 'contains undefined ' + validationPathToErrorString(path)\n    );\n  }\n  if (typeof data === 'function') {\n    throw new Error(\n      errorPrefix +\n        'contains a function ' +\n        validationPathToErrorString(path) +\n        ' with contents = ' +\n        data.toString()\n    );\n  }\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(\n      errorPrefix +\n        'contains ' +\n        data.toString() +\n        ' ' +\n        validationPathToErrorString(path)\n    );\n  }\n\n  // Check max leaf size, but try to avoid the utf8 conversion if we can.\n  if (\n    typeof data === 'string' &&\n    data.length > MAX_LEAF_SIZE_ / 3 &&\n    stringLength(data) > MAX_LEAF_SIZE_\n  ) {\n    throw new Error(\n      errorPrefix +\n        'contains a string greater than ' +\n        MAX_LEAF_SIZE_ +\n        ' utf8 bytes ' +\n        validationPathToErrorString(path) +\n        \" ('\" +\n        data.substring(0, 50) +\n        \"...')\"\n    );\n  }\n\n  // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n  if (data && typeof data === 'object') {\n    let hasDotValue = false;\n    let hasActualChild = false;\n    each(data, (key: string, value: unknown) => {\n      if (key === '.value') {\n        hasDotValue = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild = true;\n        if (!isValidKey(key)) {\n          throw new Error(\n            errorPrefix +\n              ' contains an invalid key (' +\n              key +\n              ') ' +\n              validationPathToErrorString(path) +\n              '.  Keys must be non-empty strings ' +\n              'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n          );\n        }\n      }\n\n      validationPathPush(path, key);\n      validateFirebaseData(errorPrefix, value, path);\n      validationPathPop(path);\n    });\n\n    if (hasDotValue && hasActualChild) {\n      throw new Error(\n        errorPrefix +\n          ' contains \".value\" child ' +\n          validationPathToErrorString(path) +\n          ' in addition to actual children.'\n      );\n    }\n  }\n};\n\n/**\n * Pre-validate paths passed in the firebase function.\n */\nexport const validateFirebaseMergePaths = function (\n  errorPrefix: string,\n  mergePaths: Path[]\n) {\n  let i, curPath: Path;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    const keys = pathSlice(curPath);\n    for (let j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) {\n        // .priority is OK\n      } else if (!isValidKey(keys[j])) {\n        throw new Error(\n          errorPrefix +\n            'contains an invalid key (' +\n            keys[j] +\n            ') in path ' +\n            curPath.toString() +\n            '. Keys must be non-empty strings ' +\n            'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n        );\n      }\n    }\n  }\n\n  // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n  mergePaths.sort(pathCompare);\n  let prevPath: Path | null = null;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    if (prevPath !== null && pathContains(prevPath, curPath)) {\n      throw new Error(\n        errorPrefix +\n          'contains a path ' +\n          prevPath.toString() +\n          ' that is ancestor of another path ' +\n          curPath.toString()\n      );\n    }\n    prevPath = curPath;\n  }\n};\n\n/**\n * pre-validate an object passed as an argument to firebase function (\n * must be an object - e.g. for firebase.update()).\n */\nexport const validateFirebaseMergeDataArg = function (\n  fnName: string,\n  data: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  const errorPrefix = errorPrefixFxn(fnName, 'values');\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(\n      errorPrefix + ' must be an object containing the children to replace.'\n    );\n  }\n\n  const mergePaths: Path[] = [];\n  each(data, (key: string, value: unknown) => {\n    const curPath = new Path(key);\n    validateFirebaseData(errorPrefix, value, pathChild(path, curPath));\n    if (pathGetBack(curPath) === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(\n          errorPrefix +\n            \"contains an invalid value for '\" +\n            curPath.toString() +\n            \"', which must be a valid \" +\n            'Firebase priority (a string, finite number, server value, or null).'\n        );\n      }\n    }\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\n\nexport const validatePriority = function (\n  fnName: string,\n  priority: unknown,\n  optional: boolean\n) {\n  if (optional && priority === undefined) {\n    return;\n  }\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'is ' +\n        priority.toString() +\n        ', but must be a valid Firebase priority (a string, finite number, ' +\n        'server value, or null).'\n    );\n  }\n  // Special case to allow importing data with a .sv.\n  if (!isValidPriority(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'must be a valid Firebase priority ' +\n        '(a string, finite number, server value, or null).'\n    );\n  }\n};\n\nexport const validateKey = function (\n  fnName: string,\n  argumentName: string,\n  key: string,\n  optional: boolean\n) {\n  if (optional && key === undefined) {\n    return;\n  }\n  if (!isValidKey(key)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid key = \"' +\n        key +\n        '\".  Firebase keys must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").'\n    );\n  }\n};\n\n/**\n * @internal\n */\nexport const validatePathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid path = \"' +\n        pathString +\n        '\". Paths must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"'\n    );\n  }\n};\n\nexport const validateRootPathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentName, pathString, optional);\n};\n\n/**\n * @internal\n */\nexport const validateWritablePath = function (fnName: string, path: Path) {\n  if (pathGetFront(path) === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nexport const validateUrl = function (\n  fnName: string,\n  parsedUrl: { repoInfo: RepoInfo; path: Path }\n) {\n  // TODO = Validate server better.\n  const pathString = parsedUrl.path.toString();\n  if (\n    !(typeof parsedUrl.repoInfo.host === 'string') ||\n    parsedUrl.repoInfo.host.length === 0 ||\n    (!isValidKey(parsedUrl.repoInfo.namespace) &&\n      parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\n    (pathString.length !== 0 && !isValidRootPathString(pathString))\n  ) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'url') +\n        'must be a valid firebase URL and ' +\n        'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".'\n    );\n  }\n};\n\nexport const validateString = function (\n  fnName: string,\n  argumentName: string,\n  string: unknown,\n  optional: boolean\n) {\n  if (optional && string === undefined) {\n    return;\n  }\n  if (!(typeof string === 'string')) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid string.'\n    );\n  }\n};\n\nexport const validateObject = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  optional: boolean\n) {\n  if (optional && obj === undefined) {\n    return;\n  }\n  if (!(obj && typeof obj === 'object') || obj === null) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid object.'\n    );\n  }\n};\n\nexport const validateObjectContainsKey = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  key: string,\n  optional: boolean,\n  optType?: string\n) {\n  const objectContainsKey =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    obj && typeof obj === 'object' && contains(obj as any, key);\n\n  if (!objectContainsKey) {\n    if (optional) {\n      return;\n    } else {\n      throw new Error(\n        errorPrefixFxn(fnName, argumentName) +\n          'must contain the key \"' +\n          key +\n          '\"'\n      );\n    }\n  }\n\n  if (optType) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const val = safeGet(obj as any, key);\n    if (\n      (optType === 'number' && !(typeof val === 'number')) ||\n      (optType === 'string' && !(typeof val === 'string')) ||\n      (optType === 'boolean' && !(typeof val === 'boolean')) ||\n      (optType === 'function' && !(typeof val === 'function')) ||\n      (optType === 'object' && !(typeof val === 'object') && val)\n    ) {\n      if (optional) {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'contains invalid value for key \"' +\n            key +\n            '\" (must be of type \"' +\n            optType +\n            '\")'\n        );\n      } else {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'must contain the key \"' +\n            key +\n            '\" with type \"' +\n            optType +\n            '\"'\n        );\n      }\n    }\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path, pathContains, pathEquals } from '../util/Path';\nimport { exceptionGuard, log, logger } from '../util/util';\n\nimport { Event } from './Event';\n\n/**\n * The event queue serves a few purposes:\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\n *    events being queued.\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\n *    left off, ensuring that the events are still raised synchronously and in order.\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\n *    events are raised synchronously.\n *\n * NOTE: This can all go away if/when we move to async events.\n *\n */\nexport class EventQueue {\n  eventLists_: EventList[] = [];\n\n  /**\n   * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\n   */\n  recursionDepth_ = 0;\n}\n\n/**\n * @param eventDataList - The new events to queue.\n */\nexport function eventQueueQueueEvents(\n  eventQueue: EventQueue,\n  eventDataList: Event[]\n) {\n  // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n  let currList: EventList | null = null;\n  for (let i = 0; i < eventDataList.length; i++) {\n    const data = eventDataList[i];\n    const path = data.getPath();\n    if (currList !== null && !pathEquals(path, currList.path)) {\n      eventQueue.eventLists_.push(currList);\n      currList = null;\n    }\n\n    if (currList === null) {\n      currList = { events: [], path };\n    }\n\n    currList.events.push(data);\n  }\n  if (currList) {\n    eventQueue.eventLists_.push(currList);\n  }\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones)\n * for the specified path.\n *\n * It is assumed that the new events are all for the specified path.\n *\n * @param path - The path to raise events for.\n * @param eventDataList - The new events to raise.\n */\nexport function eventQueueRaiseEventsAtPath(\n  eventQueue: EventQueue,\n  path: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath =>\n    pathEquals(eventPath, path)\n  );\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\n * locations related to the specified change path (i.e. all ancestors and descendants).\n *\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\n *\n * @param changedPath - The path to raise events for.\n * @param eventDataList - The events to raise\n */\nexport function eventQueueRaiseEventsForChangedPath(\n  eventQueue: EventQueue,\n  changedPath: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(\n    eventQueue,\n    eventPath =>\n      pathContains(eventPath, changedPath) ||\n      pathContains(changedPath, eventPath)\n  );\n}\n\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(\n  eventQueue: EventQueue,\n  predicate: (path: Path) => boolean\n) {\n  eventQueue.recursionDepth_++;\n\n  let sentAll = true;\n  for (let i = 0; i < eventQueue.eventLists_.length; i++) {\n    const eventList = eventQueue.eventLists_[i];\n    if (eventList) {\n      const eventPath = eventList.path;\n      if (predicate(eventPath)) {\n        eventListRaise(eventQueue.eventLists_[i]);\n        eventQueue.eventLists_[i] = null;\n      } else {\n        sentAll = false;\n      }\n    }\n  }\n\n  if (sentAll) {\n    eventQueue.eventLists_ = [];\n  }\n\n  eventQueue.recursionDepth_--;\n}\n\ninterface EventList {\n  events: Event[];\n  path: Path;\n}\n\n/**\n * Iterates through the list and raises each event\n */\nfunction eventListRaise(eventList: EventList) {\n  for (let i = 0; i < eventList.events.length; i++) {\n    const eventData = eventList.events[i];\n    if (eventData !== null) {\n      eventList.events[i] = null;\n      const eventFn = eventData.getEventRunner();\n      if (logger) {\n        log('event: ' + eventData.toString());\n      }\n      exceptionGuard(eventFn);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  isEmpty,\n  map,\n  safeGet,\n  stringify\n} from '@firebase/util';\n\nimport { ValueEventRegistration } from '../api/Reference_impl';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { PersistentConnection } from './PersistentConnection';\nimport { ReadonlyRestClient } from './ReadonlyRestClient';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { nodeFromJSON } from './snap/nodeFromJSON';\nimport { SnapshotHolder } from './SnapshotHolder';\nimport {\n  newSparseSnapshotTree,\n  SparseSnapshotTree,\n  sparseSnapshotTreeForEachTree,\n  sparseSnapshotTreeForget,\n  sparseSnapshotTreeRemember\n} from './SparseSnapshotTree';\nimport { StatsCollection } from './stats/StatsCollection';\nimport { StatsListener } from './stats/StatsListener';\nimport {\n  statsManagerGetCollection,\n  statsManagerGetOrCreateReporter\n} from './stats/StatsManager';\nimport { StatsReporter, statsReporterIncludeStat } from './stats/StatsReporter';\nimport {\n  SyncTree,\n  syncTreeAckUserWrite,\n  syncTreeAddEventRegistration,\n  syncTreeApplyServerMerge,\n  syncTreeApplyServerOverwrite,\n  syncTreeApplyTaggedQueryMerge,\n  syncTreeApplyTaggedQueryOverwrite,\n  syncTreeApplyUserMerge,\n  syncTreeApplyUserOverwrite,\n  syncTreeCalcCompleteEventCache,\n  syncTreeGetServerValue,\n  syncTreeRemoveEventRegistration,\n  syncTreeTagForQuery\n} from './SyncTree';\nimport { Indexable } from './util/misc';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathPopFront\n} from './util/Path';\nimport {\n  generateWithValues,\n  resolveDeferredValueSnapshot,\n  resolveDeferredValueTree\n} from './util/ServerValues';\nimport {\n  Tree,\n  treeForEachAncestor,\n  treeForEachChild,\n  treeForEachDescendant,\n  treeGetPath,\n  treeGetValue,\n  treeHasChildren,\n  treeSetValue,\n  treeSubTree\n} from './util/Tree';\nimport {\n  beingCrawled,\n  each,\n  exceptionGuard,\n  log,\n  LUIDGenerator,\n  warn\n} from './util/util';\nimport { isValidPriority, validateFirebaseData } from './util/validation';\nimport { Event } from './view/Event';\nimport {\n  EventQueue,\n  eventQueueQueueEvents,\n  eventQueueRaiseEventsAtPath,\n  eventQueueRaiseEventsForChangedPath\n} from './view/EventQueue';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\n\nconst INTERRUPT_REASON = 'repo_interrupt';\n\n/**\n * If a transaction does not succeed after 25 retries, we abort it. Among other\n * things this ensure that if there's ever a bug causing a mismatch between\n * client / server hashes for some data, we won't retry indefinitely.\n */\nconst MAX_TRANSACTION_RETRIES = 25;\n\nconst enum TransactionStatus {\n  // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n  // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n  // mismatched hash.\n  RUN,\n\n  // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n  // or rejected yet).\n  SENT,\n\n  // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n  // removed when we get a chance to prune completed ones.\n  COMPLETED,\n\n  // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n  // If it comes back as unsuccessful, we'll abort it.\n  SENT_NEEDS_ABORT,\n\n  // Temporary state used to mark transactions that need to be aborted.\n  NEEDS_ABORT\n}\n\ninterface Transaction {\n  path: Path;\n  update: (a: unknown) => unknown;\n  onComplete: (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => void;\n  status: TransactionStatus;\n  order: number;\n  applyLocally: boolean;\n  retryCount: number;\n  unwatcher: () => void;\n  abortReason: string | null;\n  currentWriteId: number;\n  currentInputSnapshot: Node | null;\n  currentOutputSnapshotRaw: Node | null;\n  currentOutputSnapshotResolved: Node | null;\n}\n\n/**\n * A connection to a single data repository.\n */\nexport class Repo {\n  /** Key for uniquely identifying this repo, used in RepoManager */\n  readonly key: string;\n\n  dataUpdateCount = 0;\n  infoSyncTree_: SyncTree;\n  serverSyncTree_: SyncTree;\n\n  stats_: StatsCollection;\n  statsListener_: StatsListener | null = null;\n  eventQueue_ = new EventQueue();\n  nextWriteId_ = 1;\n  server_: ServerActions;\n  statsReporter_: StatsReporter;\n  infoData_: SnapshotHolder;\n  interceptServerDataCallback_: ((a: string, b: unknown) => void) | null = null;\n\n  /** A list of data pieces and paths to be set when this client disconnects. */\n  onDisconnect_: SparseSnapshotTree = newSparseSnapshotTree();\n\n  /** Stores queues of outstanding transactions for Firebase locations. */\n  transactionQueueTree_ = new Tree<Transaction[]>();\n\n  // TODO: This should be @private but it's used by test_access.js and internal.js\n  persistentConnection_: PersistentConnection | null = null;\n\n  constructor(\n    public repoInfo_: RepoInfo,\n    public forceRestClient_: boolean,\n    public authTokenProvider_: AuthTokenProvider,\n    public appCheckProvider_: AppCheckTokenProvider\n  ) {\n    // This key is intentionally not updated if RepoInfo is later changed or replaced\n    this.key = this.repoInfo_.toURLString();\n  }\n\n  /**\n   * @returns The URL corresponding to the root of this Firebase.\n   */\n  toString(): string {\n    return (\n      (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host\n    );\n  }\n}\n\nexport function repoStart(\n  repo: Repo,\n  appId: string,\n  authOverride?: object\n): void {\n  repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\n\n  if (repo.forceRestClient_ || beingCrawled()) {\n    repo.server_ = new ReadonlyRestClient(\n      repo.repoInfo_,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_\n    );\n\n    // Minor hack: Fire onConnect immediately, since there's no actual connection.\n    setTimeout(() => repoOnConnectStatus(repo, /* connectStatus= */ true), 0);\n  } else {\n    // Validate authOverride\n    if (typeof authOverride !== 'undefined' && authOverride !== null) {\n      if (typeof authOverride !== 'object') {\n        throw new Error(\n          'Only objects are supported for option databaseAuthVariableOverride'\n        );\n      }\n      try {\n        stringify(authOverride);\n      } catch (e) {\n        throw new Error('Invalid authOverride provided: ' + e);\n      }\n    }\n\n    repo.persistentConnection_ = new PersistentConnection(\n      repo.repoInfo_,\n      appId,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      (connectStatus: boolean) => {\n        repoOnConnectStatus(repo, connectStatus);\n      },\n      (updates: object) => {\n        repoOnServerInfoUpdate(repo, updates);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_,\n      authOverride\n    );\n\n    repo.server_ = repo.persistentConnection_;\n  }\n\n  repo.authTokenProvider_.addTokenChangeListener(token => {\n    repo.server_.refreshAuthToken(token);\n  });\n\n  repo.appCheckProvider_.addTokenChangeListener(result => {\n    repo.server_.refreshAppCheckToken(result.token);\n  });\n\n  // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n  // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n  repo.statsReporter_ = statsManagerGetOrCreateReporter(\n    repo.repoInfo_,\n    () => new StatsReporter(repo.stats_, repo.server_)\n  );\n\n  // Used for .info.\n  repo.infoData_ = new SnapshotHolder();\n  repo.infoSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      let infoEvents: Event[] = [];\n      const node = repo.infoData_.getNode(query._path);\n      // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n      // on initial data...\n      if (!node.isEmpty()) {\n        infoEvents = syncTreeApplyServerOverwrite(\n          repo.infoSyncTree_,\n          query._path,\n          node\n        );\n        setTimeout(() => {\n          onComplete('ok');\n        }, 0);\n      }\n      return infoEvents;\n    },\n    stopListening: () => {}\n  });\n  repoUpdateInfo(repo, 'connected', false);\n\n  repo.serverSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      repo.server_.listen(query, currentHashFn, tag, (status, data) => {\n        const events = onComplete(status, data);\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          query._path,\n          events\n        );\n      });\n      // No synchronous events for network-backed sync trees\n      return [];\n    },\n    stopListening: (query, tag) => {\n      repo.server_.unlisten(query, tag);\n    }\n  });\n}\n\n/**\n * @returns The time in milliseconds, taking the server offset into account if we have one.\n */\nexport function repoServerTime(repo: Repo): number {\n  const offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\n  const offset = (offsetNode.val() as number) || 0;\n  return new Date().getTime() + offset;\n}\n\n/**\n * Generate ServerValues using some variables from the repo object.\n */\nexport function repoGenerateServerValues(repo: Repo): Indexable {\n  return generateWithValues({\n    timestamp: repoServerTime(repo)\n  });\n}\n\n/**\n * Called by realtime when we get new messages from the server.\n */\nfunction repoOnDataUpdate(\n  repo: Repo,\n  pathString: string,\n  data: unknown,\n  isMerge: boolean,\n  tag: number | null\n): void {\n  // For testing.\n  repo.dataUpdateCount++;\n  const path = new Path(pathString);\n  data = repo.interceptServerDataCallback_\n    ? repo.interceptServerDataCallback_(pathString, data)\n    : data;\n  let events = [];\n  if (tag) {\n    if (isMerge) {\n      const taggedChildren = map(\n        data as { [k: string]: unknown },\n        (raw: unknown) => nodeFromJSON(raw)\n      );\n      events = syncTreeApplyTaggedQueryMerge(\n        repo.serverSyncTree_,\n        path,\n        taggedChildren,\n        tag\n      );\n    } else {\n      const taggedSnap = nodeFromJSON(data);\n      events = syncTreeApplyTaggedQueryOverwrite(\n        repo.serverSyncTree_,\n        path,\n        taggedSnap,\n        tag\n      );\n    }\n  } else if (isMerge) {\n    const changedChildren = map(\n      data as { [k: string]: unknown },\n      (raw: unknown) => nodeFromJSON(raw)\n    );\n    events = syncTreeApplyServerMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren\n    );\n  } else {\n    const snap = nodeFromJSON(data);\n    events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\n  }\n  let affectedPath = path;\n  if (events.length > 0) {\n    // Since we have a listener outstanding for each transaction, receiving any events\n    // is a proxy for some change having occurred.\n    affectedPath = repoRerunTransactions(repo, path);\n  }\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\n}\n\n// TODO: This should be @private but it's used by test_access.js and internal.js\nexport function repoInterceptServerData(\n  repo: Repo,\n  callback: ((a: string, b: unknown) => unknown) | null\n): void {\n  repo.interceptServerDataCallback_ = callback;\n}\n\nfunction repoOnConnectStatus(repo: Repo, connectStatus: boolean): void {\n  repoUpdateInfo(repo, 'connected', connectStatus);\n  if (connectStatus === false) {\n    repoRunOnDisconnectEvents(repo);\n  }\n}\n\nfunction repoOnServerInfoUpdate(repo: Repo, updates: object): void {\n  each(updates, (key: string, value: unknown) => {\n    repoUpdateInfo(repo, key, value);\n  });\n}\n\nfunction repoUpdateInfo(repo: Repo, pathString: string, value: unknown): void {\n  const path = new Path('/.info/' + pathString);\n  const newNode = nodeFromJSON(value);\n  repo.infoData_.updateSnapshot(path, newNode);\n  const events = syncTreeApplyServerOverwrite(\n    repo.infoSyncTree_,\n    path,\n    newNode\n  );\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n}\n\nfunction repoGetNextWriteId(repo: Repo): number {\n  return repo.nextWriteId_++;\n}\n\n/**\n * The purpose of `getValue` is to return the latest known value\n * satisfying `query`.\n *\n * This method will first check for in-memory cached values\n * belonging to active listeners. If they are found, such values\n * are considered to be the most up-to-date.\n *\n * If the client is not connected, this method will wait until the\n *  repo has established a connection and then request the value for `query`.\n * If the client is not able to retrieve the query result for another reason,\n * it reports an error.\n *\n * @param query - The query to surface a value for.\n */\nexport function repoGetValue(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: ValueEventRegistration\n): Promise<Node> {\n  // Only active queries are cached. There is no persisted cache.\n  const cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\n  if (cached != null) {\n    return Promise.resolve(cached);\n  }\n  return repo.server_.get(query).then(\n    payload => {\n      const node = nodeFromJSON(payload).withIndex(\n        query._queryParams.getIndex()\n      );\n      /**\n       * Below we simulate the actions of an `onlyOnce` `onValue()` event where:\n       * Add an event registration,\n       * Update data at the path,\n       * Raise any events,\n       * Cleanup the SyncTree\n       */\n      syncTreeAddEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        true\n      );\n      let events: Event[];\n      if (query._queryParams.loadsAllData()) {\n        events = syncTreeApplyServerOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node\n        );\n      } else {\n        const tag = syncTreeTagForQuery(repo.serverSyncTree_, query);\n        events = syncTreeApplyTaggedQueryOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node,\n          tag\n        );\n      }\n      /*\n       * We need to raise events in the scenario where `get()` is called at a parent path, and\n       * while the `get()` is pending, `onValue` is called at a child location. While get() is waiting\n       * for the data, `onValue` will register a new event. Then, get() will come back, and update the syncTree\n       * and its corresponding serverCache, including the child location where `onValue` is called. Then,\n       * `onValue` will receive the event from the server, but look at the syncTree and see that the data received\n       * from the server is already at the SyncPoint, and so the `onValue` callback will never get fired.\n       * Calling `eventQueueRaiseEventsForChangedPath()` is the correct way to propagate the events and\n       * ensure the corresponding child events will get fired.\n       */\n      eventQueueRaiseEventsForChangedPath(\n        repo.eventQueue_,\n        query._path,\n        events\n      );\n      syncTreeRemoveEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        null,\n        true\n      );\n      return node;\n    },\n    err => {\n      repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\n      return Promise.reject(new Error(err as string));\n    }\n  );\n}\n\nexport function repoSetWithPriority(\n  repo: Repo,\n  path: Path,\n  newVal: unknown,\n  newPriority: number | string | null,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'set', {\n    path: path.toString(),\n    value: newVal,\n    priority: newPriority\n  });\n\n  // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n  // (b) store unresolved paths on JSON parse\n  const serverValues = repoGenerateServerValues(repo);\n  const newNodeUnresolved = nodeFromJSON(newVal, newPriority);\n  const existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\n  const newNode = resolveDeferredValueSnapshot(\n    newNodeUnresolved,\n    existing,\n    serverValues\n  );\n\n  const writeId = repoGetNextWriteId(repo);\n  const events = syncTreeApplyUserOverwrite(\n    repo.serverSyncTree_,\n    path,\n    newNode,\n    writeId,\n    true\n  );\n  eventQueueQueueEvents(repo.eventQueue_, events);\n  repo.server_.put(\n    path.toString(),\n    newNodeUnresolved.val(/*export=*/ true),\n    (status, errorReason) => {\n      const success = status === 'ok';\n      if (!success) {\n        warn('set at ' + path + ' failed: ' + status);\n      }\n\n      const clearEvents = syncTreeAckUserWrite(\n        repo.serverSyncTree_,\n        writeId,\n        !success\n      );\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n  const affectedPath = repoAbortTransactions(repo, path);\n  repoRerunTransactions(repo, affectedPath);\n  // We queued the events above, so just flush the queue here\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\n}\n\nexport function repoUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\n\n  // Start with our existing data and merge each child into it.\n  let empty = true;\n  const serverValues = repoGenerateServerValues(repo);\n  const changedChildren: { [k: string]: Node } = {};\n  each(childrenToMerge, (changedKey: string, changedValue: unknown) => {\n    empty = false;\n    changedChildren[changedKey] = resolveDeferredValueTree(\n      pathChild(path, changedKey),\n      nodeFromJSON(changedValue),\n      repo.serverSyncTree_,\n      serverValues\n    );\n  });\n\n  if (!empty) {\n    const writeId = repoGetNextWriteId(repo);\n    const events = syncTreeApplyUserMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren,\n      writeId\n    );\n    eventQueueQueueEvents(repo.eventQueue_, events);\n    repo.server_.merge(\n      path.toString(),\n      childrenToMerge,\n      (status, errorReason) => {\n        const success = status === 'ok';\n        if (!success) {\n          warn('update at ' + path + ' failed: ' + status);\n        }\n\n        const clearEvents = syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          writeId,\n          !success\n        );\n        const affectedPath =\n          clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          affectedPath,\n          clearEvents\n        );\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n      }\n    );\n\n    each(childrenToMerge, (changedPath: string) => {\n      const affectedPath = repoAbortTransactions(\n        repo,\n        pathChild(path, changedPath)\n      );\n      repoRerunTransactions(repo, affectedPath);\n    });\n\n    // We queued the events above, so just flush the queue here\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\n  } else {\n    log(\"update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n  }\n}\n\n/**\n * Applies all of the changes stored up in the onDisconnect_ tree.\n */\nfunction repoRunOnDisconnectEvents(repo: Repo): void {\n  repoLog(repo, 'onDisconnectEvents');\n\n  const serverValues = repoGenerateServerValues(repo);\n  const resolvedOnDisconnectTree = newSparseSnapshotTree();\n  sparseSnapshotTreeForEachTree(\n    repo.onDisconnect_,\n    newEmptyPath(),\n    (path, node) => {\n      const resolved = resolveDeferredValueTree(\n        path,\n        node,\n        repo.serverSyncTree_,\n        serverValues\n      );\n      sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\n    }\n  );\n  let events: Event[] = [];\n\n  sparseSnapshotTreeForEachTree(\n    resolvedOnDisconnectTree,\n    newEmptyPath(),\n    (path, snap) => {\n      events = events.concat(\n        syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap)\n      );\n      const affectedPath = repoAbortTransactions(repo, path);\n      repoRerunTransactions(repo, affectedPath);\n    }\n  );\n\n  repo.onDisconnect_ = newSparseSnapshotTree();\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\n}\n\nexport function repoOnDisconnectCancel(\n  repo: Repo,\n  path: Path,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repo.server_.onDisconnectCancel(path.toString(), (status, errorReason) => {\n    if (status === 'ok') {\n      sparseSnapshotTreeForget(repo.onDisconnect_, path);\n    }\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nexport function repoOnDisconnectSet(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectSetWithPriority(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  priority: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value, priority);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  if (isEmpty(childrenToMerge)) {\n    log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n    return;\n  }\n\n  repo.server_.onDisconnectMerge(\n    path.toString(),\n    childrenToMerge,\n    (status, errorReason) => {\n      if (status === 'ok') {\n        each(childrenToMerge, (childName: string, childNode: unknown) => {\n          const newChildNode = nodeFromJSON(childNode);\n          sparseSnapshotTreeRemember(\n            repo.onDisconnect_,\n            pathChild(path, childName),\n            newChildNode\n          );\n        });\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoAddEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeAddEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeAddEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoRemoveEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n  // a little bit by handling the return values anyways.\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeRemoveEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeRemoveEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoInterrupt(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.interrupt(INTERRUPT_REASON);\n  }\n}\n\nexport function repoResume(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.resume(INTERRUPT_REASON);\n  }\n}\n\nexport function repoStats(repo: Repo, showDelta: boolean = false): void {\n  if (typeof console === 'undefined') {\n    return;\n  }\n\n  let stats: { [k: string]: unknown };\n  if (showDelta) {\n    if (!repo.statsListener_) {\n      repo.statsListener_ = new StatsListener(repo.stats_);\n    }\n    stats = repo.statsListener_.get();\n  } else {\n    stats = repo.stats_.get();\n  }\n\n  const longestName = Object.keys(stats).reduce(\n    (previousValue, currentValue) =>\n      Math.max(currentValue.length, previousValue),\n    0\n  );\n\n  each(stats, (stat: string, value: unknown) => {\n    let paddedStat = stat;\n    // pad stat names to be the same length (plus 2 extra spaces).\n    for (let i = stat.length; i < longestName + 2; i++) {\n      paddedStat += ' ';\n    }\n    console.log(paddedStat + value);\n  });\n}\n\nexport function repoStatsIncrementCounter(repo: Repo, metric: string): void {\n  repo.stats_.incrementCounter(metric);\n  statsReporterIncludeStat(repo.statsReporter_, metric);\n}\n\nfunction repoLog(repo: Repo, ...varArgs: unknown[]): void {\n  let prefix = '';\n  if (repo.persistentConnection_) {\n    prefix = repo.persistentConnection_.id + ':';\n  }\n  log(prefix, ...varArgs);\n}\n\nexport function repoCallOnCompleteCallback(\n  repo: Repo,\n  callback: ((status: Error | null, errorReason?: string) => void) | null,\n  status: string,\n  errorReason?: string | null\n): void {\n  if (callback) {\n    exceptionGuard(() => {\n      if (status === 'ok') {\n        callback(null);\n      } else {\n        const code = (status || 'error').toUpperCase();\n        let message = code;\n        if (errorReason) {\n          message += ': ' + errorReason;\n        }\n\n        const error = new Error(message);\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (error as any).code = code;\n        callback(error);\n      }\n    });\n  }\n}\n\n/**\n * Creates a new transaction, adds it to the transactions we're tracking, and\n * sends it to the server if possible.\n *\n * @param path - Path at which to do transaction.\n * @param transactionUpdate - Update callback.\n * @param onComplete - Completion callback.\n * @param unwatcher - Function that will be called when the transaction no longer\n * need data updates for `path`.\n * @param applyLocally - Whether or not to make intermediate results visible\n */\nexport function repoStartTransaction(\n  repo: Repo,\n  path: Path,\n  transactionUpdate: (a: unknown) => unknown,\n  onComplete: ((error: Error, committed: boolean, node: Node) => void) | null,\n  unwatcher: () => void,\n  applyLocally: boolean\n): void {\n  repoLog(repo, 'transaction on ' + path);\n\n  // Initialize transaction.\n  const transaction: Transaction = {\n    path,\n    update: transactionUpdate,\n    onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out\n    // which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  };\n\n  // Run transaction initially.\n  const currentState = repoGetLatestState(repo, path, undefined);\n  transaction.currentInputSnapshot = currentState;\n  const newVal = transaction.update(currentState.val());\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n    if (transaction.onComplete) {\n      transaction.onComplete(null, false, transaction.currentInputSnapshot);\n    }\n  } else {\n    validateFirebaseData(\n      'transaction failed: Data returned ',\n      newVal,\n      transaction.path\n    );\n\n    // Mark as run and add to our queue.\n    transaction.status = TransactionStatus.RUN;\n    const queueNode = treeSubTree(repo.transactionQueueTree_, path);\n    const nodeQueue = treeGetValue(queueNode) || [];\n    nodeQueue.push(transaction);\n\n    treeSetValue(queueNode, nodeQueue);\n\n    // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our\n    // transaction state, since the user could start new transactions from the\n    // event callbacks.\n    let priorityForNode;\n    if (\n      typeof newVal === 'object' &&\n      newVal !== null &&\n      contains(newVal, '.priority')\n    ) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      priorityForNode = safeGet(newVal as any, '.priority');\n      assert(\n        isValidPriority(priorityForNode),\n        'Invalid priority returned by transaction. ' +\n          'Priority must be a valid string, finite number, server value, or null.'\n      );\n    } else {\n      const currentNode =\n        syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\n        ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n\n    const serverValues = repoGenerateServerValues(repo);\n    const newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\n    const newNode = resolveDeferredValueSnapshot(\n      newNodeUnresolved,\n      currentState,\n      serverValues\n    );\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = repoGetNextWriteId(repo);\n\n    const events = syncTreeApplyUserOverwrite(\n      repo.serverSyncTree_,\n      path,\n      newNode,\n      transaction.currentWriteId,\n      transaction.applyLocally\n    );\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n  }\n}\n\n/**\n * @param excludeSets - A specific set to exclude\n */\nfunction repoGetLatestState(\n  repo: Repo,\n  path: Path,\n  excludeSets?: number[]\n): Node {\n  return (\n    syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\n    ChildrenNode.EMPTY_NODE\n  );\n}\n\n/**\n * Sends any already-run transactions that aren't waiting for outstanding\n * transactions to complete.\n *\n * Externally it's called with no arguments, but it calls itself recursively\n * with a particular transactionQueueTree node to recurse through the tree.\n *\n * @param node - transactionQueueTree node to start at.\n */\nfunction repoSendReadyTransactions(\n  repo: Repo,\n  node: Tree<Transaction[]> = repo.transactionQueueTree_\n): void {\n  // Before recursing, make sure any completed transactions are removed.\n  if (!node) {\n    repoPruneCompletedTransactionsBelowNode(repo, node);\n  }\n\n  if (treeGetValue(node)) {\n    const queue = repoBuildTransactionQueue(repo, node);\n    assert(queue.length > 0, 'Sending zero length transaction queue');\n\n    const allRun = queue.every(\n      (transaction: Transaction) => transaction.status === TransactionStatus.RUN\n    );\n\n    // If they're all run (and not sent), we can send them.  Else, we must wait.\n    if (allRun) {\n      repoSendTransactionQueue(repo, treeGetPath(node), queue);\n    }\n  } else if (treeHasChildren(node)) {\n    treeForEachChild(node, childNode => {\n      repoSendReadyTransactions(repo, childNode);\n    });\n  }\n}\n\n/**\n * Given a list of run transactions, send them to the server and then handle\n * the result (success or failure).\n *\n * @param path - The location of the queue.\n * @param queue - Queue of transactions under the specified location.\n */\nfunction repoSendTransactionQueue(\n  repo: Repo,\n  path: Path,\n  queue: Transaction[]\n): void {\n  // Mark transactions as sent and increment retry count!\n  const setsToIgnore = queue.map(txn => {\n    return txn.currentWriteId;\n  });\n  const latestState = repoGetLatestState(repo, path, setsToIgnore);\n  let snapToSend = latestState;\n  const latestHash = latestState.hash();\n  for (let i = 0; i < queue.length; i++) {\n    const txn = queue[i];\n    assert(\n      txn.status === TransactionStatus.RUN,\n      'tryToSendTransactionQueue_: items in queue should all be run.'\n    );\n    txn.status = TransactionStatus.SENT;\n    txn.retryCount++;\n    const relativePath = newRelativePath(path, txn.path);\n    // If we've gotten to this point, the output snapshot must be defined.\n    snapToSend = snapToSend.updateChild(\n      relativePath /** @type {!Node} */,\n      txn.currentOutputSnapshotRaw\n    );\n  }\n\n  const dataToSend = snapToSend.val(true);\n  const pathToSend = path;\n\n  // Send the put.\n  repo.server_.put(\n    pathToSend.toString(),\n    dataToSend,\n    (status: string) => {\n      repoLog(repo, 'transaction put response', {\n        path: pathToSend.toString(),\n        status\n      });\n\n      let events: Event[] = [];\n      if (status === 'ok') {\n        // Queue up the callbacks and fire them after cleaning up all of our\n        // transaction state, since the callback could trigger more\n        // transactions or sets.\n        const callbacks = [];\n        for (let i = 0; i < queue.length; i++) {\n          queue[i].status = TransactionStatus.COMPLETED;\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId)\n          );\n          if (queue[i].onComplete) {\n            // We never unset the output snapshot, and given that this\n            // transaction is complete, it should be set\n            callbacks.push(() =>\n              queue[i].onComplete(\n                null,\n                true,\n                queue[i].currentOutputSnapshotResolved\n              )\n            );\n          }\n          queue[i].unwatcher();\n        }\n\n        // Now remove the completed transactions.\n        repoPruneCompletedTransactionsBelowNode(\n          repo,\n          treeSubTree(repo.transactionQueueTree_, path)\n        );\n        // There may be pending transactions that we can now send.\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n        // Finally, trigger onComplete callbacks.\n        for (let i = 0; i < callbacks.length; i++) {\n          exceptionGuard(callbacks[i]);\n        }\n      } else {\n        // transactions are no longer sent.  Update their status appropriately.\n        if (status === 'datastale') {\n          for (let i = 0; i < queue.length; i++) {\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n              queue[i].status = TransactionStatus.NEEDS_ABORT;\n            } else {\n              queue[i].status = TransactionStatus.RUN;\n            }\n          }\n        } else {\n          warn(\n            'transaction at ' + pathToSend.toString() + ' failed: ' + status\n          );\n          for (let i = 0; i < queue.length; i++) {\n            queue[i].status = TransactionStatus.NEEDS_ABORT;\n            queue[i].abortReason = status;\n          }\n        }\n\n        repoRerunTransactions(repo, path);\n      }\n    },\n    latestHash\n  );\n}\n\n/**\n * Finds all transactions dependent on the data at changedPath and reruns them.\n *\n * Should be called any time cached data changes.\n *\n * Return the highest path that was affected by rerunning transactions. This\n * is the path at which events need to be raised for.\n *\n * @param changedPath - The path in mergedData that changed.\n * @returns The rootmost path that was affected by rerunning transactions.\n */\nfunction repoRerunTransactions(repo: Repo, changedPath: Path): Path {\n  const rootMostTransactionNode = repoGetAncestorTransactionNode(\n    repo,\n    changedPath\n  );\n  const path = treeGetPath(rootMostTransactionNode);\n\n  const queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\n  repoRerunTransactionQueue(repo, queue, path);\n\n  return path;\n}\n\n/**\n * Does all the work of rerunning transactions (as well as cleans up aborted\n * transactions and whatnot).\n *\n * @param queue - The queue of transactions to run.\n * @param path - The path the queue is for.\n */\nfunction repoRerunTransactionQueue(\n  repo: Repo,\n  queue: Transaction[],\n  path: Path\n): void {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  }\n\n  // Queue up the callbacks and fire them after cleaning up all of our\n  // transaction state, since the callback could trigger more transactions or\n  // sets.\n  const callbacks = [];\n  let events: Event[] = [];\n  // Ignore all of the sets we're going to re-run.\n  const txnsToRerun = queue.filter(q => {\n    return q.status === TransactionStatus.RUN;\n  });\n  const setsToIgnore = txnsToRerun.map(q => {\n    return q.currentWriteId;\n  });\n  for (let i = 0; i < queue.length; i++) {\n    const transaction = queue[i];\n    const relativePath = newRelativePath(path, transaction.path);\n    let abortTransaction = false,\n      abortReason;\n    assert(\n      relativePath !== null,\n      'rerunTransactionsUnderNode_: relativePath should not be null.'\n    );\n\n    if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n      abortTransaction = true;\n      abortReason = transaction.abortReason;\n      events = events.concat(\n        syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          transaction.currentWriteId,\n          true\n        )\n      );\n    } else if (transaction.status === TransactionStatus.RUN) {\n      if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\n        abortTransaction = true;\n        abortReason = 'maxretry';\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            transaction.currentWriteId,\n            true\n          )\n        );\n      } else {\n        // This code reruns a transaction\n        const currentNode = repoGetLatestState(\n          repo,\n          transaction.path,\n          setsToIgnore\n        );\n        transaction.currentInputSnapshot = currentNode;\n        const newData = queue[i].update(currentNode.val());\n        if (newData !== undefined) {\n          validateFirebaseData(\n            'transaction failed: Data returned ',\n            newData,\n            transaction.path\n          );\n          let newDataNode = nodeFromJSON(newData);\n          const hasExplicitPriority =\n            typeof newData === 'object' &&\n            newData != null &&\n            contains(newData, '.priority');\n          if (!hasExplicitPriority) {\n            // Keep the old priority if there wasn't a priority explicitly specified.\n            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n          }\n\n          const oldWriteId = transaction.currentWriteId;\n          const serverValues = repoGenerateServerValues(repo);\n          const newNodeResolved = resolveDeferredValueSnapshot(\n            newDataNode,\n            currentNode,\n            serverValues\n          );\n\n          transaction.currentOutputSnapshotRaw = newDataNode;\n          transaction.currentOutputSnapshotResolved = newNodeResolved;\n          transaction.currentWriteId = repoGetNextWriteId(repo);\n          // Mutates setsToIgnore in place\n          setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n          events = events.concat(\n            syncTreeApplyUserOverwrite(\n              repo.serverSyncTree_,\n              transaction.path,\n              newNodeResolved,\n              transaction.currentWriteId,\n              transaction.applyLocally\n            )\n          );\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true)\n          );\n        } else {\n          abortTransaction = true;\n          abortReason = 'nodata';\n          events = events.concat(\n            syncTreeAckUserWrite(\n              repo.serverSyncTree_,\n              transaction.currentWriteId,\n              true\n            )\n          );\n        }\n      }\n    }\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    events = [];\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = TransactionStatus.COMPLETED;\n\n      // Removing a listener can trigger pruning which can muck with\n      // mergedData/visibleData (as it prunes data). So defer the unwatcher\n      // until we're done.\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          callbacks.push(() =>\n            queue[i].onComplete(null, false, queue[i].currentInputSnapshot)\n          );\n        } else {\n          callbacks.push(() =>\n            queue[i].onComplete(new Error(abortReason), false, null)\n          );\n        }\n      }\n    }\n  }\n\n  // Clean up completed transactions.\n  repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\n\n  // Now fire callbacks, now that we're in a good, known state.\n  for (let i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  }\n\n  // Try to send the transaction result to the server.\n  repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n}\n\n/**\n * Returns the rootmost ancestor node of the specified path that has a pending\n * transaction on it, or just returns the node for the given path if there are\n * no pending transactions on any ancestor.\n *\n * @param path - The location to start at.\n * @returns The rootmost node with a transaction.\n */\nfunction repoGetAncestorTransactionNode(\n  repo: Repo,\n  path: Path\n): Tree<Transaction[]> {\n  let front;\n\n  // Start at the root and walk deeper into the tree towards path until we\n  // find a node with pending transactions.\n  let transactionNode = repo.transactionQueueTree_;\n  front = pathGetFront(path);\n  while (front !== null && treeGetValue(transactionNode) === undefined) {\n    transactionNode = treeSubTree(transactionNode, front);\n    path = pathPopFront(path);\n    front = pathGetFront(path);\n  }\n\n  return transactionNode;\n}\n\n/**\n * Builds the queue of all transactions at or below the specified\n * transactionNode.\n *\n * @param transactionNode\n * @returns The generated queue.\n */\nfunction repoBuildTransactionQueue(\n  repo: Repo,\n  transactionNode: Tree<Transaction[]>\n): Transaction[] {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  const transactionQueue: Transaction[] = [];\n  repoAggregateTransactionQueuesForNode(\n    repo,\n    transactionNode,\n    transactionQueue\n  );\n\n  // Sort them by the order the transactions were created.\n  transactionQueue.sort((a, b) => a.order - b.order);\n\n  return transactionQueue;\n}\n\nfunction repoAggregateTransactionQueuesForNode(\n  repo: Repo,\n  node: Tree<Transaction[]>,\n  queue: Transaction[]\n): void {\n  const nodeQueue = treeGetValue(node);\n  if (nodeQueue) {\n    for (let i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  treeForEachChild(node, child => {\n    repoAggregateTransactionQueuesForNode(repo, child, queue);\n  });\n}\n\n/**\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\n */\nfunction repoPruneCompletedTransactionsBelowNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    let to = 0;\n    for (let from = 0; from < queue.length; from++) {\n      if (queue[from].status !== TransactionStatus.COMPLETED) {\n        queue[to] = queue[from];\n        to++;\n      }\n    }\n    queue.length = to;\n    treeSetValue(node, queue.length > 0 ? queue : undefined);\n  }\n\n  treeForEachChild(node, childNode => {\n    repoPruneCompletedTransactionsBelowNode(repo, childNode);\n  });\n}\n\n/**\n * Aborts all transactions on ancestors or descendants of the specified path.\n * Called when doing a set() or update() since we consider them incompatible\n * with transactions.\n *\n * @param path - Path for which we want to abort related transactions.\n */\nfunction repoAbortTransactions(repo: Repo, path: Path): Path {\n  const affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\n\n  const transactionNode = treeSubTree(repo.transactionQueueTree_, path);\n\n  treeForEachAncestor(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  repoAbortTransactionsOnNode(repo, transactionNode);\n\n  treeForEachDescendant(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  return affectedPath;\n}\n\n/**\n * Abort transactions stored in this transaction queue node.\n *\n * @param node - Node to abort transactions for.\n */\nfunction repoAbortTransactionsOnNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    // Queue up the callbacks and fire them after cleaning up all of our\n    // transaction state, since the callback could trigger more transactions\n    // or sets.\n    const callbacks = [];\n\n    // Go through queue.  Any already-sent transactions must be marked for\n    // abort, while the unsent ones can be immediately aborted and removed.\n    let events: Event[] = [];\n    let lastSent = -1;\n    for (let i = 0; i < queue.length; i++) {\n      if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n        // Already marked.  No action needed.\n      } else if (queue[i].status === TransactionStatus.SENT) {\n        assert(\n          lastSent === i - 1,\n          'All SENT items should be at beginning of queue.'\n        );\n        lastSent = i;\n        // Mark transaction for abort when it comes back.\n        queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n        queue[i].abortReason = 'set';\n      } else {\n        assert(\n          queue[i].status === TransactionStatus.RUN,\n          'Unexpected transaction status in abort'\n        );\n        // We can abort it immediately.\n        queue[i].unwatcher();\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            queue[i].currentWriteId,\n            true\n          )\n        );\n        if (queue[i].onComplete) {\n          callbacks.push(\n            queue[i].onComplete.bind(null, new Error('set'), false, null)\n          );\n        }\n      }\n    }\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      treeSetValue(node, undefined);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    }\n\n    // Now fire the callbacks.\n    eventQueueRaiseEventsForChangedPath(\n      repo.eventQueue_,\n      treeGetPath(node),\n      events\n    );\n    for (let i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../../RepoInfo';\nimport { Path } from '../Path';\nimport { warnIfPageIsSecure, warn, fatal } from '../util';\n\nfunction decodePath(pathString: string): string {\n  let pathStringDecoded = '';\n  const pieces = pathString.split('/');\n  for (let i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      let piece = pieces[i];\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n      pathStringDecoded += '/' + piece;\n    }\n  }\n  return pathStringDecoded;\n}\n\n/**\n * @returns key value hash\n */\nfunction decodeQuery(queryString: string): { [key: string]: string } {\n  const results = {};\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n  for (const segment of queryString.split('&')) {\n    if (segment.length === 0) {\n      continue;\n    }\n    const kv = segment.split('=');\n    if (kv.length === 2) {\n      results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n    } else {\n      warn(`Invalid query segment '${segment}' in query '${queryString}'`);\n    }\n  }\n  return results;\n}\n\nexport const parseRepoInfo = function (\n  dataURL: string,\n  nodeAdmin: boolean\n): { repoInfo: RepoInfo; path: Path } {\n  const parsedUrl = parseDatabaseURL(dataURL),\n    namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(\n      parsedUrl.host +\n        ' is no longer supported. ' +\n        'Please use <YOUR FIREBASE>.firebaseio.com instead'\n    );\n  }\n\n  // Catch common error of uninitialized namespace value.\n  if (\n    (!namespace || namespace === 'undefined') &&\n    parsedUrl.domain !== 'localhost'\n  ) {\n    fatal(\n      'Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com'\n    );\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  const webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n\n  return {\n    repoInfo: new RepoInfo(\n      parsedUrl.host,\n      parsedUrl.secure,\n      namespace,\n      webSocketOnly,\n      nodeAdmin,\n      /*persistenceKey=*/ '',\n      /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain\n    ),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n\nexport const parseDatabaseURL = function (dataURL: string): {\n  host: string;\n  port: number;\n  domain: string;\n  subdomain: string;\n  secure: boolean;\n  scheme: string;\n  pathString: string;\n  namespace: string;\n} {\n  // Default to empty strings in the event of a malformed string.\n  let host = '',\n    domain = '',\n    subdomain = '',\n    pathString = '',\n    namespace = '';\n\n  // Always default to SSL, unless otherwise specified.\n  let secure = true,\n    scheme = 'https',\n    port = 443;\n\n  // Don't do any validation here. The caller is responsible for validating the result of parsing.\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    let colonInd = dataURL.indexOf('//');\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    }\n\n    // Parse host, path, and query string.\n    let slashInd = dataURL.indexOf('/');\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n    let questionMarkInd = dataURL.indexOf('?');\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n    const queryParams = decodeQuery(\n      dataURL.substring(Math.min(dataURL.length, questionMarkInd))\n    );\n\n    // If we have a port, use scheme for determining if it's secure.\n    colonInd = host.indexOf(':');\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    const hostWithoutPort = host.slice(0, colonInd);\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      const dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1);\n      // Normalize namespaces to lowercase to share storage / connection.\n      namespace = subdomain;\n    }\n    // Always treat the value of the `ns` as the namespace name if it is present.\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host,\n    port,\n    domain,\n    subdomain,\n    secure,\n    scheme,\n    pathString,\n    namespace\n  };\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport {\n  tryParseInt,\n  MAX_NAME,\n  MIN_NAME,\n  INTEGER_32_MIN,\n  INTEGER_32_MAX\n} from '../util/util';\n\n// Modeled after base64 web-safe chars, but ordered by ASCII.\nconst PUSH_CHARS =\n  '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\nconst MIN_PUSH_CHAR = '-';\n\nconst MAX_PUSH_CHAR = 'z';\n\nconst MAX_KEY_LEN = 786;\n\n/**\n * Fancy ID generator that creates 20-character string identifiers with the\n * following properties:\n *\n * 1. They're based on timestamp so that they sort *after* any existing ids.\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\n *    collide with other clients' IDs.\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\n *    that will sort properly).\n * 4. They're monotonically increasing. Even if you generate more than one in\n *    the same timestamp, the latter ones will sort after the former ones. We do\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\n *    in the case of a timestamp collision).\n */\nexport const nextPushId = (function () {\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  let lastPushTime = 0;\n\n  // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n  const lastRandChars: number[] = [];\n\n  return function (now: number) {\n    const duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n\n    let i;\n    const timeStampChars = new Array(8);\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n      // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n      now = Math.floor(now / 64);\n    }\n    assert(now === 0, 'Cannot push at time == 0');\n\n    let id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n      lastRandChars[i]++;\n    }\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n\n    return id;\n  };\n})();\n\nexport const successor = function (key: string) {\n  if (key === '' + INTEGER_32_MAX) {\n    // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\n    return MIN_PUSH_CHAR;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt + 1);\n  }\n  const next = new Array(key.length);\n\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n\n  if (next.length < MAX_KEY_LEN) {\n    next.push(MIN_PUSH_CHAR);\n    return next.join('');\n  }\n\n  let i = next.length - 1;\n\n  while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\n    i--;\n  }\n\n  // `successor` was called on the largest possible key, so return the\n  // MAX_NAME, which sorts larger than all keys.\n  if (i === -1) {\n    return MAX_NAME;\n  }\n\n  const source = next[i];\n  const sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\n  next[i] = sourcePlusOne;\n\n  return next.slice(0, i + 1).join('');\n};\n\n// `key` is assumed to be non-empty.\nexport const predecessor = function (key: string) {\n  if (key === '' + INTEGER_32_MIN) {\n    return MIN_NAME;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt - 1);\n  }\n  const next = new Array(key.length);\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n  // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n  // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n  // than that, `predecessor(predecessor(key))`, is\n  //\n  // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n  //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n  //\n  // analogous to increment/decrement for base-10 integers.\n  //\n  // This works because lexigographic comparison works character-by-character,\n  // using length as a tie-breaker if one key is a prefix of the other.\n  if (next[next.length - 1] === MIN_PUSH_CHAR) {\n    if (next.length === 1) {\n      // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\n      return '' + INTEGER_32_MAX;\n    }\n    delete next[next.length - 1];\n    return next.join('');\n  }\n  // Replace the last character with it's immediate predecessor, and\n  // fill the suffix of the key with MAX_PUSH_CHAR. This is the\n  // lexicographically largest possible key smaller than `key`.\n  next[next.length - 1] = PUSH_CHARS.charAt(\n    PUSH_CHARS.indexOf(next[next.length - 1]) - 1\n  );\n  return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringify } from '@firebase/util';\n\nimport { DataSnapshot as ExpDataSnapshot } from '../../api/Reference_impl';\nimport { Path } from '../util/Path';\n\nimport { EventRegistration } from './EventRegistration';\n\n/**\n * Encapsulates the data needed to raise an event\n * @interface\n */\nexport interface Event {\n  getPath(): Path;\n\n  getEventType(): string;\n\n  getEventRunner(): () => void;\n\n  toString(): string;\n}\n\n/**\n * One of the following strings: \"value\", \"child_added\", \"child_changed\",\n * \"child_removed\", or \"child_moved.\"\n */\nexport type EventType =\n  | 'value'\n  | 'child_added'\n  | 'child_changed'\n  | 'child_moved'\n  | 'child_removed';\n\n/**\n * Encapsulates the data needed to raise an event\n */\nexport class DataEvent implements Event {\n  /**\n   * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\n   * @param eventRegistration - The function to call to with the event data. User provided\n   * @param snapshot - The data backing the event\n   * @param prevName - Optional, the name of the previous child for child_* events.\n   */\n  constructor(\n    public eventType: EventType,\n    public eventRegistration: EventRegistration,\n    public snapshot: ExpDataSnapshot,\n    public prevName?: string | null\n  ) {}\n  getPath(): Path {\n    const ref = this.snapshot.ref;\n    if (this.eventType === 'value') {\n      return ref._path;\n    } else {\n      return ref.parent._path;\n    }\n  }\n  getEventType(): string {\n    return this.eventType;\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return (\n      this.getPath().toString() +\n      ':' +\n      this.eventType +\n      ':' +\n      stringify(this.snapshot.exportVal())\n    );\n  }\n}\n\nexport class CancelEvent implements Event {\n  constructor(\n    public eventRegistration: EventRegistration,\n    public error: Error,\n    public path: Path\n  ) {}\n  getPath(): Path {\n    return this.path;\n  }\n  getEventType(): string {\n    return 'cancel';\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return this.path.toString() + ':cancel';\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { DataSnapshot } from '../../api/Reference_impl';\nimport { Repo } from '../Repo';\nimport { Path } from '../util/Path';\n\nimport { Change } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport { QueryParams } from './QueryParams';\n\n/**\n * A user callback. Callbacks issues from the Legacy SDK maintain references\n * to the original user-issued callbacks, which allows equality\n * comparison by reference even though this callbacks are wrapped before\n * they can be passed to the firebase@exp SDK.\n *\n * @internal\n */\nexport interface UserCallback {\n  (dataSnapshot: DataSnapshot, previousChildName?: string | null): unknown;\n  userCallback?: unknown;\n  context?: object | null;\n}\n\n/**\n * A wrapper class that converts events from the database@exp SDK to the legacy\n * Database SDK. Events are not converted directly as event registration relies\n * on reference comparison of the original user callback (see `matches()`) and\n * relies on equality of the legacy SDK's `context` object.\n */\nexport class CallbackContext {\n  constructor(\n    private readonly snapshotCallback: UserCallback,\n    private readonly cancelCallback?: (error: Error) => unknown\n  ) {}\n\n  onValue(\n    expDataSnapshot: DataSnapshot,\n    previousChildName?: string | null\n  ): void {\n    this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\n  }\n\n  onCancel(error: Error): void {\n    assert(\n      this.hasCancelCallback,\n      'Raising a cancel event on a listener with no cancel callback'\n    );\n    return this.cancelCallback.call(null, error);\n  }\n\n  get hasCancelCallback(): boolean {\n    return !!this.cancelCallback;\n  }\n\n  matches(other: CallbackContext): boolean {\n    return (\n      this.snapshotCallback === other.snapshotCallback ||\n      (this.snapshotCallback.userCallback !== undefined &&\n        this.snapshotCallback.userCallback ===\n          other.snapshotCallback.userCallback &&\n        this.snapshotCallback.context === other.snapshotCallback.context)\n    );\n  }\n}\n\nexport interface QueryContext {\n  readonly _queryIdentifier: string;\n  readonly _queryObject: object;\n  readonly _repo: Repo;\n  readonly _path: Path;\n  readonly _queryParams: QueryParams;\n}\n\n/**\n * An EventRegistration is basically an event type ('value', 'child_added', etc.) and a callback\n * to be notified of that type of event.\n *\n * That said, it can also contain a cancel callback to be notified if the event is canceled.  And\n * currently, this code is organized around the idea that you would register multiple child_ callbacks\n * together, as a single EventRegistration.  Though currently we don't do that.\n */\nexport interface EventRegistration {\n  /**\n   * True if this container has a callback to trigger for this event type\n   */\n  respondsTo(eventType: string): boolean;\n\n  createEvent(change: Change, query: QueryContext): Event;\n\n  /**\n   * Given event data, return a function to trigger the user's callback\n   */\n  getEventRunner(eventData: Event): () => void;\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null;\n\n  matches(other: EventRegistration): boolean;\n\n  /**\n   * False basically means this is a \"dummy\" callback container being used as a sentinel\n   * to remove all callback containers of a particular type.  (e.g. if the user does\n   * ref.off('value') without specifying a specific callback).\n   *\n   * (TODO: Rework this, since it's hacky)\n   *\n   */\n  hasAnyCallback(): boolean;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoOnDisconnectCancel,\n  repoOnDisconnectSet,\n  repoOnDisconnectSetWithPriority,\n  repoOnDisconnectUpdate\n} from '../core/Repo';\nimport { Path } from '../core/util/Path';\nimport {\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validatePriority,\n  validateWritablePath\n} from '../core/util/validation';\n\n/**\n * The `onDisconnect` class allows you to write or clear data when your client\n * disconnects from the Database server. These updates occur whether your\n * client disconnects cleanly or not, so you can rely on them to clean up data\n * even if a connection is dropped or a client crashes.\n *\n * The `onDisconnect` class is most commonly used to manage presence in\n * applications where it is useful to detect how many clients are connected and\n * when other clients disconnect. See\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information.\n *\n * To avoid problems when a connection is dropped before the requests can be\n * transferred to the Database server, these functions should be called before\n * writing any data.\n *\n * Note that `onDisconnect` operations are only triggered once. If you want an\n * operation to occur each time a disconnect occurs, you'll need to re-establish\n * the `onDisconnect` operations each time you reconnect.\n */\nexport class OnDisconnect {\n  /** @hideconstructor */\n  constructor(private _repo: Repo, private _path: Path) {}\n\n  /**\n   * Cancels all previously queued `onDisconnect()` set or update events for this\n   * location and all children.\n   *\n   * If a write has been queued for this location via a `set()` or `update()` at a\n   * parent location, the write at this location will be canceled, though writes\n   * to sibling locations will still occur.\n   *\n   * @returns Resolves when synchronization to the server is complete.\n   */\n  cancel(): Promise<void> {\n    const deferred = new Deferred<void>();\n    repoOnDisconnectCancel(\n      this._repo,\n      this._path,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is deleted when the client is disconnected\n   * (due to closing the browser, navigating to a new page, or network issues).\n   *\n   * @returns Resolves when synchronization to the server is complete.\n   */\n  remove(): Promise<void> {\n    validateWritablePath('OnDisconnect.remove', this._path);\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSet(\n      this._repo,\n      this._path,\n      null,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is set to the specified value when the\n   * client is disconnected (due to closing the browser, navigating to a new page,\n   * or network issues).\n   *\n   * `set()` is especially useful for implementing \"presence\" systems, where a\n   * value should be changed or cleared when a user disconnects so that they\n   * appear \"offline\" to other users. See\n   * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n   * for more information.\n   *\n   * Note that `onDisconnect` operations are only triggered once. If you want an\n   * operation to occur each time a disconnect occurs, you'll need to re-establish\n   * the `onDisconnect` operations each time.\n   *\n   * @param value - The value to be written to this location on disconnect (can\n   * be an object, array, string, number, boolean, or null).\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  set(value: unknown): Promise<void> {\n    validateWritablePath('OnDisconnect.set', this._path);\n    validateFirebaseDataArg('OnDisconnect.set', value, this._path, false);\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSet(\n      this._repo,\n      this._path,\n      value,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is set to the specified value and priority\n   * when the client is disconnected (due to closing the browser, navigating to a\n   * new page, or network issues).\n   *\n   * @param value - The value to be written to this location on disconnect (can\n   * be an object, array, string, number, boolean, or null).\n   * @param priority - The priority to be written (string, number, or null).\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  setWithPriority(\n    value: unknown,\n    priority: number | string | null\n  ): Promise<void> {\n    validateWritablePath('OnDisconnect.setWithPriority', this._path);\n    validateFirebaseDataArg(\n      'OnDisconnect.setWithPriority',\n      value,\n      this._path,\n      false\n    );\n    validatePriority('OnDisconnect.setWithPriority', priority, false);\n\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSetWithPriority(\n      this._repo,\n      this._path,\n      value,\n      priority,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Writes multiple values at this location when the client is disconnected (due\n   * to closing the browser, navigating to a new page, or network issues).\n   *\n   * The `values` argument contains multiple property-value pairs that will be\n   * written to the Database together. Each child property can either be a simple\n   * property (for example, \"name\") or a relative path (for example, \"name/first\")\n   * from the current location to the data to update.\n   *\n   * As opposed to the `set()` method, `update()` can be use to selectively update\n   * only the referenced properties at the current location (instead of replacing\n   * all the child properties at the current location).\n   *\n   * @param values - Object containing multiple values.\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  update(values: object): Promise<void> {\n    validateWritablePath('OnDisconnect.update', this._path);\n    validateFirebaseMergeDataArg(\n      'OnDisconnect.update',\n      values,\n      this._path,\n      false\n    );\n    const deferred = new Deferred<void>();\n    repoOnDisconnectUpdate(\n      this._repo,\n      this._path,\n      values as Record<string, unknown>,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, getModularInstance, Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoAddEventCallbackForQuery,\n  repoGetValue,\n  repoRemoveEventCallbackForQuery,\n  repoServerTime,\n  repoSetWithPriority,\n  repoUpdate\n} from '../core/Repo';\nimport { ChildrenNode } from '../core/snap/ChildrenNode';\nimport { Index } from '../core/snap/indexes/Index';\nimport { KEY_INDEX } from '../core/snap/indexes/KeyIndex';\nimport { PathIndex } from '../core/snap/indexes/PathIndex';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../core/snap/indexes/ValueIndex';\nimport { Node } from '../core/snap/Node';\nimport { syncPointSetReferenceConstructor } from '../core/SyncPoint';\nimport { syncTreeSetReferenceConstructor } from '../core/SyncTree';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { nextPushId } from '../core/util/NextPushId';\nimport {\n  Path,\n  pathEquals,\n  pathGetBack,\n  pathGetFront,\n  pathChild,\n  pathParent,\n  pathToUrlEncodedString,\n  pathIsEmpty\n} from '../core/util/Path';\nimport {\n  fatal,\n  MAX_NAME,\n  MIN_NAME,\n  ObjectToUniqueKey\n} from '../core/util/util';\nimport {\n  isValidPriority,\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validateKey,\n  validatePathString,\n  validatePriority,\n  validateRootPathString,\n  validateUrl,\n  validateWritablePath\n} from '../core/util/validation';\nimport { Change } from '../core/view/Change';\nimport { CancelEvent, DataEvent, EventType } from '../core/view/Event';\nimport {\n  CallbackContext,\n  EventRegistration,\n  QueryContext,\n  UserCallback\n} from '../core/view/EventRegistration';\nimport {\n  QueryParams,\n  queryParamsEndAt,\n  queryParamsEndBefore,\n  queryParamsGetQueryObject,\n  queryParamsLimitToFirst,\n  queryParamsLimitToLast,\n  queryParamsOrderBy,\n  queryParamsStartAfter,\n  queryParamsStartAt\n} from '../core/view/QueryParams';\n\nimport { Database } from './Database';\nimport { OnDisconnect } from './OnDisconnect';\nimport {\n  ListenOptions,\n  Query as Query,\n  DatabaseReference,\n  Unsubscribe,\n  ThenableReference\n} from './Reference';\n\n/**\n * @internal\n */\nexport class QueryImpl implements Query, QueryContext {\n  /**\n   * @hideconstructor\n   */\n  constructor(\n    readonly _repo: Repo,\n    readonly _path: Path,\n    readonly _queryParams: QueryParams,\n    readonly _orderByCalled: boolean\n  ) {}\n\n  get key(): string | null {\n    if (pathIsEmpty(this._path)) {\n      return null;\n    } else {\n      return pathGetBack(this._path);\n    }\n  }\n\n  get ref(): DatabaseReference {\n    return new ReferenceImpl(this._repo, this._path);\n  }\n\n  get _queryIdentifier(): string {\n    const obj = queryParamsGetQueryObject(this._queryParams);\n    const id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  }\n\n  /**\n   * An object representation of the query parameters used by this Query.\n   */\n  get _queryObject(): object {\n    return queryParamsGetQueryObject(this._queryParams);\n  }\n\n  isEqual(other: QueryImpl | null): boolean {\n    other = getModularInstance(other);\n    if (!(other instanceof QueryImpl)) {\n      return false;\n    }\n\n    const sameRepo = this._repo === other._repo;\n    const samePath = pathEquals(this._path, other._path);\n    const sameQueryIdentifier =\n      this._queryIdentifier === other._queryIdentifier;\n\n    return sameRepo && samePath && sameQueryIdentifier;\n  }\n\n  toJSON(): string {\n    return this.toString();\n  }\n\n  toString(): string {\n    return this._repo.toString() + pathToUrlEncodedString(this._path);\n  }\n}\n\n/**\n * Validates that no other order by call has been made\n */\nfunction validateNoPreviousOrderByCall(query: QueryImpl, fnName: string) {\n  if (query._orderByCalled === true) {\n    throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n  }\n}\n\n/**\n * Validates start/end values for queries.\n */\nfunction validateQueryEndpoints(params: QueryParams) {\n  let startNode = null;\n  let endNode = null;\n  if (params.hasStart()) {\n    startNode = params.getIndexStartValue();\n  }\n  if (params.hasEnd()) {\n    endNode = params.getIndexEndValue();\n  }\n\n  if (params.getIndex() === KEY_INDEX) {\n    const tooManyArgsError =\n      'Query: When ordering by key, you may only pass one argument to ' +\n      'startAt(), endAt(), or equalTo().';\n    const wrongArgTypeError =\n      'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\n      'endAt(), endBefore(), or equalTo() must be a string.';\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      if (startName !== MIN_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof startNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      if (endName !== MAX_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof endNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n  } else if (params.getIndex() === PRIORITY_INDEX) {\n    if (\n      (startNode != null && !isValidPriority(startNode)) ||\n      (endNode != null && !isValidPriority(endNode))\n    ) {\n      throw new Error(\n        'Query: When ordering by priority, the first argument passed to startAt(), ' +\n          'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\n          '(null, a number, or a string).'\n      );\n    }\n  } else {\n    assert(\n      params.getIndex() instanceof PathIndex ||\n        params.getIndex() === VALUE_INDEX,\n      'unknown index type.'\n    );\n    if (\n      (startNode != null && typeof startNode === 'object') ||\n      (endNode != null && typeof endNode === 'object')\n    ) {\n      throw new Error(\n        'Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\n          'equalTo() cannot be an object.'\n      );\n    }\n  }\n}\n\n/**\n * Validates that limit* has been called with the correct combination of parameters\n */\nfunction validateLimit(params: QueryParams) {\n  if (\n    params.hasStart() &&\n    params.hasEnd() &&\n    params.hasLimit() &&\n    !params.hasAnchoredLimit()\n  ) {\n    throw new Error(\n      \"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\n        'limitToFirst() or limitToLast() instead.'\n    );\n  }\n}\n/**\n * @internal\n */\nexport class ReferenceImpl extends QueryImpl implements DatabaseReference {\n  /** @hideconstructor */\n  constructor(repo: Repo, path: Path) {\n    super(repo, path, new QueryParams(), false);\n  }\n\n  get parent(): ReferenceImpl | null {\n    const parentPath = pathParent(this._path);\n    return parentPath === null\n      ? null\n      : new ReferenceImpl(this._repo, parentPath);\n  }\n\n  get root(): ReferenceImpl {\n    let ref: ReferenceImpl = this;\n    while (ref.parent !== null) {\n      ref = ref.parent;\n    }\n    return ref;\n  }\n}\n\n/**\n * A `DataSnapshot` contains data from a Database location.\n *\n * Any time you read data from the Database, you receive the data as a\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\n * JavaScript object by calling the `val()` method. Alternatively, you can\n * traverse into the snapshot by calling `child()` to return child snapshots\n * (which you could then call `val()` on).\n *\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\n * a Database location. It cannot be modified and will never change (to modify\n * data, you always call the `set()` method on a `Reference` directly).\n */\nexport class DataSnapshot {\n  /**\n   * @param _node - A SnapshotNode to wrap.\n   * @param ref - The location this snapshot came from.\n   * @param _index - The iteration order for this snapshot\n   * @hideconstructor\n   */\n  constructor(\n    readonly _node: Node,\n    /**\n     * The location of this DataSnapshot.\n     */\n    readonly ref: DatabaseReference,\n    readonly _index: Index\n  ) {}\n\n  /**\n   * Gets the priority value of the data in this `DataSnapshot`.\n   *\n   * Applications need not use priority but can order collections by\n   * ordinary properties (see\n   * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\n   * ).\n   */\n  get priority(): string | number | null {\n    // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n    return this._node.getPriority().val() as string | number | null;\n  }\n\n  /**\n   * The key (last part of the path) of the location of this `DataSnapshot`.\n   *\n   * The last token in a Database location is considered its key. For example,\n   * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\n   * `DataSnapshot` will return the key for the location that generated it.\n   * However, accessing the key on the root URL of a Database will return\n   * `null`.\n   */\n  get key(): string | null {\n    return this.ref.key;\n  }\n\n  /** Returns the number of child properties of this `DataSnapshot`. */\n  get size(): number {\n    return this._node.numChildren();\n  }\n\n  /**\n   * Gets another `DataSnapshot` for the location at the specified relative path.\n   *\n   * Passing a relative path to the `child()` method of a DataSnapshot returns\n   * another `DataSnapshot` for the location at the specified relative path. The\n   * relative path can either be a simple child name (for example, \"ada\") or a\n   * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\n   * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\n   * whose value is `null`) is returned.\n   *\n   * @param path - A relative path to the location of child data.\n   */\n  child(path: string): DataSnapshot {\n    const childPath = new Path(path);\n    const childRef = child(this.ref, path);\n    return new DataSnapshot(\n      this._node.getChild(childPath),\n      childRef,\n      PRIORITY_INDEX\n    );\n  }\n  /**\n   * Returns true if this `DataSnapshot` contains any data. It is slightly more\n   * efficient than using `snapshot.val() !== null`.\n   */\n  exists(): boolean {\n    return !this._node.isEmpty();\n  }\n\n  /**\n   * Exports the entire contents of the DataSnapshot as a JavaScript object.\n   *\n   * The `exportVal()` method is similar to `val()`, except priority information\n   * is included (if available), making it suitable for backing up your data.\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exportVal(): any {\n    return this._node.val(true);\n  }\n\n  /**\n   * Enumerates the top-level children in the `DataSnapshot`.\n   *\n   * Because of the way JavaScript objects work, the ordering of data in the\n   * JavaScript object returned by `val()` is not guaranteed to match the\n   * ordering on the server nor the ordering of `onChildAdded()` events. That is\n   * where `forEach()` comes in handy. It guarantees the children of a\n   * `DataSnapshot` will be iterated in their query order.\n   *\n   * If no explicit `orderBy*()` method is used, results are returned\n   * ordered by key (unless priorities are used, in which case, results are\n   * returned by priority).\n   *\n   * @param action - A function that will be called for each child DataSnapshot.\n   * The callback can return true to cancel further enumeration.\n   * @returns true if enumeration was canceled due to your callback returning\n   * true.\n   */\n  forEach(action: (child: DataSnapshot) => boolean | void): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    }\n\n    const childrenNode = this._node as ChildrenNode;\n    // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n    return !!childrenNode.forEachChild(this._index, (key, node) => {\n      return action(\n        new DataSnapshot(node, child(this.ref, key), PRIORITY_INDEX)\n      );\n    });\n  }\n\n  /**\n   * Returns true if the specified child path has (non-null) data.\n   *\n   * @param path - A relative path to the location of a potential child.\n   * @returns `true` if data exists at the specified child path; else\n   *  `false`.\n   */\n  hasChild(path: string): boolean {\n    const childPath = new Path(path);\n    return !this._node.getChild(childPath).isEmpty();\n  }\n\n  /**\n   * Returns whether or not the `DataSnapshot` has any non-`null` child\n   * properties.\n   *\n   * You can use `hasChildren()` to determine if a `DataSnapshot` has any\n   * children. If it does, you can enumerate them using `forEach()`. If it\n   * doesn't, then either this snapshot contains a primitive value (which can be\n   * retrieved with `val()`) or it is empty (in which case, `val()` will return\n   * `null`).\n   *\n   * @returns true if this snapshot has any children; else false.\n   */\n  hasChildren(): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    } else {\n      return !this._node.isEmpty();\n    }\n  }\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   */\n  toJSON(): object | null {\n    return this.exportVal();\n  }\n\n  /**\n   * Extracts a JavaScript value from a `DataSnapshot`.\n   *\n   * Depending on the data in a `DataSnapshot`, the `val()` method may return a\n   * scalar type (string, number, or boolean), an array, or an object. It may\n   * also return null, indicating that the `DataSnapshot` is empty (contains no\n   * data).\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  val(): any {\n    return this._node.val();\n  }\n}\n\n/**\n *\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided path. If no path is provided, the `Reference`\n * will point to the root of the Database.\n *\n * @param db - The database instance to obtain a reference for.\n * @param path - Optional path representing the location the returned\n *   `Reference` will point. If not provided, the returned `Reference` will\n *   point to the root of the Database.\n * @returns If a path is provided, a `Reference`\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\n *   root of the Database.\n */\nexport function ref(db: Database, path?: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('ref');\n  return path !== undefined ? child(db._root, path) : db._root;\n}\n\n/**\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided Firebase URL.\n *\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\n * has a different domain than the current `Database` instance.\n *\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\n * and are not applied to the returned `Reference`.\n *\n * @param db - The database instance to obtain a reference for.\n * @param url - The Firebase URL at which the returned `Reference` will\n *   point.\n * @returns A `Reference` pointing to the provided\n *   Firebase URL.\n */\nexport function refFromURL(db: Database, url: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('refFromURL');\n  const parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\n  validateUrl('refFromURL', parsedURL);\n\n  const repoInfo = parsedURL.repoInfo;\n  if (\n    !db._repo.repoInfo_.isCustomHost() &&\n    repoInfo.host !== db._repo.repoInfo_.host\n  ) {\n    fatal(\n      'refFromURL' +\n        ': Host name does not match the current database: ' +\n        '(found ' +\n        repoInfo.host +\n        ' but expected ' +\n        db._repo.repoInfo_.host +\n        ')'\n    );\n  }\n\n  return ref(db, parsedURL.path.toString());\n}\n/**\n * Gets a `Reference` for the location at the specified relative path.\n *\n * The relative path can either be a simple child name (for example, \"ada\") or\n * a deeper slash-separated path (for example, \"ada/name/first\").\n *\n * @param parent - The parent location.\n * @param path - A relative path from this location to the desired child\n *   location.\n * @returns The specified child location.\n */\nexport function child(\n  parent: DatabaseReference,\n  path: string\n): DatabaseReference {\n  parent = getModularInstance(parent);\n  if (pathGetFront(parent._path) === null) {\n    validateRootPathString('child', 'path', path, false);\n  } else {\n    validatePathString('child', 'path', path, false);\n  }\n  return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\n}\n\n/**\n * Returns an `OnDisconnect` object - see\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information on how to use it.\n *\n * @param ref - The reference to add OnDisconnect triggers for.\n */\nexport function onDisconnect(ref: DatabaseReference): OnDisconnect {\n  ref = getModularInstance(ref) as ReferenceImpl;\n  return new OnDisconnect(ref._repo, ref._path);\n}\n\nexport interface ThenableReferenceImpl\n  extends ReferenceImpl,\n    Pick<Promise<ReferenceImpl>, 'then' | 'catch'> {}\n\n/**\n * Generates a new child location using a unique key and returns its\n * `Reference`.\n *\n * This is the most common pattern for adding data to a collection of items.\n *\n * If you provide a value to `push()`, the value is written to the\n * generated location. If you don't pass a value, nothing is written to the\n * database and the child remains empty (but you can use the `Reference`\n * elsewhere).\n *\n * The unique keys generated by `push()` are ordered by the current time, so the\n * resulting list of items is chronologically sorted. The keys are also\n * designed to be unguessable (they contain 72 random bits of entropy).\n *\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}.\n * See {@link https://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}.\n *\n * @param parent - The parent location.\n * @param value - Optional value to be written at the generated location.\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\n * but can be used immediately as the `Reference` to the child location.\n */\nexport function push(\n  parent: DatabaseReference,\n  value?: unknown\n): ThenableReference {\n  parent = getModularInstance(parent);\n  validateWritablePath('push', parent._path);\n  validateFirebaseDataArg('push', value, parent._path, true);\n  const now = repoServerTime(parent._repo);\n  const name = nextPushId(now);\n\n  // push() returns a ThennableReference whose promise is fulfilled with a\n  // regular Reference. We use child() to create handles to two different\n  // references. The first is turned into a ThennableReference below by adding\n  // then() and catch() methods and is used as the return value of push(). The\n  // second remains a regular Reference and is used as the fulfilled value of\n  // the first ThennableReference.\n  const thennablePushRef: Partial<ThenableReferenceImpl> = child(\n    parent,\n    name\n  ) as ReferenceImpl;\n  const pushRef = child(parent, name) as ReferenceImpl;\n\n  let promise: Promise<ReferenceImpl>;\n  if (value != null) {\n    promise = set(pushRef, value).then(() => pushRef);\n  } else {\n    promise = Promise.resolve(pushRef);\n  }\n\n  thennablePushRef.then = promise.then.bind(promise);\n  thennablePushRef.catch = promise.then.bind(promise, undefined);\n  return thennablePushRef as ThenableReferenceImpl;\n}\n\n/**\n * Removes the data at this Database location.\n *\n * Any data at child locations will also be deleted.\n *\n * The effect of the remove will be visible immediately and the corresponding\n * event 'value' will be triggered. Synchronization of the remove to the\n * Firebase servers will also be started, and the returned Promise will resolve\n * when complete. If provided, the onComplete callback will be called\n * asynchronously after synchronization has finished.\n *\n * @param ref - The location to remove.\n * @returns Resolves when remove on server is complete.\n */\nexport function remove(ref: DatabaseReference): Promise<void> {\n  validateWritablePath('remove', ref._path);\n  return set(ref, null);\n}\n\n/**\n * Writes data to this Database location.\n *\n * This will overwrite any data at this location and all child locations.\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\n * all data at this location and all child locations will be deleted.\n *\n * `set()` will remove any priority stored at this location, so if priority is\n * meant to be preserved, you need to use `setWithPriority()` instead.\n *\n * Note that modifying data with `set()` will cancel any pending transactions\n * at that location, so extreme care should be taken if mixing `set()` and\n * `transaction()` to modify the same data.\n *\n * A single `set()` will generate a single \"value\" event at the location where\n * the `set()` was performed.\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function set(ref: DatabaseReference, value: unknown): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('set', ref._path);\n  validateFirebaseDataArg('set', value, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    /*priority=*/ null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Sets a priority for the data at this Database location.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setPriority(\n  ref: DatabaseReference,\n  priority: string | number | null\n): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('setPriority', ref._path);\n  validatePriority('setPriority', priority, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    pathChild(ref._path, '.priority'),\n    priority,\n    null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes data the Database location. Like `set()` but also specifies the\n * priority for that data.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setWithPriority(\n  ref: DatabaseReference,\n  value: unknown,\n  priority: string | number | null\n): Promise<void> {\n  validateWritablePath('setWithPriority', ref._path);\n  validateFirebaseDataArg('setWithPriority', value, ref._path, false);\n  validatePriority('setWithPriority', priority, false);\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\n  }\n\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    priority,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes multiple values to the Database at once.\n *\n * The `values` argument contains multiple property-value pairs that will be\n * written to the Database together. Each child property can either be a simple\n * property (for example, \"name\") or a relative path (for example,\n * \"name/first\") from the current location to the data to update.\n *\n * As opposed to the `set()` method, `update()` can be use to selectively update\n * only the referenced properties at the current location (instead of replacing\n * all the child properties at the current location).\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * A single `update()` will generate a single \"value\" event at the location\n * where the `update()` was performed, regardless of how many children were\n * modified.\n *\n * Note that modifying data with `update()` will cancel any pending\n * transactions at that location, so extreme care should be taken if mixing\n * `update()` and `transaction()` to modify the same data.\n *\n * Passing `null` to `update()` will remove the data at this location.\n *\n * See\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\n *\n * @param ref - The location to write to.\n * @param values - Object containing multiple values.\n * @returns Resolves when update on server is complete.\n */\nexport function update(ref: DatabaseReference, values: object): Promise<void> {\n  validateFirebaseMergeDataArg('update', values, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoUpdate(\n    ref._repo,\n    ref._path,\n    values as Record<string, unknown>,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Gets the most up-to-date result for this query.\n *\n * @param query - The query to run.\n * @returns A `Promise` which resolves to the resulting DataSnapshot if a value is\n * available, or rejects if the client is unable to return a value (e.g., if the\n * server is unreachable and there is nothing cached).\n */\nexport function get(query: Query): Promise<DataSnapshot> {\n  query = getModularInstance(query) as QueryImpl;\n  const callbackContext = new CallbackContext(() => {});\n  const container = new ValueEventRegistration(callbackContext);\n  return repoGetValue(query._repo, query, container).then(node => {\n    return new DataSnapshot(\n      node,\n      new ReferenceImpl(query._repo, query._path),\n      query._queryParams.getIndex()\n    );\n  });\n}\n/**\n * Represents registration for 'value' events.\n */\nexport class ValueEventRegistration implements EventRegistration {\n  constructor(private callbackContext: CallbackContext) {}\n\n  respondsTo(eventType: string): boolean {\n    return eventType === 'value';\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      'value',\n      this,\n      new DataSnapshot(\n        change.snapshotNode,\n        new ReferenceImpl(query._repo, query._path),\n        index\n      )\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue((eventData as DataEvent).snapshot, null);\n    }\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callbackContext || !this.callbackContext) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callbackContext.matches(this.callbackContext);\n    }\n  }\n\n  hasAnyCallback(): boolean {\n    return this.callbackContext !== null;\n  }\n}\n\n/**\n * Represents the registration of a child_x event.\n */\nexport class ChildEventRegistration implements EventRegistration {\n  constructor(\n    private eventType: string,\n    private callbackContext: CallbackContext | null\n  ) {}\n\n  respondsTo(eventType: string): boolean {\n    let eventToCheck =\n      eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck =\n      eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return this.eventType === eventToCheck;\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    assert(change.childName != null, 'Child events should have a childName.');\n    const childRef = child(\n      new ReferenceImpl(query._repo, query._path),\n      change.childName\n    );\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      change.type as EventType,\n      this,\n      new DataSnapshot(change.snapshotNode, childRef, index),\n      change.prevName\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue(\n          (eventData as DataEvent).snapshot,\n          (eventData as DataEvent).prevName\n        );\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (other instanceof ChildEventRegistration) {\n      return (\n        this.eventType === other.eventType &&\n        (!this.callbackContext ||\n          !other.callbackContext ||\n          this.callbackContext.matches(other.callbackContext))\n      );\n    }\n\n    return false;\n  }\n\n  hasAnyCallback(): boolean {\n    return !!this.callbackContext;\n  }\n}\n\nfunction addEventListener(\n  query: Query,\n  eventType: EventType,\n  callback: UserCallback,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n) {\n  let cancelCallback: ((error: Error) => unknown) | undefined;\n  if (typeof cancelCallbackOrListenOptions === 'object') {\n    cancelCallback = undefined;\n    options = cancelCallbackOrListenOptions;\n  }\n  if (typeof cancelCallbackOrListenOptions === 'function') {\n    cancelCallback = cancelCallbackOrListenOptions;\n  }\n\n  if (options && options.onlyOnce) {\n    const userCallback = callback;\n    const onceCallback: UserCallback = (dataSnapshot, previousChildName) => {\n      repoRemoveEventCallbackForQuery(query._repo, query, container);\n      userCallback(dataSnapshot, previousChildName);\n    };\n    onceCallback.userCallback = callback.userCallback;\n    onceCallback.context = callback.context;\n    callback = onceCallback;\n  }\n\n  const callbackContext = new CallbackContext(\n    callback,\n    cancelCallback || undefined\n  );\n  const container =\n    eventType === 'value'\n      ? new ValueEventRegistration(callbackContext)\n      : new ChildEventRegistration(eventType, callbackContext);\n  repoAddEventCallbackForQuery(query._repo, query, container);\n  return () => repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'value',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_added',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_changed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_moved',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_removed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\nexport { EventType };\n\n/**\n * Detaches a callback previously attached with the corresponding `on*()` (`onValue`, `onChildAdded`) listener.\n * Note: This is not the recommended way to remove a listener. Instead, please use the returned callback function from\n * the respective `on*` callbacks.\n *\n * Detach a callback previously attached with `on*()`. Calling `off()` on a parent listener\n * will not automatically remove listeners registered on child nodes, `off()`\n * must also be called on any child listeners to remove the callback.\n *\n * If a callback is not specified, all callbacks for the specified eventType\n * will be removed. Similarly, if no eventType is specified, all callbacks\n * for the `Reference` will be removed.\n *\n * Individual listeners can also be removed by invoking their unsubscribe\n * callbacks.\n *\n * @param query - The query that the listener was registered with.\n * @param eventType - One of the following strings: \"value\", \"child_added\",\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\n * for the `Reference` will be removed.\n * @param callback - The callback function that was passed to `on()` or\n * `undefined` to remove all callbacks.\n */\nexport function off(\n  query: Query,\n  eventType?: EventType,\n  callback?: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown\n): void {\n  let container: EventRegistration | null = null;\n  const expCallback = callback ? new CallbackContext(callback) : null;\n  if (eventType === 'value') {\n    container = new ValueEventRegistration(expCallback);\n  } else if (eventType) {\n    container = new ChildEventRegistration(eventType, expCallback);\n  }\n  repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/** Describes the different query constraints available in this SDK. */\nexport type QueryConstraintType =\n  | 'endAt'\n  | 'endBefore'\n  | 'startAt'\n  | 'startAfter'\n  | 'limitToFirst'\n  | 'limitToLast'\n  | 'orderByChild'\n  | 'orderByKey'\n  | 'orderByPriority'\n  | 'orderByValue'\n  | 'equalTo';\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\n * {@link orderByValue}  or {@link equalTo} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nexport abstract class QueryConstraint {\n  /** The type of this query constraints */\n  abstract readonly type: QueryConstraintType;\n\n  /**\n   * Takes the provided `Query` and returns a copy of the `Query` with this\n   * `QueryConstraint` applied.\n   */\n  abstract _apply<T>(query: QueryImpl): QueryImpl;\n}\n\nclass QueryEndAtConstraint extends QueryConstraint {\n  readonly type: 'endAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endAt', this._value, query._path, true);\n    const newParams = queryParamsEndAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endAt: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name less than or equal\n * to the specified key.\n *\n * You can read more about `endAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to end at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end at, among the children with the previously\n * specified priority. This argument is only allowed if ordering by child,\n * value, or priority.\n */\nexport function endAt(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endAt', 'key', key, true);\n  return new QueryEndAtConstraint(value, key);\n}\n\nclass QueryEndBeforeConstraint extends QueryConstraint {\n  readonly type: 'endBefore';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endBefore', this._value, query._path, false);\n    const newParams = queryParamsEndBefore(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endBefore: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is exclusive. If only a value is provided, children\n * with a value less than the specified value will be included in the query.\n * If a key is specified, then children must have a value less than or equal\n * to the specified value and a key name less than the specified key.\n *\n * @param value - The value to end before. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end before, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function endBefore(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endBefore', 'key', key, true);\n  return new QueryEndBeforeConstraint(value, key);\n}\n\nclass QueryStartAtConstraint extends QueryConstraint {\n  readonly type: 'startAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAt', this._value, query._path, true);\n    const newParams = queryParamsStartAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAt: Starting point was already set (by another call to startAt, ' +\n          'startBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name greater than or\n * equal to the specified key.\n *\n * You can read more about `startAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to start at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAt(\n  value: number | string | boolean | null = null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAt', 'key', key, true);\n  return new QueryStartAtConstraint(value, key);\n}\n\nclass QueryStartAfterConstraint extends QueryConstraint {\n  readonly type: 'startAfter';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAfter', this._value, query._path, false);\n    const newParams = queryParamsStartAfter(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAfter: Starting point was already set (by another call to startAt, ' +\n          'startAfter, or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is exclusive. If only a value is provided, children\n * with a value greater than the specified value will be included in the query.\n * If a key is specified, then children must have a value greater than or equal\n * to the specified value and a a key name greater than the specified key.\n *\n * @param value - The value to start after. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start after. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAfter(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAfter', 'key', key, true);\n  return new QueryStartAfterConstraint(value, key);\n}\n\nclass QueryLimitToFirstConstraint extends QueryConstraint {\n  readonly type: 'limitToFirst';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToFirst: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToFirst(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that if limited to the first specific number\n * of children.\n *\n * The `limitToFirst()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the first 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToFirst()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToFirst(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToFirst: First argument must be a positive integer.');\n  }\n  return new QueryLimitToFirstConstraint(limit);\n}\n\nclass QueryLimitToLastConstraint extends QueryConstraint {\n  readonly type: 'limitToLast';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToLast: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToLast(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that is limited to return only the last\n * specified number of children.\n *\n * The `limitToLast()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the last 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToLast()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToLast(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToLast: First argument must be a positive integer.');\n  }\n\n  return new QueryLimitToLastConstraint(limit);\n}\n\nclass QueryOrderByChildConstraint extends QueryConstraint {\n  readonly type: 'orderByChild';\n\n  constructor(private readonly _path: string) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByChild');\n    const parsedPath = new Path(this._path);\n    if (pathIsEmpty(parsedPath)) {\n      throw new Error(\n        'orderByChild: cannot pass in empty path. Use orderByValue() instead.'\n      );\n    }\n    const index = new PathIndex(parsedPath);\n    const newParams = queryParamsOrderBy(query._queryParams, index);\n    validateQueryEndpoints(newParams);\n\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the specified child key.\n *\n * Queries can only order by one key at a time. Calling `orderByChild()`\n * multiple times on the same query is an error.\n *\n * Firebase queries allow you to order your data by any child key on the fly.\n * However, if you know in advance what your indexes will be, you can define\n * them via the .indexOn rule in your Security Rules for better performance. See\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\n * rule for more information.\n *\n * You can read more about `orderByChild()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n *\n * @param path - The path to order by.\n */\nexport function orderByChild(path: string): QueryConstraint {\n  if (path === '$key') {\n    throw new Error(\n      'orderByChild: \"$key\" is invalid.  Use orderByKey() instead.'\n    );\n  } else if (path === '$priority') {\n    throw new Error(\n      'orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.'\n    );\n  } else if (path === '$value') {\n    throw new Error(\n      'orderByChild: \"$value\" is invalid.  Use orderByValue() instead.'\n    );\n  }\n  validatePathString('orderByChild', 'path', path, false);\n  return new QueryOrderByChildConstraint(path);\n}\n\nclass QueryOrderByKeyConstraint extends QueryConstraint {\n  readonly type: 'orderByKey';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByKey');\n    const newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the key.\n *\n * Sorts the results of a query by their (ascending) key values.\n *\n * You can read more about `orderByKey()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByKey(): QueryConstraint {\n  return new QueryOrderByKeyConstraint();\n}\n\nclass QueryOrderByPriorityConstraint extends QueryConstraint {\n  readonly type: 'orderByPriority';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByPriority');\n    const newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by priority.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\n * for alternatives to priority.\n */\nexport function orderByPriority(): QueryConstraint {\n  return new QueryOrderByPriorityConstraint();\n}\n\nclass QueryOrderByValueConstraint extends QueryConstraint {\n  readonly type: 'orderByValue';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByValue');\n    const newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by value.\n *\n * If the children of a query are all scalar values (string, number, or\n * boolean), you can order the results by their (ascending) values.\n *\n * You can read more about `orderByValue()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByValue(): QueryConstraint {\n  return new QueryOrderByValueConstraint();\n}\n\nclass QueryEqualToValueConstraint extends QueryConstraint {\n  readonly type: 'equalTo';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('equalTo', this._value, query._path, false);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\n          'equalTo).'\n      );\n    }\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\n          'equalTo).'\n      );\n    }\n    return new QueryEndAtConstraint(this._value, this._key)._apply(\n      new QueryStartAtConstraint(this._value, this._key)._apply(query)\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` that includes children that match the specified\n * value.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The optional key argument can be used to further limit the range of the\n * query. If it is specified, then children that have exactly the specified\n * value must also have exactly the specified key as their key name. This can be\n * used to filter result sets with many matches for the same value.\n *\n * You can read more about `equalTo()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to match for. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function equalTo(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('equalTo', 'key', key, true);\n  return new QueryEqualToValueConstraint(value, key);\n}\n\n/**\n * Creates a new immutable instance of `Query` that is extended to also include\n * additional query constraints.\n *\n * @param query - The Query instance to use as a base for the new constraints.\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */\nexport function query(\n  query: Query,\n  ...queryConstraints: QueryConstraint[]\n): Query {\n  let queryImpl = getModularInstance(query) as QueryImpl;\n  for (const constraint of queryConstraints) {\n    queryImpl = constraint._apply(queryImpl);\n  }\n  return queryImpl;\n}\n\n/**\n * Define reference constructor in various modules\n *\n * We are doing this here to avoid several circular\n * dependency issues\n */\nsyncPointSetReferenceConstructor(ReferenceImpl);\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _FirebaseService,\n  _getProvider,\n  FirebaseApp,\n  getApp\n} from '@firebase/app';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\nimport {\n  getModularInstance,\n  createMockUserToken,\n  EmulatorMockTokenOptions,\n  getDefaultEmulatorHostnameAndPort\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from '../core/AppCheckTokenProvider';\nimport {\n  AuthTokenProvider,\n  EmulatorTokenProvider,\n  FirebaseAuthTokenProvider\n} from '../core/AuthTokenProvider';\nimport { Repo, repoInterrupt, repoResume, repoStart } from '../core/Repo';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { newEmptyPath, pathIsEmpty } from '../core/util/Path';\nimport {\n  warn,\n  fatal,\n  log,\n  enableLogging as enableLoggingImpl\n} from '../core/util/util';\nimport { validateUrl } from '../core/util/validation';\nimport { BrowserPollConnection } from '../realtime/BrowserPollConnection';\nimport { TransportManager } from '../realtime/TransportManager';\nimport { WebSocketConnection } from '../realtime/WebSocketConnection';\n\nimport { ReferenceImpl } from './Reference_impl';\n\nexport { EmulatorMockTokenOptions } from '@firebase/util';\n/**\n * This variable is also defined in the firebase Node.js Admin SDK. Before\n * modifying this definition, consult the definition in:\n *\n * https://github.com/firebase/firebase-admin-node\n *\n * and make sure the two are consistent.\n */\nconst FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n\n/**\n * Creates and caches `Repo` instances.\n */\nconst repos: {\n  [appName: string]: {\n    [dbUrl: string]: Repo;\n  };\n} = {};\n\n/**\n * If true, any new `Repo` will be created to use `ReadonlyRestClient` (for testing purposes).\n */\nlet useRestClient = false;\n\n/**\n * Update an existing `Repo` in place to point to a new host/port.\n */\nfunction repoManagerApplyEmulatorSettings(\n  repo: Repo,\n  host: string,\n  port: number,\n  tokenProvider?: AuthTokenProvider\n): void {\n  repo.repoInfo_ = new RepoInfo(\n    `${host}:${port}`,\n    /* secure= */ false,\n    repo.repoInfo_.namespace,\n    repo.repoInfo_.webSocketOnly,\n    repo.repoInfo_.nodeAdmin,\n    repo.repoInfo_.persistenceKey,\n    repo.repoInfo_.includeNamespaceInQueryParams,\n    /*isUsingEmulator=*/ true\n  );\n\n  if (tokenProvider) {\n    repo.authTokenProvider_ = tokenProvider;\n  }\n}\n\n/**\n * This function should only ever be called to CREATE a new database instance.\n * @internal\n */\nexport function repoManagerDatabaseFromApp(\n  app: FirebaseApp,\n  authProvider: Provider<FirebaseAuthInternalName>,\n  appCheckProvider?: Provider<AppCheckInternalComponentName>,\n  url?: string,\n  nodeAdmin?: boolean\n): Database {\n  let dbUrl: string | undefined = url || app.options.databaseURL;\n  if (dbUrl === undefined) {\n    if (!app.options.projectId) {\n      fatal(\n        \"Can't determine Firebase Database URL. Be sure to include \" +\n          ' a Project ID when calling firebase.initializeApp().'\n      );\n    }\n\n    log('Using default host for project ', app.options.projectId);\n    dbUrl = `${app.options.projectId}-default-rtdb.firebaseio.com`;\n  }\n\n  let parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n  let repoInfo = parsedUrl.repoInfo;\n\n  let isEmulator: boolean;\n\n  let dbEmulatorHost: string | undefined = undefined;\n  if (typeof process !== 'undefined' && process.env) {\n    dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n  }\n\n  if (dbEmulatorHost) {\n    isEmulator = true;\n    dbUrl = `http://${dbEmulatorHost}?ns=${repoInfo.namespace}`;\n    parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    repoInfo = parsedUrl.repoInfo;\n  } else {\n    isEmulator = !parsedUrl.repoInfo.secure;\n  }\n\n  const authTokenProvider =\n    nodeAdmin && isEmulator\n      ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER)\n      : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\n\n  validateUrl('Invalid Firebase Database URL', parsedUrl);\n  if (!pathIsEmpty(parsedUrl.path)) {\n    fatal(\n      'Database URL must point to the root of a Firebase Database ' +\n        '(not including a child path).'\n    );\n  }\n\n  const repo = repoManagerCreateRepo(\n    repoInfo,\n    app,\n    authTokenProvider,\n    new AppCheckTokenProvider(app.name, appCheckProvider)\n  );\n  return new Database(repo, app);\n}\n\n/**\n * Remove the repo and make sure it is disconnected.\n *\n */\nfunction repoManagerDeleteRepo(repo: Repo, appName: string): void {\n  const appRepos = repos[appName];\n  // This should never happen...\n  if (!appRepos || appRepos[repo.key] !== repo) {\n    fatal(`Database ${appName}(${repo.repoInfo_}) has already been deleted.`);\n  }\n  repoInterrupt(repo);\n  delete appRepos[repo.key];\n}\n\n/**\n * Ensures a repo doesn't already exist and then creates one using the\n * provided app.\n *\n * @param repoInfo - The metadata about the Repo\n * @returns The Repo object for the specified server / repoName.\n */\nfunction repoManagerCreateRepo(\n  repoInfo: RepoInfo,\n  app: FirebaseApp,\n  authTokenProvider: AuthTokenProvider,\n  appCheckProvider: AppCheckTokenProvider\n): Repo {\n  let appRepos = repos[app.name];\n\n  if (!appRepos) {\n    appRepos = {};\n    repos[app.name] = appRepos;\n  }\n\n  let repo = appRepos[repoInfo.toURLString()];\n  if (repo) {\n    fatal(\n      'Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.'\n    );\n  }\n  repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\n  appRepos[repoInfo.toURLString()] = repo;\n\n  return repo;\n}\n\n/**\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\n */\nexport function repoManagerForceRestClient(forceRestClient: boolean): void {\n  useRestClient = forceRestClient;\n}\n\n/**\n * Class representing a Firebase Realtime Database.\n */\nexport class Database implements _FirebaseService {\n  /** Represents a `Database` instance. */\n  readonly 'type' = 'database';\n\n  /** Track if the instance has been used (root or repo accessed) */\n  _instanceStarted: boolean = false;\n\n  /** Backing state for root_ */\n  private _rootInternal?: ReferenceImpl;\n\n  /** @hideconstructor */\n  constructor(\n    public _repoInternal: Repo,\n    /** The {@link @firebase/app#FirebaseApp} associated with this Realtime Database instance. */\n    readonly app: FirebaseApp\n  ) {}\n\n  get _repo(): Repo {\n    if (!this._instanceStarted) {\n      repoStart(\n        this._repoInternal,\n        this.app.options.appId,\n        this.app.options['databaseAuthVariableOverride']\n      );\n      this._instanceStarted = true;\n    }\n    return this._repoInternal;\n  }\n\n  get _root(): ReferenceImpl {\n    if (!this._rootInternal) {\n      this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\n    }\n    return this._rootInternal;\n  }\n\n  _delete(): Promise<void> {\n    if (this._rootInternal !== null) {\n      repoManagerDeleteRepo(this._repo, this.app.name);\n      this._repoInternal = null;\n      this._rootInternal = null;\n    }\n    return Promise.resolve();\n  }\n\n  _checkNotDeleted(apiName: string) {\n    if (this._rootInternal === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }\n}\n\nfunction checkTransportInit() {\n  if (TransportManager.IS_TRANSPORT_INITIALIZED) {\n    warn(\n      'Transport has already been initialized. Please call this function before calling ref or setting up a listener'\n    );\n  }\n}\n\n/**\n * Force the use of websockets instead of longPolling.\n */\nexport function forceWebSockets() {\n  checkTransportInit();\n  BrowserPollConnection.forceDisallow();\n}\n\n/**\n * Force the use of longPolling instead of websockets. This will be ignored if websocket protocol is used in databaseURL.\n */\nexport function forceLongPolling() {\n  checkTransportInit();\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n}\n\n/**\n * Returns the instance of the Realtime Database SDK that is associated\n * with the provided {@link @firebase/app#FirebaseApp}. Initializes a new instance with\n * with default settings if no instance exists or if the existing instance uses\n * a custom database URL.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned Realtime\n * Database instance is associated with.\n * @param url - The URL of the Realtime Database instance to connect to. If not\n * provided, the SDK connects to the default instance of the Firebase App.\n * @returns The `Database` instance of the provided app.\n */\nexport function getDatabase(\n  app: FirebaseApp = getApp(),\n  url?: string\n): Database {\n  const db = _getProvider(app, 'database').getImmediate({\n    identifier: url\n  }) as Database;\n  if (!db._instanceStarted) {\n    const emulator = getDefaultEmulatorHostnameAndPort('database');\n    if (emulator) {\n      connectDatabaseEmulator(db, ...emulator);\n    }\n  }\n  return db;\n}\n\n/**\n * Modify the provided instance to communicate with the Realtime Database\n * emulator.\n *\n * <p>Note: This method must be called before performing any other operation.\n *\n * @param db - The instance to modify.\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 8080)\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\n */\nexport function connectDatabaseEmulator(\n  db: Database,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('useEmulator');\n  if (db._instanceStarted) {\n    fatal(\n      'Cannot call useEmulator() after instance has already been initialized.'\n    );\n  }\n\n  const repo = db._repoInternal;\n  let tokenProvider: EmulatorTokenProvider | undefined = undefined;\n  if (repo.repoInfo_.nodeAdmin) {\n    if (options.mockUserToken) {\n      fatal(\n        'mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".'\n      );\n    }\n    tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\n  } else if (options.mockUserToken) {\n    const token =\n      typeof options.mockUserToken === 'string'\n        ? options.mockUserToken\n        : createMockUserToken(options.mockUserToken, db.app.options.projectId);\n    tokenProvider = new EmulatorTokenProvider(token);\n  }\n\n  // Modify the repo to apply emulator settings\n  repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider);\n}\n\n/**\n * Disconnects from the server (all Database operations will be completed\n * offline).\n *\n * The client automatically maintains a persistent connection to the Database\n * server, which will remain active indefinitely and reconnect when\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\n * to control the client connection in cases where a persistent connection is\n * undesirable.\n *\n * While offline, the client will no longer receive data updates from the\n * Database. However, all Database operations performed locally will continue to\n * immediately fire events, allowing your application to continue behaving\n * normally. Additionally, each operation performed locally will automatically\n * be queued and retried upon reconnection to the Database server.\n *\n * To reconnect to the Database and begin receiving remote events, see\n * `goOnline()`.\n *\n * @param db - The instance to disconnect.\n */\nexport function goOffline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOffline');\n  repoInterrupt(db._repo);\n}\n\n/**\n * Reconnects to the server and synchronizes the offline Database state\n * with the server state.\n *\n * This method should be used after disabling the active connection with\n * `goOffline()`. Once reconnected, the client will transmit the proper data\n * and fire the appropriate events so that your client \"catches up\"\n * automatically.\n *\n * @param db - The instance to reconnect.\n */\nexport function goOnline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOnline');\n  repoResume(db._repo);\n}\n\n/**\n * Logs debugging information to the console.\n *\n * @param enabled - Enables logging if `true`, disables logging if `false`.\n * @param persistent - Remembers the logging state between page refreshes if\n * `true`.\n */\nexport function enableLogging(enabled: boolean, persistent?: boolean);\n\n/**\n * Logs debugging information to the console.\n *\n * @param logger - A custom logger function to control how things get logged.\n */\nexport function enableLogging(logger: (message: string) => unknown);\n\nexport function enableLogging(\n  logger: boolean | ((message: string) => unknown),\n  persistent?: boolean\n): void {\n  enableLoggingImpl(logger, persistent);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _registerComponent,\n  registerVersion,\n  SDK_VERSION\n} from '@firebase/app';\nimport { Component, ComponentType } from '@firebase/component';\n\nimport { name, version } from '../package.json';\nimport { setSDKVersion } from '../src/core/version';\n\nimport { repoManagerDatabaseFromApp } from './api/Database';\n\nexport function registerDatabase(variant?: string): void {\n  setSDKVersion(SDK_VERSION);\n  _registerComponent(\n    new Component(\n      'database',\n      (container, { instanceIdentifier: url }) => {\n        const app = container.getProvider('app').getImmediate()!;\n        const authProvider = container.getProvider('auth-internal');\n        const appCheckProvider = container.getProvider('app-check-internal');\n        return repoManagerDatabaseFromApp(\n          app,\n          authProvider,\n          appCheckProvider,\n          url\n        );\n      },\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst SERVER_TIMESTAMP = {\n  '.sv': 'timestamp'\n};\n\n/**\n * Returns a placeholder value for auto-populating the current timestamp (time\n * since the Unix epoch, in milliseconds) as determined by the Firebase\n * servers.\n */\nexport function serverTimestamp(): object {\n  return SERVER_TIMESTAMP;\n}\n\n/**\n * Returns a placeholder value that can be used to atomically increment the\n * current database value by the provided delta.\n *\n * @param delta - the amount to modify the current value atomically.\n * @returns A placeholder value for modifying data atomically server-side.\n */\nexport function increment(delta: number): object {\n  return {\n    '.sv': {\n      'increment': delta\n    }\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getModularInstance, Deferred } from '@firebase/util';\n\nimport { repoStartTransaction } from '../core/Repo';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { Node } from '../core/snap/Node';\nimport { validateWritablePath } from '../core/util/validation';\n\nimport { DatabaseReference } from './Reference';\nimport { DataSnapshot, onValue, ReferenceImpl } from './Reference_impl';\n\n/** An options object to configure transactions. */\nexport interface TransactionOptions {\n  /**\n   * By default, events are raised each time the transaction update function\n   * runs. So if it is run multiple times, you may see intermediate states. You\n   * can set this to false to suppress these intermediate states and instead\n   * wait until the transaction has completed before events are raised.\n   */\n  readonly applyLocally?: boolean;\n}\n\n/**\n * A type for the resolve value of {@link runTransaction}.\n */\nexport class TransactionResult {\n  /** @hideconstructor */\n  constructor(\n    /** Whether the transaction was successfully committed. */\n    readonly committed: boolean,\n    /** The resulting data snapshot. */\n    readonly snapshot: DataSnapshot\n  ) {}\n\n  /** Returns a JSON-serializable representation of this object. */\n  toJSON(): object {\n    return { committed: this.committed, snapshot: this.snapshot.toJSON() };\n  }\n}\n\n/**\n * Atomically modifies the data at this location.\n *\n * Atomically modify the data at this location. Unlike a normal `set()`, which\n * just overwrites the data regardless of its previous value, `runTransaction()` is\n * used to modify the existing value to a new value, ensuring there are no\n * conflicts with other clients writing to the same location at the same time.\n *\n * To accomplish this, you pass `runTransaction()` an update function which is\n * used to transform the current value into a new value. If another client\n * writes to the location before your new value is successfully written, your\n * update function will be called again with the new current value, and the\n * write will be retried. This will happen repeatedly until your write succeeds\n * without conflict or you abort the transaction by not returning a value from\n * your update function.\n *\n * Note: Modifying data with `set()` will cancel any pending transactions at\n * that location, so extreme care should be taken if mixing `set()` and\n * `runTransaction()` to update the same data.\n *\n * Note: When using transactions with Security and Firebase Rules in place, be\n * aware that a client needs `.read` access in addition to `.write` access in\n * order to perform a transaction. This is because the client-side nature of\n * transactions requires the client to read the data in order to transactionally\n * update it.\n *\n * @param ref - The location to atomically modify.\n * @param transactionUpdate - A developer-supplied function which will be passed\n * the current data stored at this location (as a JavaScript object). The\n * function should return the new value it would like written (as a JavaScript\n * object). If `undefined` is returned (i.e. you return with no arguments) the\n * transaction will be aborted and the data at this location will not be\n * modified.\n * @param options - An options object to configure transactions.\n * @returns A `Promise` that can optionally be used instead of the `onComplete`\n * callback to handle success and failure.\n */\nexport function runTransaction(\n  ref: DatabaseReference,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  transactionUpdate: (currentData: any) => unknown,\n  options?: TransactionOptions\n): Promise<TransactionResult> {\n  ref = getModularInstance(ref);\n\n  validateWritablePath('Reference.transaction', ref._path);\n\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw (\n      'Reference.transaction failed: ' + ref.key + ' is a read-only object.'\n    );\n  }\n\n  const applyLocally = options?.applyLocally ?? true;\n  const deferred = new Deferred<TransactionResult>();\n\n  const promiseComplete = (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => {\n    let dataSnapshot: DataSnapshot | null = null;\n    if (error) {\n      deferred.reject(error);\n    } else {\n      dataSnapshot = new DataSnapshot(\n        node,\n        new ReferenceImpl(ref._repo, ref._path),\n        PRIORITY_INDEX\n      );\n      deferred.resolve(new TransactionResult(committed, dataSnapshot));\n    }\n  };\n\n  // Add a watch to make sure we get server updates.\n  const unwatcher = onValue(ref, () => {});\n\n  repoStartTransaction(\n    ref._repo,\n    ref._path,\n    transactionUpdate,\n    promiseComplete,\n    unwatcher,\n    applyLocally\n  );\n\n  return deferred.promise;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PersistentConnection } from '../core/PersistentConnection';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { Connection } from '../realtime/Connection';\n\nimport { repoManagerForceRestClient } from './Database';\n\nexport const DataConnection = PersistentConnection;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).simpleListen = function (\n  pathString: string,\n  onComplete: (a: unknown) => void\n) {\n  this.sendRequest('q', { p: pathString }, onComplete);\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).echo = function (\n  data: unknown,\n  onEcho: (a: unknown) => void\n) {\n  this.sendRequest('echo', { d: data }, onEcho);\n};\n\n// RealTimeConnection properties that we use in tests.\nexport const RealTimeConnection = Connection;\n\n/**\n * @internal\n */\nexport const hijackHash = function (newHash: () => string) {\n  const oldPut = PersistentConnection.prototype.put;\n  PersistentConnection.prototype.put = function (\n    pathString,\n    data,\n    onComplete,\n    hash\n  ) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n\nexport const ConnectionTarget = RepoInfo;\n\n/**\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\n * @internal\n */\nexport const forceRestClient = function (forceRestClient: boolean) {\n  repoManagerForceRestClient(forceRestClient);\n};\n","/**\n * Firebase Realtime Database\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Database } from './api/Database';\nimport { registerDatabase } from './register';\n\nexport * from './api';\n\nregisterDatabase();\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'database': Database;\n  }\n}\n","import {initializeApp} from 'firebase/app'\r\nimport { getDatabase, ref, onValue, get, child } from \"firebase/database\"\r\n\r\n// Initialize Firebase\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAjWZQCOzbCbk-WCNFcnEa63IKBLeN__rE\",\r\n    authDomain: \"greenhouse-data-ba439.firebaseapp.com\",\r\n    databaseURL: \"https://greenhouse-data-ba439-default-rtdb.firebaseio.com\",\r\n    projectId: \"greenhouse-data-ba439\",\r\n    storageBucket: \"greenhouse-data-ba439.appspot.com\",\r\n    messagingSenderId: \"441207116334\",\r\n    appId: \"1:441207116334:web:886fda5e3ca917181a05bf\",\r\n    measurementId: \"G-VNCV0J82WB\"\r\n  };\r\n  \r\n  \r\n  // Initialize Firebase\r\n  const app = initializeApp(firebaseConfig);\r\n  \r\n  // Initialize Realtime Database and get a reference to the service\r\n  const db = getDatabase(app);\r\n  var x = [];\r\n  var y = [];\r\n  \r\n  // Get the data from Firebase\r\n  const readingsRef = ref(db, '/')\r\n  get(child(readingsRef, `/`)).then((snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const records = snapshot.val()\r\n      Object.keys(records).forEach((key) => {\r\n        x.push(records[key].Timestamp)\r\n        y.push(records[key].Temperature)\r\n        console.log(records[key].Temperature)\r\n      });\r\n          //   // Render the chart\r\n    \r\n    const TESTER = document.getElementById('tester');\r\n    Plotly.newPlot( TESTER, [{\r\n    x: x,\r\n    y: y }], {\r\n    margin: { t: 0 }});\r\n    var tempData = [\r\n      {\r\n        domain: { x: [0, 1], y: [0, 1] },\r\n        value: y[y.length - 2],\r\n        title: { text: \"Temperature\" },\r\n        type: \"indicator\",\r\n        mode: \"gauge+number\",\r\n        delta: { reference: 400 },\r\n        gauge: { axis: { range: [null, 140] } }\r\n      }\r\n    ];\r\n    \r\n    var layout = { width: 600, height: 400 };\r\n    Plotly.newPlot('angular-chart', tempData, layout);\r\n    }})\r\n\r\n\r\n    \r\n    // .once('value')\r\n    // .then((snapshot) => {\r\n    //   snapshot.forEach((childSnapshot) => {\r\n    //     const reading = childSnapshot.val();\r\n    //     data.labels.push(new Date(reading.timestamp));\r\n    //     data.datasets[0].data.push(reading.temperature);\r\n    //   });"]}